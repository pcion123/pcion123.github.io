<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Pcion&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://pcion123.github.io/"/>
  <updated>2025-10-11T15:42:59.118Z</updated>
  <id>https://pcion123.github.io/</id>
  
  <author>
    <name>Jason Lai</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Kubernetes Deployment 使用指南</title>
    <link href="https://pcion123.github.io/2025/10/11/kubernetes-deployment/"/>
    <id>https://pcion123.github.io/2025/10/11/kubernetes-deployment/</id>
    <published>2025-10-11T15:20:40.000Z</published>
    <updated>2025-10-11T15:42:59.118Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Kubernetes-Deployment-使用指南"><a href="#Kubernetes-Deployment-使用指南" class="headerlink" title="Kubernetes Deployment 使用指南"></a>Kubernetes Deployment 使用指南</h1><h2 id="什麼是-Deployment？"><a href="#什麼是-Deployment？" class="headerlink" title="什麼是 Deployment？"></a>什麼是 Deployment？</h2><p>Kubernetes Deployment 是一個 API 物件，用於管理應用程式的宣告式部署和更新。Deployment 提供了對 Pod 和 ReplicaSet 的管理功能，確保應用程式能夠穩定運行並支援無縫更新。</p><h3 id="Deployment-的主要功能："><a href="#Deployment-的主要功能：" class="headerlink" title="Deployment 的主要功能："></a>Deployment 的主要功能：</h3><ul><li><strong>副本管理</strong>：維護指定數量的 Pod 副本，確保服務的高可用性</li><li><strong>滾動更新</strong>：支援零停機時間的應用程式更新</li><li><strong>版本回滾</strong>：快速回滾到先前的應用程式版本</li><li><strong>擴縮容</strong>：根據需求動態調整 Pod 的數量</li></ul><h3 id="為什麼使用-Deployment？"><a href="#為什麼使用-Deployment？" class="headerlink" title="為什麼使用 Deployment？"></a>為什麼使用 Deployment？</h3><p>相較於直接管理 Pod 或 ReplicaSet，Deployment 提供了更高層次的管理抽象：</p><ol><li><strong>宣告式管理</strong>：只需描述期望狀態，Kubernetes 會自動達成目標</li><li><strong>更新策略</strong>：內建滾動更新機制，避免服務中斷</li><li><strong>版本控制</strong>：保留部署歷史，支援快速回滾</li></ol><span id="more"></span><hr><h2 id="Deployment-範例配置"><a href="#Deployment-範例配置" class="headerlink" title="Deployment 範例配置"></a>Deployment 範例配置</h2><p>以下是一個完整的 Deployment 配置範例，展示了如何部署一個 Java Spring Boot 應用程式：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">dockertest-deployment</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">dockertest-namespace</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">dockertest</span></span><br><span class="line">    <span class="attr">version:</span> <span class="string">v0.0.8</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">dockertest</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">dockertest</span></span><br><span class="line">        <span class="attr">version:</span> <span class="string">v0.0.8</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">dockertest</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">docker.io/pcion123/tinydocker:0.0.8</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">Always</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8080</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">JAVA_OPTS</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">&quot;-Xmx512m -Xms256m -Djava.awt.headless=true -Dspring.profiles.active=dev&quot;</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">TZ</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">&quot;Asia/Taipei&quot;</span></span><br><span class="line">        <span class="attr">livenessProbe:</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/actuator/health</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">60</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">30</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">        <span class="attr">readinessProbe:</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/actuator/health/readiness</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">30</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">5</span></span><br><span class="line">          <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">      <span class="attr">imagePullSecrets:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">regcred</span></span><br></pre></td></tr></table></figure><h2 id="配置詳解"><a href="#配置詳解" class="headerlink" title="配置詳解"></a>配置詳解</h2><h3 id="Metadata-區段"><a href="#Metadata-區段" class="headerlink" title="Metadata 區段"></a>Metadata 區段</h3><ul><li><strong>name</strong>: Deployment 的名稱，在同一個 namespace 中必須唯一</li><li><strong>namespace</strong>: 指定部署的命名空間</li><li><strong>labels</strong>: 用於識別和分組資源的標籤</li></ul><h3 id="Spec-區段"><a href="#Spec-區段" class="headerlink" title="Spec 區段"></a>Spec 區段</h3><ul><li><strong>replicas</strong>: 指定要運行的 Pod 副本數量</li><li><strong>selector</strong>: 用於選擇管理哪些 Pod 的標籤選擇器</li><li><strong>template</strong>: Pod 模板，定義了 Pod 的規格</li></ul><h3 id="Container-配置"><a href="#Container-配置" class="headerlink" title="Container 配置"></a>Container 配置</h3><ul><li><strong>image</strong>: 容器映像檔位置</li><li><strong>imagePullPolicy</strong>: 映像檔拉取策略，<code>Always</code> 表示每次都會重新拉取</li><li><strong>ports</strong>: 容器對外暴露的連接埠</li><li><strong>env</strong>: 環境變數設定</li><li><strong>imagePullSecrets</strong>: 指定用於從私有容器註冊表拉取映像檔的 Secret 資源。當容器映像檔存放在需要身份驗證的私有倉庫時（如 Docker Hub 私有倉庫、Azure Container Registry、Amazon ECR 等），Kubernetes 需要相應的認證資訊才能成功拉取映像檔。此配置引用預先建立的 Kubernetes Secret 物件，該 Secret 包含了註冊表的登入憑證。</li></ul><blockquote><a href="/2025/10/11/kubernetes-image-pull/" title="Kubernetes Image 拉取指南">關於如何拉取 image 的詳細說明，請參考之前的文章</a></blockquote><h3 id="健康檢查配置"><a href="#健康檢查配置" class="headerlink" title="健康檢查配置"></a>健康檢查配置</h3><h4 id="Liveness-Probe（存活探針）"><a href="#Liveness-Probe（存活探針）" class="headerlink" title="Liveness Probe（存活探針）"></a>Liveness Probe（存活探針）</h4><p>用於檢查容器是否仍在運行，如果檢查失敗，Kubernetes 會重啟容器。</p><h4 id="Readiness-Probe（就緒探針）"><a href="#Readiness-Probe（就緒探針）" class="headerlink" title="Readiness Probe（就緒探針）"></a>Readiness Probe（就緒探針）</h4><p>用於檢查容器是否準備好接收流量，如果檢查失敗，容器會從 Service 的端點中移除。</p><h2 id="常用操作指令"><a href="#常用操作指令" class="headerlink" title="常用操作指令"></a>常用操作指令</h2><h3 id="部署應用程式"><a href="#部署應用程式" class="headerlink" title="部署應用程式"></a>部署應用程式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f dockertest-deployment-v0.0.8.yaml</span><br></pre></td></tr></table></figure><img src="/2025/10/11/kubernetes-deployment/kubernetes_deployment_create.png" class=""><h3 id="查看-Deployment-狀態"><a href="#查看-Deployment-狀態" class="headerlink" title="查看 Deployment 狀態"></a>查看 Deployment 狀態</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get deployments -n dockertest-namespace</span><br></pre></td></tr></table></figure><img src="/2025/10/11/kubernetes-deployment/kubernetes_deployment_get_all.png" class=""><h3 id="查看-Deployment-詳細資訊"><a href="#查看-Deployment-詳細資訊" class="headerlink" title="查看 Deployment 詳細資訊"></a>查看 Deployment 詳細資訊</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl describe deployment dockertest-deployment -n dockertest-namespace</span><br></pre></td></tr></table></figure><img src="/2025/10/11/kubernetes-deployment/kubernetes_deployment_describe.png" class=""><h3 id="擴縮容操作"><a href="#擴縮容操作" class="headerlink" title="擴縮容操作"></a>擴縮容操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 擴展到 3 個副本</span></span><br><span class="line">kubectl scale deployment dockertest-deployment --replicas=3 -n dockertest-namespace</span><br></pre></td></tr></table></figure><img src="/2025/10/11/kubernetes-deployment/kubernetes_deployment_scale.png" class=""><h3 id="更新應用程式"><a href="#更新應用程式" class="headerlink" title="更新應用程式"></a>更新應用程式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 更新映像檔版本（從 0.0.10 更新到 0.0.11）</span></span><br><span class="line">kubectl <span class="built_in">set</span> image deployment/dockertest-deployment dockertest=docker.io/pcion123/tinydocker:0.0.11 -n dockertest-namespace</span><br></pre></td></tr></table></figure><img src="/2025/10/11/kubernetes-deployment/kubernetes_deployment_update.png" class=""><h3 id="查看更新狀態"><a href="#查看更新狀態" class="headerlink" title="查看更新狀態"></a>查看更新狀態</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl rollout status deployment/dockertest-deployment -n dockertest-namespace</span><br></pre></td></tr></table></figure><img src="/2025/10/11/kubernetes-deployment/kubernetes_deployment_update_status.png" class=""><h3 id="回滾到上一個版本"><a href="#回滾到上一個版本" class="headerlink" title="回滾到上一個版本"></a>回滾到上一個版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl rollout undo deployment/dockertest-deployment -n dockertest-namespace</span><br></pre></td></tr></table></figure><img src="/2025/10/11/kubernetes-deployment/kubernetes_deployment_rollback.png" class=""><h3 id="查看部署歷史"><a href="#查看部署歷史" class="headerlink" title="查看部署歷史"></a>查看部署歷史</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl rollout <span class="built_in">history</span> deployment/dockertest-deployment -n dockertest-namespace</span><br></pre></td></tr></table></figure><img src="/2025/10/11/kubernetes-deployment/kubernetes_deployment_history.png" class=""><h3 id="查看-Pod-狀態"><a href="#查看-Pod-狀態" class="headerlink" title="查看 Pod 狀態"></a>查看 Pod 狀態</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pods -n dockertest-namespace -l app=dockertest</span><br></pre></td></tr></table></figure><img src="/2025/10/11/kubernetes-deployment/kubernetes_deployment_pod_status.png" class=""><h2 id="最佳實務建議"><a href="#最佳實務建議" class="headerlink" title="最佳實務建議"></a>最佳實務建議</h2><ol><li><strong>設定適當的資源限制</strong>: 為容器設定 CPU 和記憶體的 requests 和 limits</li><li><strong>配置健康檢查</strong>: 務必設定 liveness 和 readiness probe 以確保應用程式的穩定性</li><li><strong>使用標籤管理</strong>: 善用標籤來組織和管理不同的資源</li><li><strong>版本控制</strong>: 使用具體的映像檔標籤而非 <code>latest</code></li><li><strong>命名空間隔離</strong>: 使用不同的命名空間來隔離不同環境的應用程式</li></ol><p>透過這些配置和操作，您可以有效地管理 Kubernetes 中的應用程式部署，確保服務的高可用性和穩定性。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Kubernetes-Deployment-使用指南&quot;&gt;&lt;a href=&quot;#Kubernetes-Deployment-使用指南&quot; class=&quot;headerlink&quot; title=&quot;Kubernetes Deployment 使用指南&quot;&gt;&lt;/a&gt;Kubernetes Deployment 使用指南&lt;/h1&gt;&lt;h2 id=&quot;什麼是-Deployment？&quot;&gt;&lt;a href=&quot;#什麼是-Deployment？&quot; class=&quot;headerlink&quot; title=&quot;什麼是 Deployment？&quot;&gt;&lt;/a&gt;什麼是 Deployment？&lt;/h2&gt;&lt;p&gt;Kubernetes Deployment 是一個 API 物件，用於管理應用程式的宣告式部署和更新。Deployment 提供了對 Pod 和 ReplicaSet 的管理功能，確保應用程式能夠穩定運行並支援無縫更新。&lt;/p&gt;
&lt;h3 id=&quot;Deployment-的主要功能：&quot;&gt;&lt;a href=&quot;#Deployment-的主要功能：&quot; class=&quot;headerlink&quot; title=&quot;Deployment 的主要功能：&quot;&gt;&lt;/a&gt;Deployment 的主要功能：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;副本管理&lt;/strong&gt;：維護指定數量的 Pod 副本，確保服務的高可用性&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;滾動更新&lt;/strong&gt;：支援零停機時間的應用程式更新&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;版本回滾&lt;/strong&gt;：快速回滾到先前的應用程式版本&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;擴縮容&lt;/strong&gt;：根據需求動態調整 Pod 的數量&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;為什麼使用-Deployment？&quot;&gt;&lt;a href=&quot;#為什麼使用-Deployment？&quot; class=&quot;headerlink&quot; title=&quot;為什麼使用 Deployment？&quot;&gt;&lt;/a&gt;為什麼使用 Deployment？&lt;/h3&gt;&lt;p&gt;相較於直接管理 Pod 或 ReplicaSet，Deployment 提供了更高層次的管理抽象：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;宣告式管理&lt;/strong&gt;：只需描述期望狀態，Kubernetes 會自動達成目標&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;更新策略&lt;/strong&gt;：內建滾動更新機制，避免服務中斷&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;版本控制&lt;/strong&gt;：保留部署歷史，支援快速回滾&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="kubernetes" scheme="https://pcion123.github.io/categories/kubernetes/"/>
    
    
      <category term="kubernetes" scheme="https://pcion123.github.io/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes Image 拉取指南</title>
    <link href="https://pcion123.github.io/2025/10/11/kubernetes-image-pull/"/>
    <id>https://pcion123.github.io/2025/10/11/kubernetes-image-pull/</id>
    <published>2025-10-11T15:13:38.000Z</published>
    <updated>2025-10-11T15:49:13.215Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Kubernetes-Image-拉取指南"><a href="#Kubernetes-Image-拉取指南" class="headerlink" title="Kubernetes Image 拉取指南"></a>Kubernetes Image 拉取指南</h1><h2 id="什麼是容器映像拉取？"><a href="#什麼是容器映像拉取？" class="headerlink" title="什麼是容器映像拉取？"></a>什麼是容器映像拉取？</h2><p>在 Kubernetes 中，Pod 需要使用容器映像來啟動容器。根據映像的來源和存取方式不同，Kubernetes 提供了多種映像拉取策略。了解這些不同的拉取方式對於有效管理應用程式部署至關重要。</p><h3 id="映像拉取的主要場景："><a href="#映像拉取的主要場景：" class="headerlink" title="映像拉取的主要場景："></a>映像拉取的主要場景：</h3><ul><li><strong>本地映像</strong>：使用本地構建並載入到節點的映像</li><li><strong>公開倉庫</strong>：從 Docker Hub 等公開倉庫拉取映像</li><li><strong>私有倉庫</strong>：從需要身份驗證的私有倉庫拉取映像</li><li><strong>企業倉庫</strong>：從組織內部的私有映像倉庫拉取映像</li></ul><h3 id="為什麼需要了解不同的拉取方式？"><a href="#為什麼需要了解不同的拉取方式？" class="headerlink" title="為什麼需要了解不同的拉取方式？"></a>為什麼需要了解不同的拉取方式？</h3><p>根據不同的使用場景，選擇合適的映像拉取方式可以：</p><ol><li><strong>提升效率</strong>：減少不必要的網路傳輸和下載時間</li><li><strong>增強安全性</strong>：保護私有映像不被未授權存取</li><li><strong>降低成本</strong>：避免重複拉取相同的映像</li></ol><span id="more"></span><hr><h2 id="方式一：本地-Docker-映像直接引用"><a href="#方式一：本地-Docker-映像直接引用" class="headerlink" title="方式一：本地 Docker 映像直接引用"></a>方式一：本地 Docker 映像直接引用</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>當您在本地環境（如 Minikube、Docker Desktop）開發時，可以直接使用本地構建的 Docker 映像，無需推送到遠端倉庫。</p><h3 id="使用場景"><a href="#使用場景" class="headerlink" title="使用場景"></a>使用場景</h3><ul><li>開發和測試階段</li><li>本地 Kubernetes 環境（Minikube、Kind）</li><li>不希望將映像推送到外部倉庫的情況</li></ul><h3 id="實作步驟"><a href="#實作步驟" class="headerlink" title="實作步驟"></a>實作步驟</h3><h4 id="1-確保-Docker-環境與-Kubernetes-共享"><a href="#1-確保-Docker-環境與-Kubernetes-共享" class="headerlink" title="1. 確保 Docker 環境與 Kubernetes 共享"></a>1. 確保 Docker 環境與 Kubernetes 共享</h4><p><strong>在 Minikube 中：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 設定 Docker 環境指向 Minikube</span></span><br><span class="line"><span class="built_in">eval</span> $(minikube docker-env)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或在 Windows PowerShell 中</span></span><br><span class="line">minikube docker-env | Invoke-Expression</span><br><span class="line"></span><br><span class="line"><span class="comment"># 驗證已切換到 Minikube Docker 環境</span></span><br><span class="line">docker context <span class="built_in">ls</span></span><br><span class="line"><span class="comment"># 或者檢查 Docker Host</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$DOCKER_HOST</span></span><br><span class="line"><span class="comment"># Minikube 環境會顯示類似：tcp://192.168.49.2:2376</span></span><br></pre></td></tr></table></figure><img src="/2025/10/11/kubernetes-image-pull/kubernetes_pull-image_switch_in.png" class=""><p><strong>切回原本的 Docker 環境：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在 Linux/macOS 中</span></span><br><span class="line"><span class="built_in">eval</span> $(minikube docker-env -u)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或在 Windows PowerShell 中</span></span><br><span class="line">minikube docker-env -u | Invoke-Expression</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者直接重新啟動終端機會話</span></span><br><span class="line"><span class="comment"># 新的終端會自動使用本地 Docker 環境</span></span><br></pre></td></tr></table></figure><img src="/2025/10/11/kubernetes-image-pull/kubernetes_pull-image_switch_back.png" class=""><p><strong>在 Docker Desktop 中：</strong><br>Docker Desktop 的 Kubernetes 會自動共享本地 Docker 映像。</p><h4 id="2-構建本地映像"><a href="#2-構建本地映像" class="headerlink" title="2. 構建本地映像"></a>2. 構建本地映像</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 構建 Docker 映像</span></span><br><span class="line">docker build -t my-local-app:latest .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 驗證映像已建立</span></span><br><span class="line">docker images | grep my-local-app</span><br></pre></td></tr></table></figure><h4 id="3-在-Kubernetes-中使用本地映像"><a href="#3-在-Kubernetes-中使用本地映像" class="headerlink" title="3. 在 Kubernetes 中使用本地映像"></a>3. 在 Kubernetes 中使用本地映像</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">local-app-deployment</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">local-app</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">local-app</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">app</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">my-local-app:latest</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">Never</span>  <span class="comment"># 關鍵設定：不從遠端拉取</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure><h4 id="4-部署應用程式"><a href="#4-部署應用程式" class="headerlink" title="4. 部署應用程式"></a>4. 部署應用程式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f local-deployment.yaml</span><br></pre></td></tr></table></figure><h3 id="重要注意事項"><a href="#重要注意事項" class="headerlink" title="重要注意事項"></a>重要注意事項</h3><ul><li><strong>imagePullPolicy</strong>: 必須設定為 <code>Never</code> 或 <code>IfNotPresent</code></li><li><strong>映像標籤</strong>: 建議使用具體的標籤而非 <code>latest</code></li><li><strong>節點限制</strong>: 映像只存在於特定節點上</li><li><strong>Docker 環境切換</strong>: 使用 <code>minikube docker-env</code> 後記得切回原本環境<ul><li>使用 <code>eval $(minikube docker-env -u)</code> 來取消設定</li><li>或重新啟動終端機會話</li></ul></li></ul><h3 id="Docker-環境管理"><a href="#Docker-環境管理" class="headerlink" title="Docker 環境管理"></a>Docker 環境管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 檢查當前 Docker 環境和主機</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$DOCKER_HOST</span></span><br><span class="line"><span class="comment"># 本地：通常為空或顯示 unix:///var/run/docker.sock</span></span><br><span class="line"><span class="comment"># Minikube：顯示 tcp://192.168.49.2:2376 (或類似的 IP)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看 Docker 上下文</span></span><br><span class="line">docker context <span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出 Docker 映像（確認在正確的環境中）</span></span><br><span class="line">docker images</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果需要在不同環境間切換：</span></span><br><span class="line"><span class="comment"># 切換到 Minikube</span></span><br><span class="line"><span class="built_in">eval</span> $(minikube docker-env)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;當前 Docker Host: <span class="variable">$DOCKER_HOST</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 切換回本地</span></span><br><span class="line"><span class="built_in">eval</span> $(minikube docker-env -u)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;當前 Docker Host: <span class="variable">$DOCKER_HOST</span>&quot;</span></span><br></pre></td></tr></table></figure><hr><h2 id="方式二：拉取-Docker-Hub-公開倉庫映像"><a href="#方式二：拉取-Docker-Hub-公開倉庫映像" class="headerlink" title="方式二：拉取 Docker Hub 公開倉庫映像"></a>方式二：拉取 Docker Hub 公開倉庫映像</h2><h3 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h3><p>從 Docker Hub 等公開倉庫拉取映像是最常見的方式，適用於使用開源軟體或公開可用的應用程式映像。</p><h3 id="使用場景-1"><a href="#使用場景-1" class="headerlink" title="使用場景"></a>使用場景</h3><ul><li>使用官方映像（如 nginx、redis、mysql）</li><li>使用開源專案的公開映像</li><li>生產環境中的標準化映像</li></ul><h3 id="實作步驟-1"><a href="#實作步驟-1" class="headerlink" title="實作步驟"></a>實作步驟</h3><h4 id="1-基本公開映像使用範例"><a href="#1-基本公開映像使用範例" class="headerlink" title="1. 基本公開映像使用範例"></a>1. 基本公開映像使用範例</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-deployment</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">nginx:1.21-alpine</span>  <span class="comment"># Docker Hub 官方映像</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">Always</span>   <span class="comment"># 總是拉取最新版本</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><h4 id="2-進階公開映像配置範例"><a href="#2-進階公開映像配置範例" class="headerlink" title="2. 進階公開映像配置範例"></a>2. 進階公開映像配置範例</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">tomcat-deployment</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">tomcat</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">tomcat</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">tomcat</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">tomcat:10.1-jdk17</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span>  <span class="comment"># 如果本地不存在才拉取</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8080</span></span><br><span class="line">        <span class="attr">command:</span> [<span class="string">&quot;/bin/sh&quot;</span>,<span class="string">&quot;-c&quot;</span>]</span><br><span class="line">        <span class="attr">args:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">cp</span> <span class="string">-r</span> <span class="string">/usr/local/tomcat/webapps.dist/ROOT</span> <span class="string">/usr/local/tomcat/webapps/</span> <span class="string">&amp;&amp;</span> <span class="string">exec</span> <span class="string">catalina.sh</span> <span class="string">run</span></span><br><span class="line">        <span class="attr">readinessProbe:</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><h4 id="3-部署應用程式"><a href="#3-部署應用程式" class="headerlink" title="3. 部署應用程式"></a>3. 部署應用程式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 部署基本的 Nginx 應用</span></span><br><span class="line">kubectl apply -f nginx-deployment.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 部署進階的 Tomcat 應用</span></span><br><span class="line">kubectl apply -f tomcat-deployment.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看部署狀態</span></span><br><span class="line">kubectl get deployments</span><br><span class="line">kubectl get pods</span><br></pre></td></tr></table></figure><h3 id="ImagePullPolicy-選項說明"><a href="#ImagePullPolicy-選項說明" class="headerlink" title="ImagePullPolicy 選項說明"></a>ImagePullPolicy 選項說明</h3><ul><li><strong>Always</strong>: 每次都重新拉取映像</li><li><strong>IfNotPresent</strong>: 本地不存在時才拉取（預設值）</li><li><strong>Never</strong>: 絕不拉取，只使用本地映像</li></ul><hr><h2 id="方式三：拉取-Docker-Hub-私有倉庫映像"><a href="#方式三：拉取-Docker-Hub-私有倉庫映像" class="headerlink" title="方式三：拉取 Docker Hub 私有倉庫映像"></a>方式三：拉取 Docker Hub 私有倉庫映像</h2><h3 id="概述-2"><a href="#概述-2" class="headerlink" title="概述"></a>概述</h3><p>當使用私有倉庫中的映像時，需要提供身份驗證資訊。Kubernetes 使用 Image Pull Secret 來安全地存儲這些憑證。</p><h3 id="使用場景-2"><a href="#使用場景-2" class="headerlink" title="使用場景"></a>使用場景</h3><ul><li>使用組織的私有映像</li><li>商業軟體的私有映像</li><li>包含敏感資訊的應用程式映像</li></ul><h3 id="實作步驟-2"><a href="#實作步驟-2" class="headerlink" title="實作步驟"></a>實作步驟</h3><h4 id="1-建立-Docker-Registry-Secret"><a href="#1-建立-Docker-Registry-Secret" class="headerlink" title="1. 建立 Docker Registry Secret"></a>1. 建立 Docker Registry Secret</h4><p>為了讓 Kubernetes 能夠從 Docker Hub 私有倉庫拉取映像檔，需要建立包含認證資訊的 Secret 資源：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">kubectl create secret docker-registry regcred \</span><br><span class="line">  --docker-server=https://index.docker.io/v1/ \</span><br><span class="line">  --docker-username=&lt;username&gt; \</span><br><span class="line">  --docker-password=&lt;password&gt; \</span><br><span class="line">  --docker-email=&lt;mail&gt; \</span><br><span class="line">  --namespace=&lt;namespace&gt;</span><br></pre></td></tr></table></figure><p><strong>參數說明：</strong></p><ul><li><code>regcred</code>：Secret 的名稱，可以自行定義</li><li><code>--docker-server</code>：Docker Hub 的伺服器地址，固定為 <code>https://index.docker.io/v1/</code></li><li><code>--docker-username</code>：您的 Docker Hub 使用者名稱</li><li><code>--docker-password</code>：建議使用 Personal Access Token (PAT) 而非密碼</li><li><code>--namespace</code>：指定 Secret 建立的命名空間</li></ul><blockquote><a href="/2025/10/11/docker-hub-pat-guide/" title="Docker Hub PAT 申請指南">關於如何獲取 Docker Hub Personal Access Token 的詳細說明，請參考之前的文章</a></blockquote><p><strong>重要提醒：</strong></p><ul><li>出於安全考量，強烈建議使用 <strong>Personal Access Token (PAT)</strong> 而非帳戶密碼</li><li><code>--docker-email</code> 參數為可選，現代 Docker 倉庫通常不需要此參數</li><li>Secret 必須建立在與 Pod 相同的命名空間中才能使用</li></ul><h4 id="2-在-Deployment-中使用私有映像"><a href="#2-在-Deployment-中使用私有映像" class="headerlink" title="2. 在 Deployment 中使用私有映像"></a>2. 在 Deployment 中使用私有映像</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">k8s-deployment</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">k8s-namespace</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">k8s-app</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">k8s-app</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">k8s-app</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">&lt;username&gt;/&lt;repo-name&gt;:latest</span>  <span class="comment"># 私有倉庫映像</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">Always</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8080</span></span><br><span class="line">      <span class="attr">imagePullSecrets:</span>  <span class="comment"># 指定用於身份驗證的 Secret</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">regcred</span></span><br></pre></td></tr></table></figure><h4 id="3-使用-ServiceAccount-自動套用-Secret"><a href="#3-使用-ServiceAccount-自動套用-Secret" class="headerlink" title="3. 使用 ServiceAccount 自動套用 Secret"></a>3. 使用 ServiceAccount 自動套用 Secret</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">k8s-sa</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">k8s-namespace</span></span><br><span class="line"><span class="attr">imagePullSecrets:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">regcred</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">k8s-deployment</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">k8s-namespace</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">k8s-app</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">k8s-app</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">k8s-sa</span>  <span class="comment"># 使用 ServiceAccount</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">k8s-app</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">&lt;username&gt;/&lt;repo-name&gt;:latest</span>  <span class="comment"># 私有倉庫映像</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">Always</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure><h3 id="不同私有倉庫的設定"><a href="#不同私有倉庫的設定" class="headerlink" title="不同私有倉庫的設定"></a>不同私有倉庫的設定</h3><h4 id="AWS-ECR"><a href="#AWS-ECR" class="headerlink" title="AWS ECR"></a>AWS ECR</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kubectl create secret docker-registry ecr-secret \</span><br><span class="line">  --docker-server=&lt;account-id&gt;.dkr.ecr.&lt;region&gt;.amazonaws.com \</span><br><span class="line">  --docker-username=AWS \</span><br><span class="line">  --docker-password=$(aws ecr get-login-password) \</span><br><span class="line">  --namespace=&lt;namespace&gt;</span><br></pre></td></tr></table></figure><h4 id="Azure-ACR"><a href="#Azure-ACR" class="headerlink" title="Azure ACR"></a>Azure ACR</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kubectl create secret docker-registry acr-secret \</span><br><span class="line">  --docker-server=&lt;registry-name&gt;.azurecr.io \</span><br><span class="line">  --docker-username=&lt;username&gt; \</span><br><span class="line">  --docker-password=&lt;password&gt; \</span><br><span class="line">  --namespace=&lt;namespace&gt;</span><br></pre></td></tr></table></figure><h4 id="Google-GCR"><a href="#Google-GCR" class="headerlink" title="Google GCR"></a>Google GCR</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kubectl create secret docker-registry gcr-secret \</span><br><span class="line">  --docker-server=gcr.io \</span><br><span class="line">  --docker-username=_json_key \</span><br><span class="line">  --docker-password=<span class="string">&quot;<span class="subst">$(cat key.json)</span>&quot;</span> \</span><br><span class="line">  --namespace=&lt;namespace&gt;</span><br></pre></td></tr></table></figure><h2 id="常用管理指令"><a href="#常用管理指令" class="headerlink" title="常用管理指令"></a>常用管理指令</h2><h3 id="查看映像拉取狀態"><a href="#查看映像拉取狀態" class="headerlink" title="查看映像拉取狀態"></a>查看映像拉取狀態</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看 Pod 狀態</span></span><br><span class="line">kubectl get pods -n &lt;namespace&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看 Pod 詳細資訊（包含映像拉取事件）</span></span><br><span class="line">kubectl describe pod &lt;pod-name&gt; -n &lt;namespace&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看映像拉取相關的事件</span></span><br><span class="line">kubectl get events --field-selector reason=Pulling -n &lt;namespace&gt;</span><br></pre></td></tr></table></figure><h3 id="管理-Image-Pull-Secrets"><a href="#管理-Image-Pull-Secrets" class="headerlink" title="管理 Image Pull Secrets"></a>管理 Image Pull Secrets</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看 Secret 列表</span></span><br><span class="line">kubectl get secrets -n &lt;namespace&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看 Secret 詳細資訊</span></span><br><span class="line">kubectl describe secret &lt;secret-name&gt; -n &lt;namespace&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 刪除 Secret</span></span><br><span class="line">kubectl delete secret &lt;secret-name&gt; -n &lt;namespace&gt;</span><br></pre></td></tr></table></figure><h3 id="手動拉取映像進行測試"><a href="#手動拉取映像進行測試" class="headerlink" title="手動拉取映像進行測試"></a>手動拉取映像進行測試</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在節點上手動拉取映像</span></span><br><span class="line">docker pull &lt;image-name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 檢查映像是否存在</span></span><br><span class="line">docker images | grep &lt;image-name&gt;</span><br></pre></td></tr></table></figure><h2 id="疑難排解"><a href="#疑難排解" class="headerlink" title="疑難排解"></a>疑難排解</h2><h3 id="常見問題與解決方案"><a href="#常見問題與解決方案" class="headerlink" title="常見問題與解決方案"></a>常見問題與解決方案</h3><h4 id="1-ImagePullBackOff-錯誤"><a href="#1-ImagePullBackOff-錯誤" class="headerlink" title="1. ImagePullBackOff 錯誤"></a>1. ImagePullBackOff 錯誤</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 檢查 Pod 事件</span></span><br><span class="line">kubectl describe pod &lt;pod-name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 常見原因：</span></span><br><span class="line"><span class="comment"># - 映像名稱錯誤</span></span><br><span class="line"><span class="comment"># - 網路連線問題</span></span><br><span class="line"><span class="comment"># - 身份驗證失敗</span></span><br><span class="line"><span class="comment"># - 映像不存在</span></span><br></pre></td></tr></table></figure><h4 id="2-本地映像無法拉取"><a href="#2-本地映像無法拉取" class="headerlink" title="2. 本地映像無法拉取"></a>2. 本地映像無法拉取</h4><ul><li>確認 <code>imagePullPolicy</code> 設定為 <code>Never</code> 或 <code>IfNotPresent</code></li><li>檢查映像是否存在於正確的節點上</li><li>在 Minikube 中確認 Docker 環境設定正確</li><li><strong>Docker 環境問題</strong>：確認是否在正確的 Docker 環境中<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 檢查當前 Docker 環境（更準確的方法）</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$DOCKER_HOST</span></span><br><span class="line"><span class="comment"># 本地環境：通常為空或 unix:///var/run/docker.sock</span></span><br><span class="line"><span class="comment"># Minikube 環境：tcp://192.168.49.2:2376 或類似 IP</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者檢查環境變數</span></span><br><span class="line"><span class="built_in">env</span> | grep DOCKER</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果在 Minikube 環境中找不到映像，切換到正確環境</span></span><br><span class="line"><span class="built_in">eval</span> $(minikube docker-env)  <span class="comment"># 切換到 Minikube</span></span><br><span class="line">docker images  <span class="comment"># 確認映像存在</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果需要切回本地環境</span></span><br><span class="line"><span class="built_in">eval</span> $(minikube docker-env -u)</span><br></pre></td></tr></table></figure></li></ul><h4 id="3-私有倉庫認證失敗"><a href="#3-私有倉庫認證失敗" class="headerlink" title="3. 私有倉庫認證失敗"></a>3. 私有倉庫認證失敗</h4><ul><li>驗證 Secret 中的憑證是否正確</li><li>檢查 Secret 是否在正確的命名空間中</li><li>確認倉庫伺服器地址格式正確</li></ul><h4 id="4-映像拉取速度緩慢"><a href="#4-映像拉取速度緩慢" class="headerlink" title="4. 映像拉取速度緩慢"></a>4. 映像拉取速度緩慢</h4><ul><li>考慮使用映像快取或本地倉庫</li><li>檢查網路連線品質</li><li>使用較小的映像或多階段構建</li></ul><h2 id="最佳實務建議"><a href="#最佳實務建議" class="headerlink" title="最佳實務建議"></a>最佳實務建議</h2><h3 id="映像管理"><a href="#映像管理" class="headerlink" title="映像管理"></a>映像管理</h3><ol><li><strong>使用具體標籤</strong>：避免使用 <code>latest</code> 標籤</li><li><strong>映像掃描</strong>：定期掃描映像的安全漏洞</li><li><strong>映像分層</strong>：優化 Dockerfile 以減少映像大小</li><li><strong>定期更新</strong>：保持映像為最新版本</li></ol><h3 id="安全性"><a href="#安全性" class="headerlink" title="安全性"></a>安全性</h3><ol><li><strong>最小權限</strong>：使用最小權限的 ServiceAccount</li><li><strong>Secret 管理</strong>：定期輪換 Image Pull Secret</li><li><strong>網路隔離</strong>：在適當的情況下使用網路策略</li><li><strong>映像簽章</strong>：考慮使用映像簽章驗證</li></ol><h3 id="效能優化"><a href="#效能優化" class="headerlink" title="效能優化"></a>效能優化</h3><ol><li><strong>本地快取</strong>：在開發環境中使用本地映像</li><li><strong>並行拉取</strong>：合理設定 Pod 的並行啟動數量</li><li><strong>映像預拉取</strong>：在節點上預先拉取常用映像</li><li><strong>資源限制</strong>：設定適當的資源限制避免資源競爭</li></ol><p>透過了解和正確使用這三種映像拉取方式，您可以在不同的環境和場景中高效、安全地管理 Kubernetes 應用程式的容器映像。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Kubernetes-Image-拉取指南&quot;&gt;&lt;a href=&quot;#Kubernetes-Image-拉取指南&quot; class=&quot;headerlink&quot; title=&quot;Kubernetes Image 拉取指南&quot;&gt;&lt;/a&gt;Kubernetes Image 拉取指南&lt;/h1&gt;&lt;h2 id=&quot;什麼是容器映像拉取？&quot;&gt;&lt;a href=&quot;#什麼是容器映像拉取？&quot; class=&quot;headerlink&quot; title=&quot;什麼是容器映像拉取？&quot;&gt;&lt;/a&gt;什麼是容器映像拉取？&lt;/h2&gt;&lt;p&gt;在 Kubernetes 中，Pod 需要使用容器映像來啟動容器。根據映像的來源和存取方式不同，Kubernetes 提供了多種映像拉取策略。了解這些不同的拉取方式對於有效管理應用程式部署至關重要。&lt;/p&gt;
&lt;h3 id=&quot;映像拉取的主要場景：&quot;&gt;&lt;a href=&quot;#映像拉取的主要場景：&quot; class=&quot;headerlink&quot; title=&quot;映像拉取的主要場景：&quot;&gt;&lt;/a&gt;映像拉取的主要場景：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;本地映像&lt;/strong&gt;：使用本地構建並載入到節點的映像&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;公開倉庫&lt;/strong&gt;：從 Docker Hub 等公開倉庫拉取映像&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;私有倉庫&lt;/strong&gt;：從需要身份驗證的私有倉庫拉取映像&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;企業倉庫&lt;/strong&gt;：從組織內部的私有映像倉庫拉取映像&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;為什麼需要了解不同的拉取方式？&quot;&gt;&lt;a href=&quot;#為什麼需要了解不同的拉取方式？&quot; class=&quot;headerlink&quot; title=&quot;為什麼需要了解不同的拉取方式？&quot;&gt;&lt;/a&gt;為什麼需要了解不同的拉取方式？&lt;/h3&gt;&lt;p&gt;根據不同的使用場景，選擇合適的映像拉取方式可以：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;提升效率&lt;/strong&gt;：減少不必要的網路傳輸和下載時間&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;增強安全性&lt;/strong&gt;：保護私有映像不被未授權存取&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;降低成本&lt;/strong&gt;：避免重複拉取相同的映像&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="kubernetes" scheme="https://pcion123.github.io/categories/kubernetes/"/>
    
    
      <category term="kubernetes" scheme="https://pcion123.github.io/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>Docker Hub PAT 申請指南</title>
    <link href="https://pcion123.github.io/2025/10/11/docker-hub-pat-guide/"/>
    <id>https://pcion123.github.io/2025/10/11/docker-hub-pat-guide/</id>
    <published>2025-10-11T15:00:52.000Z</published>
    <updated>2025-10-11T15:54:12.573Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-Hub-PAT-申請指南"><a href="#Docker-Hub-PAT-申請指南" class="headerlink" title="Docker Hub PAT 申請指南"></a>Docker Hub PAT 申請指南</h1><h2 id="什麼是-Docker-Hub-PAT？"><a href="#什麼是-Docker-Hub-PAT？" class="headerlink" title="什麼是 Docker Hub PAT？"></a>什麼是 Docker Hub PAT？</h2><p>Docker Hub Personal Access Token (PAT) 是 Docker Hub 提供的身份驗證機制，用於替代傳統的使用者名稱和密碼組合。PAT 提供了更安全的方式來存取 Docker Hub 的 API 和映像倉庫。</p><h3 id="PAT-的主要優勢："><a href="#PAT-的主要優勢：" class="headerlink" title="PAT 的主要優勢："></a>PAT 的主要優勢：</h3><ul><li><strong>安全性</strong>：避免在腳本或配置中使用明文密碼</li><li><strong>權限控制</strong>：可以設定特定的權限範圍</li><li><strong>易於管理</strong>：可以獨立撤銷和更新，不影響帳戶密碼</li><li><strong>審計追蹤</strong>：提供更好的存取記錄和監控</li></ul><h3 id="為什麼需要使用-PAT？"><a href="#為什麼需要使用-PAT？" class="headerlink" title="為什麼需要使用 PAT？"></a>為什麼需要使用 PAT？</h3><p>在以下情況下，建議使用 PAT 替代密碼：</p><ol><li><strong>CI&#x2F;CD 流程</strong>：在自動化部署中進行映像推送和拉取</li><li><strong>本地開發</strong>：在 Minikube 或其他本地環境中拉取私有映像</li><li><strong>腳本自動化</strong>：需要程式化存取 Docker Hub API</li><li><strong>企業環境</strong>：符合企業安全政策和最佳實務</li></ol><span id="more"></span><hr><h2 id="PAT-申請步驟"><a href="#PAT-申請步驟" class="headerlink" title="PAT 申請步驟"></a>PAT 申請步驟</h2><h3 id="步驟-1：登入-Docker-Hub"><a href="#步驟-1：登入-Docker-Hub" class="headerlink" title="步驟 1：登入 Docker Hub"></a>步驟 1：登入 Docker Hub</h3><ol><li>開啟瀏覽器，前往 <a href="https://hub.docker.com/">Docker Hub</a></li><li>點選右上角的 <strong>Sign In</strong> 按鈕</li><li>輸入您的 Docker Hub 帳號和密碼進行登入</li></ol><h3 id="步驟-2：進入帳戶設定"><a href="#步驟-2：進入帳戶設定" class="headerlink" title="步驟 2：進入帳戶設定"></a>步驟 2：進入帳戶設定</h3><ol><li>登入後，點選右上角的<strong>帳戶頭像</strong></li><li>從下拉選單中選擇 <strong>Account Settings</strong></li></ol><h3 id="步驟-3：進入-Personal-Access-Tokens"><a href="#步驟-3：進入-Personal-Access-Tokens" class="headerlink" title="步驟 3：進入 Personal Access Tokens"></a>步驟 3：進入 Personal Access Tokens</h3><ol><li>在左側導航選單中點選 <strong>Settings</strong></li><li>展開 Settings 選單，選擇 <strong>Personal access tokens</strong></li><li>您會看到 <strong>Personal access tokens</strong> 頁面，顯示現有的權杖列表</li></ol><img src="/2025/10/11/docker-hub-pat-guide/docker_pat_overview.png" class=""><h3 id="步驟-4：建立新的存取權杖"><a href="#步驟-4：建立新的存取權杖" class="headerlink" title="步驟 4：建立新的存取權杖"></a>步驟 4：建立新的存取權杖</h3><ol><li>點選右上角的 <strong>Generate new token</strong> 按鈕</li><li>進入 <strong>Create access token</strong> 頁面</li></ol><img src="/2025/10/11/docker-hub-pat-guide/docker_pat_create.png" class=""><h3 id="步驟-5：配置權杖設定"><a href="#步驟-5：配置權杖設定" class="headerlink" title="步驟 5：配置權杖設定"></a>步驟 5：配置權杖設定</h3><ol><li><p><strong>Access token description</strong>：輸入有意義的描述名稱</p><ul><li>範例：<code>minikube-pull</code>、<code>ci-cd-pipeline</code>、<code>local-development</code></li></ul></li><li><p><strong>Expiration date</strong>：選擇權杖的過期時間</p><ul><li><strong>None</strong>：永不過期（不建議用於生產環境）</li><li><strong>30 days</strong>：30 天後過期</li><li><strong>90 days</strong>：90 天後過期</li><li><strong>Custom</strong>：自訂過期日期</li></ul></li><li><p><strong>Access permissions</strong>：選擇適當的權限級別</p><ul><li><strong>Public Repo Read-only</strong>：只能讀取公開倉庫（預設選項，推薦用於拉取）</li><li><strong>Read-only</strong>：只能讀取所有可存取的倉庫</li><li><strong>Read &amp; Write</strong>：可以讀取和寫入倉庫</li><li><strong>Read, Write, Delete</strong>：完整權限（謹慎使用）</li></ul></li><li><p>點選 <strong>Generate</strong> 按鈕建立權杖</p></li></ol><h3 id="步驟-6：複製和保存權杖"><a href="#步驟-6：複製和保存權杖" class="headerlink" title="步驟 6：複製和保存權杖"></a>步驟 6：複製和保存權杖</h3><p>權杖建立成功後，您會看到 <strong>Copy access token</strong> 頁面：</p><p>⚠️ <strong>重要提醒</strong>：個人存取權杖只會顯示一次，無法儲存且之後無法再檢索</p><ol><li><p><strong>權杖資訊確認</strong>：</p><ul><li><strong>Access token description</strong>：您設定的描述名稱（如：test）</li><li><strong>Expires on</strong>：過期時間（如：Never 表示永不過期）</li><li><strong>Access permissions</strong>：權限級別（如：Public Repo Read-only）</li></ul></li><li><p><strong>複製權杖</strong>：</p><ul><li>在步驟 1 中，複製 Docker CLI 登入指令：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker login -u &lt;username&gt;</span><br></pre></td></tr></table></figure></li><li>點選右側的 <strong>Copy</strong> 按鈕複製指令</li></ul></li><li><p><strong>複製個人存取權杖</strong>：</p><ul><li>在步驟 2 中，顯示完整的個人存取權杖字串</li><li>權杖格式類似：<code>dckr_pat_abcdefghijk00000</code></li><li>點選右側的 <strong>Copy</strong> 按鈕複製權杖</li></ul></li><li><p><strong>安全保存</strong>：</p><ul><li>立即將權杖保存在安全的位置（如密碼管理器）</li><li>記錄權杖的用途和建立日期</li></ul></li><li><p><strong>完成申請</strong>：</p><ul><li>點選 <strong>Back to access tokens</strong> 按鈕返回權杖管理頁面</li></ul></li></ol><img src="/2025/10/11/docker-hub-pat-guide/docker_pat_copy.png" class=""><h2 id="使用說明"><a href="#使用說明" class="headerlink" title="使用說明"></a>使用說明</h2><p>根據頁面提示，您可以使用此權杖作為密碼，透過 Docker CLI 客戶端登入：</p><ol><li><p><strong>執行登入指令</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker login -u &lt;username&gt;</span><br></pre></td></tr></table></figure></li><li><p><strong>在密碼提示時輸入個人存取權杖</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Password: &lt;password&gt;</span><br></pre></td></tr></table></figure></li></ol><h2 id="權杖管理介面說明"><a href="#權杖管理介面說明" class="headerlink" title="權杖管理介面說明"></a>權杖管理介面說明</h2><p>在 <strong>Personal access tokens</strong> 頁面中，您可以看到：</p><ul><li><strong>Description</strong>：權杖的描述名稱</li><li><strong>Scope</strong>：權杖的權限範圍</li><li><strong>Status</strong>：權杖狀態（Active&#x2F;Inactive）</li><li><strong>Source</strong>：建立方式（Manual&#x2F;Auto-generated）</li><li><strong>Created</strong>：建立時間</li><li><strong>Last used</strong>：最後使用時間</li><li><strong>Expiration date</strong>：過期日期</li></ul><p>您可以透過右側的操作選單來管理現有的權杖，包括查看詳細資訊、停用或刪除權杖。</p><h2 id="使用-PAT-進行身份驗證"><a href="#使用-PAT-進行身份驗證" class="headerlink" title="使用 PAT 進行身份驗證"></a>使用 PAT 進行身份驗證</h2><h3 id="在命令列中使用"><a href="#在命令列中使用" class="headerlink" title="在命令列中使用"></a>在命令列中使用</h3><p>根據 Docker Hub 提供的指引，推薦使用以下方式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方法一：使用 Docker Hub 提供的登入指令</span></span><br><span class="line">docker login -u &lt;username&gt;</span><br><span class="line"><span class="comment"># 在密碼提示時輸入 PAT，例如：</span></span><br><span class="line"><span class="comment"># Password: dckr_pat_abcdefghijk00000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法二：直接在指令中指定（較不安全，會在命令歷史中留下記錄）</span></span><br><span class="line">docker login -u &lt;username&gt; -p &lt;password&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法三：互動式登入（最安全）</span></span><br><span class="line">docker login</span><br><span class="line"><span class="comment"># Username: &lt;username&gt;</span></span><br><span class="line"><span class="comment"># Password: &lt;password&gt;</span></span><br></pre></td></tr></table></figure><p><strong>最佳實務</strong>：建議使用方法一或方法三，避免在指令行中直接暴露 PAT。</p><h3 id="在-Kubernetes-中使用"><a href="#在-Kubernetes-中使用" class="headerlink" title="在 Kubernetes 中使用"></a>在 Kubernetes 中使用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 建立 Docker Registry Secret</span></span><br><span class="line">kubectl create secret docker-registry regcred \</span><br><span class="line">  --docker-server=https://index.docker.io/v1/ \</span><br><span class="line">  --docker-username=&lt;username&gt; \</span><br><span class="line">  --docker-password=&lt;password&gt; \</span><br><span class="line">  --docker-email=&lt;email&gt;</span><br></pre></td></tr></table></figure><h3 id="在-CI-CD-中使用"><a href="#在-CI-CD-中使用" class="headerlink" title="在 CI&#x2F;CD 中使用"></a>在 CI&#x2F;CD 中使用</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># GitHub Actions 範例</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Login</span> <span class="string">to</span> <span class="string">Docker</span> <span class="string">Hub</span></span><br><span class="line">  <span class="attr">uses:</span> <span class="string">docker/login-action@v2</span></span><br><span class="line">  <span class="attr">with:</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.DOCKERHUB_USERNAME</span> <span class="string">&#125;&#125;</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.DOCKERHUB_TOKEN</span> <span class="string">&#125;&#125;</span></span><br></pre></td></tr></table></figure><h2 id="PAT-管理最佳實務"><a href="#PAT-管理最佳實務" class="headerlink" title="PAT 管理最佳實務"></a>PAT 管理最佳實務</h2><h3 id="權限設定建議"><a href="#權限設定建議" class="headerlink" title="權限設定建議"></a>權限設定建議</h3><ol><li><p><strong>最小權限原則</strong>：只授予必要的權限</p><ul><li>僅拉取映像：使用 <strong>Public Repo Read-only</strong> 或 <strong>Read-only</strong></li><li>需要推送映像：使用 <strong>Read &amp; Write</strong></li><li>避免使用 <strong>Read, Write, Delete</strong> 權限，除非絕對必要</li></ul></li><li><p><strong>專用權杖</strong>：為不同用途建立專用的 PAT</p><ul><li>開發環境：<code>dev-environment-pat</code></li><li>生產 CI&#x2F;CD：<code>prod-pipeline-pat</code></li><li>個人使用：<code>personal-tools-pat</code></li></ul></li><li><p><strong>過期時間設定</strong>：</p><ul><li>開發測試：建議設定 30-90 天</li><li>生產環境：建議設定 90 天並定期輪換</li><li>避免使用 <strong>None</strong>（永不過期）選項</li></ul></li></ol><h3 id="安全性考量"><a href="#安全性考量" class="headerlink" title="安全性考量"></a>安全性考量</h3><ol><li><strong>定期輪換</strong>：建議每 3-6 個月更新一次 PAT</li><li><strong>安全存儲</strong>：<ul><li>使用環境變數而非硬編碼</li><li>存儲在密碼管理器中</li><li>在 CI&#x2F;CD 中使用 Secrets 管理</li></ul></li><li><strong>監控使用</strong>：定期檢查 PAT 的使用情況和存取記錄</li></ol><h3 id="權杖管理"><a href="#權杖管理" class="headerlink" title="權杖管理"></a>權杖管理</h3><p>在 Docker Hub 的 <strong>Personal access tokens</strong> 頁面中，您可以：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看當前的 PAT 資訊</span></span><br><span class="line"><span class="comment"># 包含：Description、Scope、Status、Source、Created、Last used、Expiration date</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 管理現有權杖</span></span><br><span class="line"><span class="comment"># - 點選權杖右側的三點選單</span></span><br><span class="line"><span class="comment"># - 選擇 &quot;View details&quot;、&quot;Deactivate&quot; 或 &quot;Delete&quot;</span></span><br><span class="line"><span class="comment"># - 建議定期清理不再使用的權杖</span></span><br></pre></td></tr></table></figure><p><strong>權杖狀態說明：</strong></p><ul><li><strong>Active</strong>：權杖正常可用</li><li><strong>Inactive</strong>：權杖已停用</li><li><strong>Manual</strong>：手動建立的權杖</li><li><strong>Auto-generated</strong>：系統自動生成的權杖（如透過 Docker Desktop）</li></ul><h2 id="疑難排解"><a href="#疑難排解" class="headerlink" title="疑難排解"></a>疑難排解</h2><h3 id="常見問題"><a href="#常見問題" class="headerlink" title="常見問題"></a>常見問題</h3><h4 id="1-權杖驗證失敗"><a href="#1-權杖驗證失敗" class="headerlink" title="1. 權杖驗證失敗"></a>1. 權杖驗證失敗</h4><p><strong>可能原因：</strong></p><ul><li>權杖已過期或被撤銷</li><li>權限不足</li><li>使用者名稱錯誤</li></ul><p><strong>解決方法：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 檢查登入狀態</span></span><br><span class="line">docker info</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新登入</span></span><br><span class="line">docker <span class="built_in">logout</span></span><br><span class="line">docker login</span><br><span class="line"></span><br><span class="line"><span class="comment"># 確認權杖權限是否足夠</span></span><br></pre></td></tr></table></figure><h4 id="2-無法拉取私有映像"><a href="#2-無法拉取私有映像" class="headerlink" title="2. 無法拉取私有映像"></a>2. 無法拉取私有映像</h4><p><strong>檢查項目：</strong></p><ul><li>PAT 是否具有私有倉庫讀取權限</li><li>映像名稱和標籤是否正確</li><li>網路連線是否正常</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 測試拉取公開映像</span></span><br><span class="line">docker pull hello-world</span><br><span class="line"></span><br><span class="line"><span class="comment"># 檢查映像倉庫狀態</span></span><br><span class="line">docker search &lt;your-image-name&gt;</span><br></pre></td></tr></table></figure><h4 id="3-Kubernetes-中無法使用-Image-Pull-Secret"><a href="#3-Kubernetes-中無法使用-Image-Pull-Secret" class="headerlink" title="3. Kubernetes 中無法使用 Image Pull Secret"></a>3. Kubernetes 中無法使用 Image Pull Secret</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 檢查 Secret 是否正確建立</span></span><br><span class="line">kubectl get secrets</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看 Secret 詳細資訊</span></span><br><span class="line">kubectl describe secret regcred</span><br><span class="line"></span><br><span class="line"><span class="comment"># 測試 Pod 中的映像拉取</span></span><br><span class="line">kubectl run test-pod --image=&lt;your-private-image&gt; --dry-run=client -o yaml</span><br></pre></td></tr></table></figure><h2 id="權杖續期和更新"><a href="#權杖續期和更新" class="headerlink" title="權杖續期和更新"></a>權杖續期和更新</h2><h3 id="定期檢查"><a href="#定期檢查" class="headerlink" title="定期檢查"></a>定期檢查</h3><ol><li>登入 Docker Hub</li><li>前往左側選單的 <strong>Settings</strong> &gt; <strong>Personal access tokens</strong></li><li>檢查權杖列表中的 <strong>Last used</strong> 時間和 <strong>Expiration date</strong></li><li>透過右側選單移除不再使用的權杖</li></ol><h3 id="更新流程"><a href="#更新流程" class="headerlink" title="更新流程"></a>更新流程</h3><ol><li>在 <strong>Personal access tokens</strong> 頁面點選 <strong>Generate new token</strong></li><li>建立新的 PAT 並設定適當的過期時間</li><li>在所有使用舊 PAT 的地方更新為新 PAT</li><li>測試新 PAT 是否正常運作</li><li>在舊權杖的右側選單中選擇 <strong>Delete</strong> 來撤銷舊的 PAT</li></ol><h3 id="自動化更新提醒"><a href="#自動化更新提醒" class="headerlink" title="自動化更新提醒"></a>自動化更新提醒</h3><p>建議設定日曆提醒或使用監控工具，定期檢查和更新 PAT，確保服務的持續可用性。</p><p>透過正確申請和管理 Docker Hub PAT，您可以提高 Docker 映像管理的安全性，同時保持開發和部署流程的順暢運行。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-Hub-PAT-申請指南&quot;&gt;&lt;a href=&quot;#Docker-Hub-PAT-申請指南&quot; class=&quot;headerlink&quot; title=&quot;Docker Hub PAT 申請指南&quot;&gt;&lt;/a&gt;Docker Hub PAT 申請指南&lt;/h1&gt;&lt;h2 id=&quot;什麼是-Docker-Hub-PAT？&quot;&gt;&lt;a href=&quot;#什麼是-Docker-Hub-PAT？&quot; class=&quot;headerlink&quot; title=&quot;什麼是 Docker Hub PAT？&quot;&gt;&lt;/a&gt;什麼是 Docker Hub PAT？&lt;/h2&gt;&lt;p&gt;Docker Hub Personal Access Token (PAT) 是 Docker Hub 提供的身份驗證機制，用於替代傳統的使用者名稱和密碼組合。PAT 提供了更安全的方式來存取 Docker Hub 的 API 和映像倉庫。&lt;/p&gt;
&lt;h3 id=&quot;PAT-的主要優勢：&quot;&gt;&lt;a href=&quot;#PAT-的主要優勢：&quot; class=&quot;headerlink&quot; title=&quot;PAT 的主要優勢：&quot;&gt;&lt;/a&gt;PAT 的主要優勢：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;安全性&lt;/strong&gt;：避免在腳本或配置中使用明文密碼&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;權限控制&lt;/strong&gt;：可以設定特定的權限範圍&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;易於管理&lt;/strong&gt;：可以獨立撤銷和更新，不影響帳戶密碼&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;審計追蹤&lt;/strong&gt;：提供更好的存取記錄和監控&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;為什麼需要使用-PAT？&quot;&gt;&lt;a href=&quot;#為什麼需要使用-PAT？&quot; class=&quot;headerlink&quot; title=&quot;為什麼需要使用 PAT？&quot;&gt;&lt;/a&gt;為什麼需要使用 PAT？&lt;/h3&gt;&lt;p&gt;在以下情況下，建議使用 PAT 替代密碼：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;CI&amp;#x2F;CD 流程&lt;/strong&gt;：在自動化部署中進行映像推送和拉取&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;本地開發&lt;/strong&gt;：在 Minikube 或其他本地環境中拉取私有映像&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;腳本自動化&lt;/strong&gt;：需要程式化存取 Docker Hub API&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;企業環境&lt;/strong&gt;：符合企業安全政策和最佳實務&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="docker" scheme="https://pcion123.github.io/categories/docker/"/>
    
      <category term="docker-hub" scheme="https://pcion123.github.io/categories/docker/docker-hub/"/>
    
    
      <category term="docker" scheme="https://pcion123.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes Namespace 使用指南</title>
    <link href="https://pcion123.github.io/2025/10/10/kubernetes-namespace/"/>
    <id>https://pcion123.github.io/2025/10/10/kubernetes-namespace/</id>
    <published>2025-10-10T15:48:31.000Z</published>
    <updated>2025-10-10T15:55:53.379Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Kubernetes-Namespace-使用指南"><a href="#Kubernetes-Namespace-使用指南" class="headerlink" title="Kubernetes Namespace 使用指南"></a>Kubernetes Namespace 使用指南</h1><h2 id="什麼是-Namespace？"><a href="#什麼是-Namespace？" class="headerlink" title="什麼是 Namespace？"></a>什麼是 Namespace？</h2><p>Kubernetes Namespace 是一個 API 物件，用於在 Kubernetes 叢集中創建虛擬的資源隔離環境。Namespace 提供了一種將叢集資源劃分為多個獨立區域的方式，讓不同的團隊、專案或環境可以在同一個叢集中安全地共存。</p><h3 id="Namespace-的主要功能："><a href="#Namespace-的主要功能：" class="headerlink" title="Namespace 的主要功能："></a>Namespace 的主要功能：</h3><ul><li><strong>資源隔離</strong>：將不同的應用程式或環境分隔在不同的命名空間中</li><li><strong>存取控制</strong>：透過 RBAC 實現細粒度的權限管理</li><li><strong>資源配額管理</strong>：限制每個命名空間可使用的叢集資源量</li><li><strong>名稱空間管理</strong>：避免資源名稱衝突，支援相同名稱的資源存在於不同命名空間</li></ul><h3 id="為什麼使用-Namespace？"><a href="#為什麼使用-Namespace？" class="headerlink" title="為什麼使用 Namespace？"></a>為什麼使用 Namespace？</h3><p>相較於將所有資源都放在預設命名空間中，Namespace 提供了更好的資源管理方式：</p><ol><li><strong>多租戶支援</strong>：讓多個團隊或專案安全地共享同一個 Kubernetes 叢集</li><li><strong>環境分離</strong>：清楚區分開發、測試、生產等不同環境的資源</li><li><strong>資源管理</strong>：透過資源配額控制每個環境的資源使用量</li><li><strong>權限控制</strong>：實現精細的存取權限管理，提升安全性</li></ol><span id="more"></span><hr><h2 id="預設-Namespace"><a href="#預設-Namespace" class="headerlink" title="預設 Namespace"></a>預設 Namespace</h2><p>Kubernetes 叢集預設會創建四個系統命名空間：</p><ul><li><strong>kube-system</strong>: 存放 Kubernetes 系統元件，如 kube-dns、kube-proxy、etcd 等核心服務</li><li><strong>kube-public</strong>: 公開可讀的命名空間，通常用於存放叢集資訊，所有使用者（包括未認證使用者）都可以讀取</li><li><strong>kube-node-lease</strong>: 用於 Node 租約物件，幫助確定 Node 的可用性和健康狀態</li><li><strong>default</strong>: 預設命名空間，當沒有指定命名空間時，資源會被創建在這裡</li></ul><h2 id="建立自定義-Namespace"><a href="#建立自定義-Namespace" class="headerlink" title="建立自定義 Namespace"></a>建立自定義 Namespace</h2><h3 id="方法一：使用-YAML-檔案建立"><a href="#方法一：使用-YAML-檔案建立" class="headerlink" title="方法一：使用 YAML 檔案建立"></a>方法一：使用 YAML 檔案建立</h3><p>建立 <code>dockertest-namespace.yaml</code> 檔案：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Namespace</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">dockertest-namespace</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">dockertest-namespace</span></span><br><span class="line">    <span class="attr">environment:</span> <span class="string">dev</span></span><br></pre></td></tr></table></figure><p>套用設定檔：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create -f dockertest-namespace.yaml</span><br></pre></td></tr></table></figure><img src="/2025/10/10/kubernetes-namespace/kubernetes_namespace_create.png" class="" title="namespace建立"><h3 id="方法二：使用指令直接建立"><a href="#方法二：使用指令直接建立" class="headerlink" title="方法二：使用指令直接建立"></a>方法二：使用指令直接建立</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create namespace dockertest-namespace</span><br></pre></td></tr></table></figure><h3 id="檢視所有-Namespace"><a href="#檢視所有-Namespace" class="headerlink" title="檢視所有 Namespace"></a>檢視所有 Namespace</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl get namespaces</span><br><span class="line"><span class="comment"># 或使用簡寫</span></span><br><span class="line">kubectl get ns</span><br></pre></td></tr></table></figure><h2 id="在指定-Namespace-中操作資源"><a href="#在指定-Namespace-中操作資源" class="headerlink" title="在指定 Namespace 中操作資源"></a>在指定 Namespace 中操作資源</h2><h3 id="在特定-Namespace-建立資源"><a href="#在特定-Namespace-建立資源" class="headerlink" title="在特定 Namespace 建立資源"></a>在特定 Namespace 建立資源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在指定的 namespace 中建立 pod</span></span><br><span class="line">kubectl run nginx --image=nginx -n dockertest-namespace</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 YAML 檔案建立資源到指定 namespace</span></span><br><span class="line">kubectl apply -f dockertest-deployment.yaml -n dockertest-namespace</span><br></pre></td></tr></table></figure><img src="/2025/10/10/kubernetes-namespace/kubernetes_namespace_run.png" class="" title="namespace建立pod"><h3 id="設定預設-Namespace"><a href="#設定預設-Namespace" class="headerlink" title="設定預設 Namespace"></a>設定預設 Namespace</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 設定當前 context 的預設 namespace</span></span><br><span class="line">kubectl config set-context --current --namespace=dockertest-namespace</span><br><span class="line"></span><br><span class="line"><span class="comment"># 確認目前的 context 設定</span></span><br><span class="line">kubectl config view --minify | grep namespace</span><br></pre></td></tr></table></figure><img src="/2025/10/10/kubernetes-namespace/kubernetes_namespace_default.png" class="" title="設置預設namespace"><h3 id="檢視-Namespace-中的資源"><a href="#檢視-Namespace-中的資源" class="headerlink" title="檢視 Namespace 中的資源"></a>檢視 Namespace 中的資源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 檢視指定 namespace 中的所有 pod</span></span><br><span class="line">kubectl get pods -n dockertest-namespace</span><br><span class="line"></span><br><span class="line"><span class="comment"># 檢視所有 namespace 中的 pod</span></span><br><span class="line">kubectl get pods --all-namespaces</span><br><span class="line"></span><br><span class="line"><span class="comment"># 檢視 namespace 的詳細資訊</span></span><br><span class="line">kubectl describe namespace dockertest-namespace</span><br></pre></td></tr></table></figure><img src="/2025/10/10/kubernetes-namespace/kubernetes_namespace_describe.png" class="" title="namespace詳細資訊"><h2 id="刪除-Namespace"><a href="#刪除-Namespace" class="headerlink" title="刪除 Namespace"></a>刪除 Namespace</h2><p><strong>注意：刪除 Namespace 會同時刪除該命名空間內的所有資源！</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl delete namespace dockertest-namespace</span><br></pre></td></tr></table></figure><img src="/2025/10/10/kubernetes-namespace/kubernetes_namespace_delete.png" class="" title="namespace刪除"><h2 id="資源配額管理"><a href="#資源配額管理" class="headerlink" title="資源配額管理"></a>資源配額管理</h2><p>為 Namespace 設定資源限制，避免某個環境消耗過多叢集資源：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ResourceQuota</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">compute-quota</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">dockertest-namespace</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">hard:</span></span><br><span class="line">    <span class="attr">requests.cpu:</span> <span class="string">&quot;4&quot;</span></span><br><span class="line">    <span class="attr">requests.memory:</span> <span class="string">8Gi</span></span><br><span class="line">    <span class="attr">limits.cpu:</span> <span class="string">&quot;8&quot;</span></span><br><span class="line">    <span class="attr">limits.memory:</span> <span class="string">16Gi</span></span><br><span class="line">    <span class="attr">persistentvolumeclaims:</span> <span class="string">&quot;10&quot;</span></span><br><span class="line">    <span class="attr">pods:</span> <span class="string">&quot;10&quot;</span></span><br></pre></td></tr></table></figure><h2 id="最佳實踐建議"><a href="#最佳實踐建議" class="headerlink" title="最佳實踐建議"></a>最佳實踐建議</h2><ol><li><strong>環境分離</strong>：為不同環境（開發、測試、生產）建立獨立的命名空間</li><li><strong>團隊隔離</strong>：為不同團隊或專案建立專用的命名空間</li><li><strong>命名規範</strong>：採用一致的命名規範，如 <code>team-environment</code> 格式</li><li><strong>資源配額</strong>：為每個命名空間設定合適的資源配額</li><li><strong>權限控制</strong>：結合 RBAC 實現細粒度的權限管理</li><li><strong>監控標籤</strong>：為命名空間加上有意義的標籤，便於監控和管理</li></ol><p>範例命名建議：</p><ul><li><code>frontend-dev</code>、<code>frontend-prod</code></li><li><code>backend-staging</code>、<code>backend-prod</code></li><li><code>team-alpha-dev</code>、<code>team-beta-prod</code></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Kubernetes-Namespace-使用指南&quot;&gt;&lt;a href=&quot;#Kubernetes-Namespace-使用指南&quot; class=&quot;headerlink&quot; title=&quot;Kubernetes Namespace 使用指南&quot;&gt;&lt;/a&gt;Kubernetes Namespace 使用指南&lt;/h1&gt;&lt;h2 id=&quot;什麼是-Namespace？&quot;&gt;&lt;a href=&quot;#什麼是-Namespace？&quot; class=&quot;headerlink&quot; title=&quot;什麼是 Namespace？&quot;&gt;&lt;/a&gt;什麼是 Namespace？&lt;/h2&gt;&lt;p&gt;Kubernetes Namespace 是一個 API 物件，用於在 Kubernetes 叢集中創建虛擬的資源隔離環境。Namespace 提供了一種將叢集資源劃分為多個獨立區域的方式，讓不同的團隊、專案或環境可以在同一個叢集中安全地共存。&lt;/p&gt;
&lt;h3 id=&quot;Namespace-的主要功能：&quot;&gt;&lt;a href=&quot;#Namespace-的主要功能：&quot; class=&quot;headerlink&quot; title=&quot;Namespace 的主要功能：&quot;&gt;&lt;/a&gt;Namespace 的主要功能：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;資源隔離&lt;/strong&gt;：將不同的應用程式或環境分隔在不同的命名空間中&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;存取控制&lt;/strong&gt;：透過 RBAC 實現細粒度的權限管理&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;資源配額管理&lt;/strong&gt;：限制每個命名空間可使用的叢集資源量&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;名稱空間管理&lt;/strong&gt;：避免資源名稱衝突，支援相同名稱的資源存在於不同命名空間&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;為什麼使用-Namespace？&quot;&gt;&lt;a href=&quot;#為什麼使用-Namespace？&quot; class=&quot;headerlink&quot; title=&quot;為什麼使用 Namespace？&quot;&gt;&lt;/a&gt;為什麼使用 Namespace？&lt;/h3&gt;&lt;p&gt;相較於將所有資源都放在預設命名空間中，Namespace 提供了更好的資源管理方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;多租戶支援&lt;/strong&gt;：讓多個團隊或專案安全地共享同一個 Kubernetes 叢集&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;環境分離&lt;/strong&gt;：清楚區分開發、測試、生產等不同環境的資源&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;資源管理&lt;/strong&gt;：透過資源配額控制每個環境的資源使用量&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;權限控制&lt;/strong&gt;：實現精細的存取權限管理，提升安全性&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="kubernetes" scheme="https://pcion123.github.io/categories/kubernetes/"/>
    
    
      <category term="kubernetes" scheme="https://pcion123.github.io/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes 控制元件介紹</title>
    <link href="https://pcion123.github.io/2025/10/04/kubernetes-controller-intro/"/>
    <id>https://pcion123.github.io/2025/10/04/kubernetes-controller-intro/</id>
    <published>2025-10-04T06:16:07.000Z</published>
    <updated>2025-10-04T06:29:12.402Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Kubernetes-控制元件介紹"><a href="#Kubernetes-控制元件介紹" class="headerlink" title="Kubernetes 控制元件介紹"></a>Kubernetes 控制元件介紹</h1><p>在 Kubernetes 中，我們需要控制平面 (Control Plane) 來管理 Node 的運行狀態。接下來我們將介紹 Node 是如何被管理的，以及各個控制元件的功能。</p><h2 id="整體架構概述"><a href="#整體架構概述" class="headerlink" title="整體架構概述"></a>整體架構概述</h2><p>Kubernetes 採用 Master-Worker 架構模式：</p><ul><li><strong>Control Plane (Master)</strong>: 負責管理整個叢集的決策和控制</li><li><strong>Worker Nodes</strong>: 負責執行實際的應用程式工作負載</li></ul><img src="/2025/10/04/kubernetes-controller-intro/kubernetes-control-components.svg" class="" title="Kubernetes 控制元件架構圖"><span id="more"></span><hr><h2 id="Node-Components"><a href="#Node-Components" class="headerlink" title="Node Components"></a>Node Components</h2><p>Node Components 是每個 Worker Node 必須具備的核心元件：</p><ul><li><strong>Container Runtime</strong>: 負責管理容器的生命週期，包括容器的建立、執行和銷毀</li><li><strong>kubelet</strong>: 作為 Node 的代理程式，負責建立 Pod 並維護容器的健康狀態</li><li><strong>kube-proxy</strong>: 負責處理 Node 的網路代理功能，實現服務發現和負載平衡</li></ul><h2 id="Control-Plane-Components"><a href="#Control-Plane-Components" class="headerlink" title="Control Plane Components"></a>Control Plane Components</h2><p>控制平面負責管理整個 Kubernetes 叢集中所有的 <strong>Node Components</strong>。以下是控制平面的核心元件：</p><ul><li><strong>kube-api-server</strong>: 作為 Kubernetes API 的前端，負責處理來自客戶端的請求，經過驗證和授權後，將請求轉發給對應的元件</li><li><strong>kube-scheduler</strong>: 負責將 Pod 調度到適合的 Node 上執行，會根據資源可用性、硬體需求等條件來選擇最佳的 Node</li><li><strong>kube-controller-manager</strong>: 執行各種控制器，負責監控 Kubernetes 叢集的狀態變化並確保達到期望狀態</li><li><strong>etcd</strong>: 分散式的 key-value 儲存系統，用來儲存 Kubernetes 叢集的所有配置資料和狀態資訊</li><li><strong>cloud-controller-manager</strong>: 負責與雲端服務提供商進行整合的元件，它可以幫助 Kubernetes 連接公有雲平台，使用雲端服務的 API 來管理雲端資源</li></ul><blockquote><p><strong>提示</strong><br>etcd 採用分散式架構設計，因此在一個 Kubernetes 叢集中可以同時部署多個 Control Plane 元件來實現高可用性</p></blockquote><blockquote><p><strong>提示</strong><br>cloud-controller-manager 僅在雲端環境中才會部署，如果 Kubernetes 叢集運行在本地環境則不會包含此元件（例如：minikube）</p></blockquote><p>為了確保服務的高可用性，生產環境的 Kubernetes 通常會部署兩個以上的 <strong>Control Plane</strong> 節點。</p><h2 id="元件間的通訊機制"><a href="#元件間的通訊機制" class="headerlink" title="元件間的通訊機制"></a>元件間的通訊機制</h2><p>所有元件之間的通訊都必須透過 <strong>kube-api-server</strong> 進行，它是整個 Kubernetes 架構的核心通訊樞紐：</p><ul><li>kubelet 透過 API Server 回報 Node 和 Pod 的狀態</li><li>Controller Manager 透過 API Server 監控叢集狀態</li><li>Scheduler 透過 API Server 獲取調度資訊並做出調度決策</li><li>所有配置和狀態資料都儲存在 etcd 中，只有 API Server 能直接存取</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Kubernetes-控制元件介紹&quot;&gt;&lt;a href=&quot;#Kubernetes-控制元件介紹&quot; class=&quot;headerlink&quot; title=&quot;Kubernetes 控制元件介紹&quot;&gt;&lt;/a&gt;Kubernetes 控制元件介紹&lt;/h1&gt;&lt;p&gt;在 Kubernetes 中，我們需要控制平面 (Control Plane) 來管理 Node 的運行狀態。接下來我們將介紹 Node 是如何被管理的，以及各個控制元件的功能。&lt;/p&gt;
&lt;h2 id=&quot;整體架構概述&quot;&gt;&lt;a href=&quot;#整體架構概述&quot; class=&quot;headerlink&quot; title=&quot;整體架構概述&quot;&gt;&lt;/a&gt;整體架構概述&lt;/h2&gt;&lt;p&gt;Kubernetes 採用 Master-Worker 架構模式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Control Plane (Master)&lt;/strong&gt;: 負責管理整個叢集的決策和控制&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Worker Nodes&lt;/strong&gt;: 負責執行實際的應用程式工作負載&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&quot;/2025/10/04/kubernetes-controller-intro/kubernetes-control-components.svg&quot; class=&quot;&quot; title=&quot;Kubernetes 控制元件架構圖&quot;&gt;
    
    </summary>
    
    
      <category term="kubernetes" scheme="https://pcion123.github.io/categories/kubernetes/"/>
    
    
      <category term="kubernetes" scheme="https://pcion123.github.io/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes 核心元件介紹</title>
    <link href="https://pcion123.github.io/2025/09/28/kubernetes-core-intro/"/>
    <id>https://pcion123.github.io/2025/09/28/kubernetes-core-intro/</id>
    <published>2025-09-28T14:58:35.000Z</published>
    <updated>2025-10-04T06:21:42.560Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Kubernetes-核心元件介紹"><a href="#Kubernetes-核心元件介紹" class="headerlink" title="Kubernetes 核心元件介紹"></a>Kubernetes 核心元件介紹</h1><h2 id="架構總覽"><a href="#架構總覽" class="headerlink" title="架構總覽"></a>架構總覽</h2><img src="/2025/09/28/kubernetes-core-intro/kubernetes-components-overview.svg" class="" title="Kubernetes 架構圖"><p><em>上圖展示了 Kubernetes 完整架構，包含控制平面、工作節點、服務層和配置管理等核心元件及其互動關係</em></p><span id="more"></span><hr><h2 id="Pod"><a href="#Pod" class="headerlink" title="Pod"></a>Pod</h2><p><strong>Kubernetes 中的最小運行單位</strong></p><ul><li>每個 Pod 都會被分配一個唯一的虛擬 IP 位址</li><li><strong>Container</strong>: Pod 內運行的應用程式容器，雖然每個 Pod 可以運行多個容器，但通常建議只運行一個主要容器</li></ul><h2 id="Node"><a href="#Node" class="headerlink" title="Node"></a>Node</h2><p><strong>Kubernetes 叢集的工作節點</strong></p><ul><li>可以是實體機器或虛擬機器</li><li>多個 Node 組成 Kubernetes 叢集，提供運算資源</li></ul><h2 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h2><p><strong>提供穩定的網路端點</strong></p><ul><li>解決 Pod 重啟時 IP 位址變動的問題</li><li>提供固定的 IP 位址和 DNS 名稱，作為 Pod 群組的存取入口</li><li>分為兩種類型：<ul><li><strong>內部 Service</strong>: 僅供叢集內部通訊使用</li><li><strong>外部 Service</strong>: 允許外部流量存取</li></ul></li></ul><h2 id="Ingress"><a href="#Ingress" class="headerlink" title="Ingress"></a>Ingress</h2><p><strong>HTTP&#x2F;HTTPS 路由管理</strong></p><ul><li>提供域名對應服務，讓外部用戶能透過網域名稱存取 Service</li><li>支援 SSL&#x2F;TLS 憑證管理和負載平衡</li></ul><h2 id="ConfigMap"><a href="#ConfigMap" class="headerlink" title="ConfigMap"></a>ConfigMap</h2><p><strong>應用程式配置管理</strong></p><ul><li>儲存非敏感的配置資料（如設定檔、環境變數）</li><li>避免因配置變更而重新建置映像檔，減少部署停機時間</li><li>支援熱更新配置</li></ul><blockquote><p><strong>警告</strong><br>ConfigMap 以明文方式儲存內容，<strong>請勿存放敏感資料</strong></p></blockquote><h2 id="Secret"><a href="#Secret" class="headerlink" title="Secret"></a>Secret</h2><p><strong>敏感資料安全儲存</strong></p><ul><li>專門用於儲存機敏資料（如密碼、API 金鑰、憑證）</li><li>資料以 Base64 編碼格式儲存</li><li>提供比 ConfigMap 更高的安全性</li></ul><blockquote><p><strong>註解</strong><br>Secret 使用 Base64 編碼儲存資料，並可與 Pod 安全地共享</p></blockquote><h2 id="Volumes"><a href="#Volumes" class="headerlink" title="Volumes"></a>Volumes</h2><p><strong>持久化資料儲存</strong></p><ul><li>解決容器重啟時資料遺失的問題</li><li>提供多種儲存類型（本機儲存、網路儲存、雲端儲存）</li><li>確保重要資料在 Pod 生命週期外持續保存</li></ul><h2 id="Deployment"><a href="#Deployment" class="headerlink" title="Deployment"></a>Deployment</h2><p><strong>無狀態應用程式的部署管理</strong></p><ul><li>管理 Pod 的部署、更新和擴縮容</li><li>提供聲明式更新，確保應用程式的期望狀態</li><li>支援滾動更新（Rolling Update）和回滾功能</li><li>適用於無狀態的應用程式，如網頁伺服器、API 服務</li><li>主要功能：<ul><li><strong>副本管理</strong>: 確保指定數量的 Pod 副本正常運行</li><li><strong>自動修復</strong>: 當 Pod 異常時自動重新建立</li><li><strong>版本控制</strong>: 追蹤部署歷史，支援快速回滾</li><li><strong>零停機部署</strong>: 透過滾動更新實現無中斷服務更新</li></ul></li></ul><blockquote><p><strong>提示</strong><br>Deployment 是部署無狀態應用程式的首選方式，提供了強大的生命週期管理功能</p></blockquote><h2 id="StatefulSet"><a href="#StatefulSet" class="headerlink" title="StatefulSet"></a>StatefulSet</h2><p><strong>有狀態應用程式的部署管理</strong></p><ul><li>專門用於管理有狀態的應用程式，如資料庫、訊息佇列</li><li>為每個 Pod 提供穩定且唯一的網路識別符</li><li>保證 Pod 的有序部署、擴縮容和終止</li><li>提供持久化儲存與 Pod 的穩定綁定關係</li><li>主要特色：<ul><li><strong>穩定的網路識別</strong>: 每個 Pod 都有固定的主機名稱（如 pod-0, pod-1）</li><li><strong>有序部署</strong>: Pod 按照順序建立，確保前一個 Pod 就緒後才建立下一個</li><li><strong>持久儲存</strong>: 每個 Pod 都有專屬的持久化儲存卷</li><li><strong>有序終止</strong>: 刪除時按照相反順序進行，確保資料完整性</li></ul></li></ul><blockquote><p><strong>重要提示</strong><br>StatefulSet 適用於需要穩定儲存和網路識別的應用程式，如 MySQL、MongoDB、Kafka 等</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Kubernetes-核心元件介紹&quot;&gt;&lt;a href=&quot;#Kubernetes-核心元件介紹&quot; class=&quot;headerlink&quot; title=&quot;Kubernetes 核心元件介紹&quot;&gt;&lt;/a&gt;Kubernetes 核心元件介紹&lt;/h1&gt;&lt;h2 id=&quot;架構總覽&quot;&gt;&lt;a href=&quot;#架構總覽&quot; class=&quot;headerlink&quot; title=&quot;架構總覽&quot;&gt;&lt;/a&gt;架構總覽&lt;/h2&gt;&lt;img src=&quot;/2025/09/28/kubernetes-core-intro/kubernetes-components-overview.svg&quot; class=&quot;&quot; title=&quot;Kubernetes 架構圖&quot;&gt;

&lt;p&gt;&lt;em&gt;上圖展示了 Kubernetes 完整架構，包含控制平面、工作節點、服務層和配置管理等核心元件及其互動關係&lt;/em&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="kubernetes" scheme="https://pcion123.github.io/categories/kubernetes/"/>
    
    
      <category term="kubernetes" scheme="https://pcion123.github.io/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu安裝Minikube (2025)</title>
    <link href="https://pcion123.github.io/2025/09/23/minikube-install-2025/"/>
    <id>https://pcion123.github.io/2025/09/23/minikube-install-2025/</id>
    <published>2025-09-23T15:32:37.000Z</published>
    <updated>2025-09-24T16:38:16.885Z</updated>
    
    <content type="html"><![CDATA[<p>在現代容器化開發環境中，Minikube 是學習和測試 Kubernetes 的絕佳工具。本文將詳細介紹如何在 Ubuntu 24.04.3 LTS 上完整建置 Minikube 環境，包含 Docker 容器引擎、kubectl 命令列工具，以及完整的 Tomcat 服務部署範例。</p><p>無論您是 Kubernetes 初學者還是需要本地開發環境的工程師，這篇指南都將協助您快速建立一個功能完整的本地 Kubernetes 集群。</p><h2 id="環境需求"><a href="#環境需求" class="headerlink" title="環境需求"></a>環境需求</h2><ul><li><strong>作業系統</strong>: Ubuntu 24.04.3 LTS</li><li><strong>記憶體</strong>: 建議至少 4GB RAM</li><li><strong>硬碟空間</strong>: 建議至少 20GB 可用空間</li><li><strong>網路</strong>: 可存取網際網路進行套件下載</li></ul><span id="more"></span><h2 id="第一步：系統前置準備"><a href="#第一步：系統前置準備" class="headerlink" title="第一步：系統前置準備"></a>第一步：系統前置準備</h2><p>在開始安裝之前，我們需要更新系統套件並安裝必要的基礎工具。這些工具將為後續的 Docker 和 Kubernetes 組件安裝提供支援。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">更新系統套件資料庫並升級現有套件</span></span><br><span class="line">sudo apt update &amp;&amp; sudo apt upgrade -y</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安裝必要的基礎工具</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">curl: 用於下載檔案</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">wget: 另一個下載工具</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">apt-transport-https: 支援 HTTPS 來源</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ca-certificates: 憑證管理</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">software-properties-common: 軟體來源管理</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">conntrack: Kubernetes 網路追蹤所需</span></span><br><span class="line">sudo apt install -y curl wget apt-transport-https ca-certificates software-properties-common conntrack</span><br></pre></td></tr></table></figure><h2 id="第二步：安裝-Docker-容器引擎"><a href="#第二步：安裝-Docker-容器引擎" class="headerlink" title="第二步：安裝 Docker 容器引擎"></a>第二步：安裝 Docker 容器引擎</h2><p>Docker 是 Minikube 的容器運行時環境。Minikube 支援多種容器引擎，但 Docker 是最常用且穩定的選擇。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安裝 Docker 社群版本</span></span><br><span class="line">sudo apt install -y docker.io</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">啟動 Docker 服務並設定為開機自動啟動</span></span><br><span class="line">sudo systemctl enable --now docker</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">將目前使用者加入 docker 群組，避免每次都需要 <span class="built_in">sudo</span></span></span><br><span class="line">sudo usermod -aG docker $USER</span><br></pre></td></tr></table></figure><p>這一步完成後需要 <strong>重新登入系統</strong> 或執行 <code>newgrp docker</code> 讓群組變更生效。</p><blockquote><p><strong>重要提醒</strong>: 將使用者加入 docker 群組可以避免每次執行 Docker 指令時都需要 sudo 權限，但請注意這會給予該使用者等同 root 的權限來操作 Docker。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">驗證 Docker 安裝是否成功</span></span><br><span class="line">docker version</span><br></pre></td></tr></table></figure><h2 id="第三步：安裝-kubectl-命令列工具"><a href="#第三步：安裝-kubectl-命令列工具" class="headerlink" title="第三步：安裝 kubectl 命令列工具"></a>第三步：安裝 kubectl 命令列工具</h2><p>kubectl 是 Kubernetes 的官方命令列工具，用於與 Kubernetes 集群進行互動。它可以讓我們管理 Pod、Service、Deployment 等各種 Kubernetes 資源。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">取得最新穩定版本的版本號</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">KUBECTL_VER=$(curl -L -s https://dl.k8s.io/release/stable.txt)</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下載對應版本的 kubectl 執行檔</span></span><br><span class="line">curl -LO &quot;https://dl.k8s.io/release/$KUBECTL_VER/bin/linux/amd64/kubectl&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">賦予執行權限</span></span><br><span class="line">chmod +x kubectl</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">移動到系統執行路徑</span></span><br><span class="line">sudo mv kubectl /usr/local/bin/</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">驗證 kubectl 安裝是否成功</span></span><br><span class="line">kubectl version --client</span><br></pre></td></tr></table></figure><h2 id="第四步：安裝並設定-Minikube"><a href="#第四步：安裝並設定-Minikube" class="headerlink" title="第四步：安裝並設定 Minikube"></a>第四步：安裝並設定 Minikube</h2><p>Minikube 是一個輕量級的 Kubernetes 實作，設計用於在本地環境運行單節點的 Kubernetes 集群。它非常適合開發、測試和學習 Kubernetes。</p><h3 id="基礎安裝"><a href="#基礎安裝" class="headerlink" title="基礎安裝"></a>基礎安裝</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下載最新版本的 Minikube</span></span><br><span class="line">curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安裝到系統執行路徑</span></span><br><span class="line">sudo install minikube-linux-amd64 /usr/local/bin/minikube</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">驗證 Minikube 安裝是否成功</span></span><br><span class="line">minikube version</span><br></pre></td></tr></table></figure><p>以下是 Minikube 的常用操作指令，建議先熟悉這些基本指令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看 Minikube 版本資訊</span></span><br><span class="line">minikube version</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看目前集群狀態</span></span><br><span class="line">minikube status</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">啟動 Kubernetes 集群</span></span><br><span class="line">minikube start</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">停止集群（保留資料）</span></span><br><span class="line">minikube stop</span><br></pre></td></tr></table></figure><h3 id="啟動-Minikube-集群"><a href="#啟動-Minikube-集群" class="headerlink" title="啟動 Minikube 集群"></a>啟動 Minikube 集群</h3><p>在完成安裝後，我們可以開始啟動並測試 Minikube 集群：</p><ul><li>啟動minikube</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用 Docker 作為容器引擎啟動集群</span></span><br><span class="line">minikube start --driver=docker</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">啟動集群並指定特定的 Kubernetes 版本</span></span><br><span class="line">minikube start --driver=docker --kubernetes-version=v1.29.0</span><br></pre></td></tr></table></figure><ul><li>建立外部存取代理</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">建立代理連線，允許外部存取 Kubernetes API</span></span><br><span class="line">kubectl proxy --address=&#x27;0.0.0.0&#x27; --disable-filter=true</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意</strong>: 此指令會在背景持續運行，建議在新的終端視窗中執行</p></blockquote><img src="/2025/09/23/minikube-install-2025/minikube_start.png" class=""><ul><li>存取 Kubernetes Dashboard</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">啟動 Web 介面儀表板並取得存取網址</span></span><br><span class="line">minikube dashboard --url</span><br></pre></td></tr></table></figure><p>此指令會輸出一個網址，您可以在瀏覽器中開啟此網址來存取 Kubernetes 的視覺化管理介面。</p><img src="/2025/09/23/minikube-install-2025/minikube_dashboard.png" class=""><p>查看dashboard實際運行結果</p><img src="/2025/09/23/minikube-install-2025/minikube_dashboard_url.png" class=""><h3 id="實戰範例：部署-Tomcat-應用程式"><a href="#實戰範例：部署-Tomcat-應用程式" class="headerlink" title="實戰範例：部署 Tomcat 應用程式"></a>實戰範例：部署 Tomcat 應用程式</h3><p>為了驗證 Minikube 環境運作正常，我們將部署一個完整的 Tomcat Web 應用程式作為示範。</p><h4 id="步驟一：啟用-Ingress-控制器"><a href="#步驟一：啟用-Ingress-控制器" class="headerlink" title="步驟一：啟用 Ingress 控制器"></a>步驟一：啟用 Ingress 控制器</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">啟用 Ingress 控制器附加元件</span></span><br><span class="line">minikube addons enable ingress</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">等待 Ingress 控制器 Pod 準備完成</span></span><br><span class="line">kubectl -n ingress-nginx get pods -l app.kubernetes.io/component=controller -w</span><br></pre></td></tr></table></figure><blockquote><p><strong>提示</strong>: 使用 <code>-w</code> 參數可以持續監看 Pod 狀態變化，看到 Running 狀態時按 Ctrl+C 退出</p></blockquote><h4 id="步驟二：準備-Kubernetes-YAML-配置檔"><a href="#步驟二：準備-Kubernetes-YAML-配置檔" class="headerlink" title="步驟二：準備 Kubernetes YAML 配置檔"></a>步驟二：準備 Kubernetes YAML 配置檔</h4><p>以下是一個完整的 Tomcat 部署配置，包含 Deployment、Service 和 Ingress 三個資源：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">tomcat-deployment</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">tomcat</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">tomcat</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">tomcat</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">tomcat:10.1-jdk17</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">8080</span></span><br><span class="line">        <span class="attr">command:</span> [<span class="string">&quot;/bin/sh&quot;</span>,<span class="string">&quot;-c&quot;</span>]</span><br><span class="line">        <span class="attr">args:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">cp</span> <span class="string">-r</span> <span class="string">/usr/local/tomcat/webapps.dist/ROOT</span> <span class="string">/usr/local/tomcat/webapps/</span> <span class="string">&amp;&amp;</span> <span class="string">exec</span> <span class="string">catalina.sh</span> <span class="string">run</span></span><br><span class="line">        <span class="attr">readinessProbe:</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">5</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">tomcat-service</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">tomcat</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8080</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">tomcat-ingress</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ingressClassName:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">        <span class="attr">pathType:</span> <span class="string">Prefix</span></span><br><span class="line">        <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">service:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">tomcat-service</span></span><br><span class="line">            <span class="attr">port:</span></span><br><span class="line">              <span class="attr">number:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure><h4 id="步驟三：部署服務到集群"><a href="#步驟三：部署服務到集群" class="headerlink" title="步驟三：部署服務到集群"></a>步驟三：部署服務到集群</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">部署 YAML 配置到集群</span></span><br><span class="line">kubectl apply -f tomcat.yaml</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看 Pod 運行狀態</span></span><br><span class="line">kubectl get pods</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看所有相關資源狀態</span></span><br><span class="line">kubectl get deployment,service,ingress</span><br></pre></td></tr></table></figure><p>驗證服務是否正常運行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">取得 Minikube 集群 IP 位址</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">MINIKUBE_IP=$(minikube ip)</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看 Minikube IP</span></span><br><span class="line">echo &quot;Minikube IP: $MINIKUBE_IP&quot;</span><br></pre></td></tr></table></figure><p>現在可以在瀏覽器中開啟 <code>http://$MINIKUBE_IP</code> 來查看 Tomcat 歡迎頁面。</p><img src="/2025/09/23/minikube-install-2025/minikube_tomcat_host.png" class=""><h2 id="VirtualBox-環境特殊設定"><a href="#VirtualBox-環境特殊設定" class="headerlink" title="VirtualBox 環境特殊設定"></a>VirtualBox 環境特殊設定</h2><p>如果您是在 VirtualBox 虛擬機中運行 Ubuntu Server，需要進行額外的網路設定以便從主機存取服務。</p><h3 id="SSH-隧道設定"><a href="#SSH-隧道設定" class="headerlink" title="SSH 隧道設定"></a>SSH 隧道設定</h3><p>由於 VirtualBox NAT 網路的限制，我們需要建立 SSH 隧道來橋接主機與虛擬機內的服務：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 建立 SSH 隧道，將主機的 18080 埠轉發到 Minikube 的 80 埠</span></span><br><span class="line"><span class="comment"># 假設您的 SSH 服務運行在虛擬機的 2222 埠上</span></span><br><span class="line">ssh -N -L 18080:<span class="variable">$MINIKUBE_IP</span>:80 -p 2222 <span class="variable">$USER</span>@127.0.0.1</span><br></pre></td></tr></table></figure><p><strong>參數說明</strong>：</p><ul><li><code>-N</code>: 不執行遠端指令，僅用於建立隧道</li><li><code>-L 18080:$MINIKUBE_IP:80</code>: 將本機 18080 埠轉發到目標的 80 埠</li><li><code>-p 2222</code>: SSH 服務埠號</li><li><code>$USER@127.0.0.1</code>: 使用者名稱和虛擬機位址</li></ul><p>設定完成後，您就可以在 Windows 主機的瀏覽器中輸入 <code>http://localhost:18080</code> 來存取 Tomcat 服務。</p><h3 id="VirtualBox-NAT-設定"><a href="#VirtualBox-NAT-設定" class="headerlink" title="VirtualBox NAT 設定"></a>VirtualBox NAT 設定</h3><p>確保您的 VirtualBox 虛擬機網路設定如下：</p><ol><li>網路介面卡設定為 <strong>NAT</strong> 模式</li><li>進階設定中開啟<strong>埠轉發</strong>規則：</li></ol><img src="/2025/09/23/minikube-install-2025/virtual_box_nat.png" class=""><h3 id="網路架構圖"><a href="#網路架構圖" class="headerlink" title="網路架構圖"></a>網路架構圖</h3><p>下圖展示了完整的 Minikube + Tomcat + Ingress 網路架構：</p><img src="/2025/09/23/minikube-install-2025/net.svg" class="" title="Minikube Tomcat Ingress 網路架構圖"><h2 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h2><p>本文詳細介紹了在 Ubuntu 24.04.3 上建置 Minikube 開發環境的完整流程，包含：</p><h3 id="主要完成項目"><a href="#主要完成項目" class="headerlink" title="主要完成項目"></a>主要完成項目</h3><ol><li><strong>系統環境準備</strong> - 安裝必要的基礎套件和工具</li><li><strong>Docker 容器引擎</strong> - 作為 Minikube 的容器運行時</li><li><strong>kubectl 工具</strong> - Kubernetes 的命令列管理介面</li><li><strong>Minikube 本機集群</strong> - 單節點 Kubernetes 環境</li><li><strong>完整應用部署</strong> - Tomcat Web 服務的實際範例</li><li><strong>Ingress 控制器</strong> - 處理外部流量的入口管理</li><li><strong>VirtualBox 整合</strong> - 虛擬機環境下的網路設定</li></ol><h3 id="下一步建議"><a href="#下一步建議" class="headerlink" title="下一步建議"></a>下一步建議</h3><p>完成本教學後，您可以：</p><ul><li>嘗試部署其他類型的應用程式（如 MySQL、Redis 等）</li><li>學習 Kubernetes 的進階概念（ConfigMap、Secret、PersistentVolume）</li><li>探索 Minikube 的其他附加元件（Metrics Server、Dashboard 等）</li><li>實驗不同的部署策略（Rolling Update、Blue-Green Deployment）</li></ul><h3 id="常見問題排除"><a href="#常見問題排除" class="headerlink" title="常見問題排除"></a>常見問題排除</h3><ul><li>如果遇到資源不足的問題，可以調整 Minikube 的記憶體和 CPU 配置</li><li>若服務無法存取，請檢查防火牆設定和網路配置</li><li>Docker 權限問題請確認使用者是否已加入 docker 群組</li></ul><p>透過這個環境，您已經具備了本地 Kubernetes 開發的基礎設施，可以開始探索容器編排和微服務架構的精彩世界。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在現代容器化開發環境中，Minikube 是學習和測試 Kubernetes 的絕佳工具。本文將詳細介紹如何在 Ubuntu 24.04.3 LTS 上完整建置 Minikube 環境，包含 Docker 容器引擎、kubectl 命令列工具，以及完整的 Tomcat 服務部署範例。&lt;/p&gt;
&lt;p&gt;無論您是 Kubernetes 初學者還是需要本地開發環境的工程師，這篇指南都將協助您快速建立一個功能完整的本地 Kubernetes 集群。&lt;/p&gt;
&lt;h2 id=&quot;環境需求&quot;&gt;&lt;a href=&quot;#環境需求&quot; class=&quot;headerlink&quot; title=&quot;環境需求&quot;&gt;&lt;/a&gt;環境需求&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;作業系統&lt;/strong&gt;: Ubuntu 24.04.3 LTS&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;記憶體&lt;/strong&gt;: 建議至少 4GB RAM&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;硬碟空間&lt;/strong&gt;: 建議至少 20GB 可用空間&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;網路&lt;/strong&gt;: 可存取網際網路進行套件下載&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="kubernetes" scheme="https://pcion123.github.io/categories/kubernetes/"/>
    
    
      <category term="linux" scheme="https://pcion123.github.io/tags/linux/"/>
    
      <category term="ubuntu" scheme="https://pcion123.github.io/tags/ubuntu/"/>
    
      <category term="docker" scheme="https://pcion123.github.io/tags/docker/"/>
    
      <category term="kubernetes" scheme="https://pcion123.github.io/tags/kubernetes/"/>
    
      <category term="minikube" scheme="https://pcion123.github.io/tags/minikube/"/>
    
  </entry>
  
  <entry>
    <title>美化 PowerShell：Oh My Posh 全攻略 (2025)</title>
    <link href="https://pcion123.github.io/2025/09/18/powershell-improve-2025/"/>
    <id>https://pcion123.github.io/2025/09/18/powershell-improve-2025/</id>
    <published>2025-09-18T14:43:20.000Z</published>
    <updated>2025-09-24T16:35:34.840Z</updated>
    
    <content type="html"><![CDATA[<p>最近把內建的 Windows PowerShell 5.1 直接升級到跨平台的 PowerShell 7，啟動速度、互動補全與外觀自訂一次大進化。於是把這次從「升級 → 權限工具 (gsudo) → Prompt 美化 (Oh My Posh) → 文字&#x2F;字型 → 終端顏色主題」的完整流程整理成筆記，之後重裝或換機也能快速複製。 </p><p>這篇你將會獲得：</p><ol><li>乾淨可重現的 Profile 初始化步驟</li><li>提升效率的補全與權限操作設定</li><li>一套漂亮又資訊量足夠的 Prompt 主題</li><li>Windows Terminal 配色與字型建議</li></ol><p>先來看看升級前「尚未美化」的樣子，然後開始改造：</p><img src="/2025/09/18/powershell-improve-2025/powershell_old.png" class=""><span id="more"></span><h2 id="PowerShell-Profile-準備"><a href="#PowerShell-Profile-準備" class="headerlink" title="PowerShell Profile 準備"></a>PowerShell Profile 準備</h2><p>之後的功能（自動補全、別名、提示主題等）都會寫進個人 Profile。先確認目前的 <code>$PROFILE</code> 是否存在，沒有就建立。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看目前使用的 Profile 路徑</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$PROFILE</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 檢查檔案是否存在（True = 已存在）</span></span><br><span class="line">Test-Path <span class="variable">$PROFILE</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 直接用記事本編輯</span></span><br><span class="line">notepad <span class="variable">$PROFILE</span></span><br></pre></td></tr></table></figure><h3 id="Windows-PowerShell-5-1-目錄"><a href="#Windows-PowerShell-5-1-目錄" class="headerlink" title="Windows PowerShell 5.1 目錄"></a>Windows PowerShell 5.1 目錄</h3><p>舊版（內建）使用的目錄名稱是 <code>WindowsPowerShell</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 檢查舊版目錄是否存在</span></span><br><span class="line">Test-Path <span class="string">&quot;C:\Users\&#123;你的帳戶&#125;\Documents\WindowsPowerShell&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立目錄（若不存在）</span></span><br><span class="line">New-Item -ItemType Directory -Path <span class="string">&quot;C:\Users\&#123;你的帳戶&#125;\Documents\WindowsPowerShell&quot;</span> -Force</span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立 Profile（空檔案）</span></span><br><span class="line">New-Item -ItemType File -Path <span class="variable">$PROFILE</span> -Force</span><br></pre></td></tr></table></figure><h3 id="PowerShell-7-目錄"><a href="#PowerShell-7-目錄" class="headerlink" title="PowerShell 7 目錄"></a>PowerShell 7 目錄</h3><p>PowerShell 7 之後改用新目錄 <code>PowerShell</code>，不要混用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 檢查新版目錄是否存在</span></span><br><span class="line">Test-Path <span class="string">&quot;C:\Users\&#123;你的帳戶&#125;\Documents\PowerShell&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立目錄</span></span><br><span class="line">New-Item -ItemType Directory -Path <span class="string">&quot;C:\Users\&#123;你的帳戶&#125;\Documents\PowerShell&quot;</span> -Force</span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立 Profile</span></span><br><span class="line">New-Item -ItemType File -Path <span class="variable">$PROFILE</span> -Force</span><br></pre></td></tr></table></figure><h2 id="安裝-PowerShell-7"><a href="#安裝-PowerShell-7" class="headerlink" title="安裝 PowerShell 7"></a>安裝 PowerShell 7</h2><p>使用 winget 最方便：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安裝</span></span><br><span class="line">winget install --<span class="built_in">id</span> Microsoft.Powershell --<span class="built_in">source</span> winget</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新</span></span><br><span class="line">winget upgrade --<span class="built_in">id</span> Microsoft.Powershell</span><br></pre></td></tr></table></figure><h3 id="啟用指令歷史-AI-預測補全"><a href="#啟用指令歷史-AI-預測補全" class="headerlink" title="啟用指令歷史 + AI 預測補全"></a>啟用指令歷史 + AI 預測補全</h3><p>建議在 Profile 中加入 PSReadLine 設定：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用歷史紀錄 (History) + 外掛/擴充來源 (Plugin) 同時提供預測建議。</span></span><br><span class="line"><span class="comment"># 其他可選值：None / History / Plugin / HistoryAndPlugin</span></span><br><span class="line"><span class="built_in">Set-PSReadLineOption</span> <span class="literal">-PredictionSource</span> HistoryAndPlugin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 將多筆建議以清單面板顯示於游標下方（ListView）。</span></span><br><span class="line"><span class="comment"># 若偏好行內灰色字體，可改用：InlineView</span></span><br><span class="line"><span class="built_in">Set-PSReadLineOption</span> <span class="literal">-PredictionViewStyle</span> ListView</span><br></pre></td></tr></table></figure><p>若想立即測試：把以上貼進 <code>notepad $PROFILE</code> 開啟的檔案末端後存檔，再開新視窗生效。</p><h2 id="gsudo：快速取得系統權限"><a href="#gsudo：快速取得系統權限" class="headerlink" title="gsudo：快速取得系統權限"></a>gsudo：快速取得系統權限</h2><p><code>gsudo</code> 可視為 Windows 版 <code>sudo</code>，不用每次再手動啟動「以系統管理員身分執行」。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安裝</span></span><br><span class="line">winget install gerardog.gsudo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新</span></span><br><span class="line">winget upgrade gerardog.gsudo</span><br></pre></td></tr></table></figure><p>在 Profile 中加入別名：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Set-Alias</span> sudo gsudo</span><br></pre></td></tr></table></figure><p>如果在 Windows Terminal 中想建立一個自動提權啟動 PowerShell 7 的命令，可在設定中指定：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gsudo.exe &quot;C:\Program Files\PowerShell\7\pwsh.exe&quot;</span><br></pre></td></tr></table></figure><img src="/2025/09/18/powershell-improve-2025/gsudo_command_setting.png" class=""><h2 id="Oh-My-Posh：Prompt-主題美化"><a href="#Oh-My-Posh：Prompt-主題美化" class="headerlink" title="Oh My Posh：Prompt 主題美化"></a>Oh My Posh：Prompt 主題美化</h2><h3 id="安裝-Nerd-Font-字型"><a href="#安裝-Nerd-Font-字型" class="headerlink" title="安裝 Nerd Font 字型"></a>安裝 Nerd Font 字型</h3><p>先到 <a href="https://www.nerdfonts.com/font-downloads">Nerd Fonts 官網</a> 下載一款字型（建議 FiraCode &#x2F; Meslo &#x2F; JetBrainsMono），安裝後到 Windows Terminal 的該 Profile 內套用，避免符號亂碼。</p><h3 id="安裝-Oh-My-Posh"><a href="#安裝-Oh-My-Posh" class="headerlink" title="安裝 Oh My Posh"></a>安裝 Oh My Posh</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">winget install JanDeDobbeleer.OhMyPosh -s winget</span><br><span class="line">winget upgrade JanDeDobbeleer.OhMyPosh</span><br></pre></td></tr></table></figure><h3 id="啟用並指定主題"><a href="#啟用並指定主題" class="headerlink" title="啟用並指定主題"></a>啟用並指定主題</h3><p>在 Profile 內加入（可先用 <code>notepad $PROFILE</code> 開啟）：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 初始化（預設主題）</span></span><br><span class="line"><span class="built_in">oh</span><span class="literal">-my-posh</span> init pwsh | <span class="built_in">Invoke-Expression</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定 paradox 主題（可改成任意 .omp.json）</span></span><br><span class="line"><span class="built_in">oh</span><span class="literal">-my-posh</span> init pwsh <span class="literal">--config</span> <span class="string">&quot;<span class="variable">$env:POSH_THEMES_PATH</span>\paradox.omp.json&quot;</span> | <span class="built_in">Invoke-Expression</span></span><br></pre></td></tr></table></figure><p>查看有哪些內建主題：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Get-ChildItem</span> <span class="variable">$env:POSH_THEMES_PATH</span> <span class="literal">-Recurse</span> <span class="literal">-Filter</span> <span class="string">&quot;*.omp.json&quot;</span></span><br></pre></td></tr></table></figure><p>修改後重新開一個新的 PowerShell 視窗即可看到效果。</p><h2 id="安裝-Git（若尚未安裝）"><a href="#安裝-Git（若尚未安裝）" class="headerlink" title="安裝 Git（若尚未安裝）"></a>安裝 Git（若尚未安裝）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">winget install --<span class="built_in">id</span> Git.Git -e --<span class="built_in">source</span> winget</span><br><span class="line">winget upgrade Git.Git</span><br></pre></td></tr></table></figure><h2 id="Windows-Terminal-主題配色（Schemes）"><a href="#Windows-Terminal-主題配色（Schemes）" class="headerlink" title="Windows Terminal 主題配色（Schemes）"></a>Windows Terminal 主題配色（Schemes）</h2><p>可到 <a href="https://windowsterminalthemes.dev/">Windows Terminal Themes</a> 挑選喜歡的色票，將 JSON 片段貼進設定檔的 <code>schemes</code> 陣列，再於對應 Profile 設 <code>&quot;colorScheme&quot;</code> 為該名稱。</p><img src="/2025/09/18/powershell-improve-2025/windows_terminal_themes.png" class=""><p>例如 <code>Espresso</code>：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;background&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#323232&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;black&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#353535&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;blue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#6C99BB&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;brightBlack&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#535353&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;brightBlue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#8AB7D9&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;brightCyan&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#DCF4FF&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;brightGreen&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#C2E075&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;brightPurple&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#EFB5F7&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;brightRed&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#F00C0C&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;brightWhite&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#FFFFFF&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;brightYellow&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#E1E48B&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;cursorColor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#D6D6D6&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;cyan&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#BED6FF&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;foreground&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#FFFFFF&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;green&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#A5C261&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Espresso&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;purple&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#D197D9&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;red&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#D25252&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;selectionBackground&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#5B5B5B&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;white&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#EEEEEC&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;yellow&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#FFC66D&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>開啟 JSON 設定：</p><img src="/2025/09/18/powershell-improve-2025/windows_terminal_json.png" class=""><ol><li>將上述片段加入 <code>schemes</code>。</li><li>在對應的 Profile 中設定：<code>&quot;colorScheme&quot;: &quot;Espresso&quot;</code>。</li></ol><h2 id="VS-Code-終端機設定"><a href="#VS-Code-終端機設定" class="headerlink" title="VS Code 終端機設定"></a>VS Code 終端機設定</h2><p>如果你有在使用 VS Code，記得同步調整編輯器內建終端機的字型設定，否則 Oh My Posh 的特殊符號會出現亂碼。</p><h3 id="設定步驟"><a href="#設定步驟" class="headerlink" title="設定步驟"></a>設定步驟</h3><ol><li>開啟 VS Code 設定（<code>Ctrl + ,</code> 或 <code>File &gt; Preferences &gt; Settings</code>）</li><li>搜尋 <code>terminal.integrated.fontFamily</code></li><li>將字型設定為你剛才安裝的 Nerd Font，例如：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;FiraCode Nerd Font&#x27;, &#x27;Meslo LG M DZ for Powerline&#x27;, Consolas, &#x27;Courier New&#x27;, monospace</span><br></pre></td></tr></table></figure></li></ol><h3 id="建議設定值"><a href="#建議設定值" class="headerlink" title="建議設定值"></a>建議設定值</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;terminal.integrated.fontFamily&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#x27;FiraCode Nerd Font&#x27;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;terminal.integrated.fontSize&quot;</span><span class="punctuation">:</span> <span class="number">14</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;terminal.integrated.cursorBlinking&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;terminal.integrated.cursorStyle&quot;</span><span class="punctuation">:</span> <span class="string">&quot;line&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>這樣設定後，VS Code 內建終端機就能正確顯示 Oh My Posh 的所有圖示和符號了。</p><img src="/2025/09/18/powershell-improve-2025/powershell_vscode.png" class=""><h2 id="成果展示"><a href="#成果展示" class="headerlink" title="成果展示"></a>成果展示</h2><img src="https://github.com/pcion123/pcion123.github.io/blob/master/2025/09/18/powershell-improve-2025/pwshdemo.webp?raw=true" alt="PowerShell 7 + Oh My Posh 終端成品示意" width="100%" /><p>希望這篇能幫助你快速打造一個好看、好讀、好用的終端環境。如果你有更喜歡的主題或額外技巧，也歡迎分享交流 🙌</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近把內建的 Windows PowerShell 5.1 直接升級到跨平台的 PowerShell 7，啟動速度、互動補全與外觀自訂一次大進化。於是把這次從「升級 → 權限工具 (gsudo) → Prompt 美化 (Oh My Posh) → 文字&amp;#x2F;字型 → 終端顏色主題」的完整流程整理成筆記，之後重裝或換機也能快速複製。 &lt;/p&gt;
&lt;p&gt;這篇你將會獲得：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;乾淨可重現的 Profile 初始化步驟&lt;/li&gt;
&lt;li&gt;提升效率的補全與權限操作設定&lt;/li&gt;
&lt;li&gt;一套漂亮又資訊量足夠的 Prompt 主題&lt;/li&gt;
&lt;li&gt;Windows Terminal 配色與字型建議&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;先來看看升級前「尚未美化」的樣子，然後開始改造：&lt;/p&gt;
&lt;img src=&quot;/2025/09/18/powershell-improve-2025/powershell_old.png&quot; class=&quot;&quot;&gt;
    
    </summary>
    
    
      <category term="windows" scheme="https://pcion123.github.io/categories/windows/"/>
    
    
      <category term="windows" scheme="https://pcion123.github.io/tags/windows/"/>
    
      <category term="powershell" scheme="https://pcion123.github.io/tags/powershell/"/>
    
      <category term="terminal" scheme="https://pcion123.github.io/tags/terminal/"/>
    
      <category term="vscode" scheme="https://pcion123.github.io/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>vscode+copilot開發心得</title>
    <link href="https://pcion123.github.io/2025/09/14/vscode-copilot-thoughts/"/>
    <id>https://pcion123.github.io/2025/09/14/vscode-copilot-thoughts/</id>
    <published>2025-09-13T17:31:42.000Z</published>
    <updated>2025-09-13T19:17:42.295Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>距離上一篇 <a href="https://pcion123.github.io/2025/07/30/vscode-copilot-quick/"><strong>使用 vscode+copilot 快速建立專案</strong></a> 已經快兩個月。這段時間我把以前的專案拿來當練手題，持續用 vscode 搭配 Copilot 做重構，最近算是到了一個階段性的里程碑，也比較有資格整理一下心得與體感。</p><h2 id="成果速覽"><a href="#成果速覽" class="headerlink" title="成果速覽"></a>成果速覽</h2><p>先放結果：<a href="https://github.com/pcion123/tinysocket"><strong>tinysocket</strong></a>。下面這張是目前 <code>README.md</code> 的截圖：</p><img src="/2025/09/14/vscode-copilot-thoughts/tinysocket_intro.png" class=""><span id="more"></span><h2 id="文件撰寫體驗"><a href="#文件撰寫體驗" class="headerlink" title="文件撰寫體驗"></a>文件撰寫體驗</h2><p>老實說，過去我非常不擅長寫說明文件——常常卡在措辭或結構。換上 vscode + Copilot 之後，整體心理阻力明顯下降。我只需要丟一句：<code>替專案進行完整的分析並生成適合的文檔</code>，它就會開始產出內容。雖然：</p><ul><li>產出的語氣常常有一種「過度熱情」或統一的 AI 風格。</li><li>偶爾會出現 <code>幻覺</code>（虛構不存在的模組 &#x2F; 參數 &#x2F; 流程）。</li></ul><p>但在「快速產出草稿」這件事上，效率提升非常明顯。現在的流程變成：AI 出草稿 → 我做實際校驗與語氣調整 → 完成最終版本。整體投入的心力與時間成本都下降。</p><h2 id="重構與技術升級"><a href="#重構與技術升級" class="headerlink" title="重構與技術升級"></a>重構與技術升級</h2><p>這次 tinysocket 從過去的 <code>JDK 11 + Spring Boot 2</code>，一次跳到 <code>JDK 21 + Spring Boot 3</code>。在重構過程中我順手調整了幾個長期想改的點：</p><ul><li>buffer 的實作策略（記憶體使用與複用模型）</li><li>protocol 的註冊與擴充方式（模組化與可插拔）</li><li>server-side &#x2F; client-side 邏輯的職責切分</li></ul><p>整體代碼結構乾淨很多，開發迭代的節奏也更順。雖然還不到「vibe coding」那種一氣呵成的沉浸流暢，但 AI 輔助開發是實實在在幫助我產出想要的結果。這一次我沒有花太多時間鑽研 <code>copilot-instructions.md</code> 或 <code>spec.md</code> 的進階玩法——純粹以「自然互動」的使用模式，就已經有不錯的感受。更直接的感想：vscode + Copilot 的體驗完全碾壓 eclipse + Copilot。如果未來 Copilot 還是無法在 eclipse 深度整合，那我會建議乾脆直接轉陣 vscode。</p><h2 id="前端-Demo（AI-協作）"><a href="#前端-Demo（AI-協作）" class="headerlink" title="前端 Demo（AI 協作）"></a>前端 Demo（AI 協作）</h2><p>我不擅長開發前端，也只略懂一點 JS。之前為了展示 tinysocket 的 websocket 使用情境，勉強刻過一個很陽春的 demo。這次升級時我把那個頁面也一起翻新。過程很簡單：我描述現有專案結構、想要的互動與狀態，Copilot 在幾分鐘內就給了一個「能跑、有基本結構與樣式」的版本。我後面再針對細節（排版 &#x2F; 邏輯微調 &#x2F; 錯誤處理）做修正。雖然不至於到震撼，但在第一次產出結果的瞬間，實際的衝擊感還是有的。</p><p>以下是最後的 demo 截圖：</p><img src="https://github.com/pcion123/tinysocket/blob/master/demo/assets/chatdemo.webp?raw=true" alt="web demo" width="70%" /><h2 id="單元測試與未來工作模式"><a href="#單元測試與未來工作模式" class="headerlink" title="單元測試與未來工作模式"></a>單元測試與未來工作模式</h2><p>這次我沒有非常認真地補齊所有單元測試，但試著讓 Copilot 幫忙規劃測試場景與生產測試骨架。體感結論是：「單元測試 80% 可以交給 AI 先起頭」。透過自然語言描述：需求 → 邊界條件 → 例外情境，AI 就能快速鋪好一組測試檔。後續人類再專注在：</p><ul><li>釐清語意是否與實際需求一致</li><li>補強 edge cases</li><li>整合 CI &#x2F; coverage 門檻</li></ul><p>未來真的可能變成：測試從『手寫產出』轉為『審稿驗收』模式。</p><h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><p>簡單總結：工具與工作方式的生態正在快速轉變。AI 不是「取代」，而是把重構 &#x2F; 起稿 &#x2F; 模板化工作成本往下壓，讓我們把腦力留給系統設計、關鍵抽象與品質判斷。接下來我會再花些時間探索更進階的上下文餵養（如專案規格、角色化指令），之後如果有新的體驗，再寫一篇續集。 </p><p>我們下次見。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;距離上一篇 &lt;a href=&quot;https://pcion123.github.io/2025/07/30/vscode-copilot-quick/&quot;&gt;&lt;strong&gt;使用 vscode+copilot 快速建立專案&lt;/strong&gt;&lt;/a&gt; 已經快兩個月。這段時間我把以前的專案拿來當練手題，持續用 vscode 搭配 Copilot 做重構，最近算是到了一個階段性的里程碑，也比較有資格整理一下心得與體感。&lt;/p&gt;
&lt;h2 id=&quot;成果速覽&quot;&gt;&lt;a href=&quot;#成果速覽&quot; class=&quot;headerlink&quot; title=&quot;成果速覽&quot;&gt;&lt;/a&gt;成果速覽&lt;/h2&gt;&lt;p&gt;先放結果：&lt;a href=&quot;https://github.com/pcion123/tinysocket&quot;&gt;&lt;strong&gt;tinysocket&lt;/strong&gt;&lt;/a&gt;。下面這張是目前 &lt;code&gt;README.md&lt;/code&gt; 的截圖：&lt;/p&gt;
&lt;img src=&quot;/2025/09/14/vscode-copilot-thoughts/tinysocket_intro.png&quot; class=&quot;&quot;&gt;
    
    </summary>
    
    
      <category term="vscodelife" scheme="https://pcion123.github.io/categories/vscodelife/"/>
    
    
      <category term="java" scheme="https://pcion123.github.io/tags/java/"/>
    
      <category term="vscode" scheme="https://pcion123.github.io/tags/vscode/"/>
    
      <category term="github-copilot" scheme="https://pcion123.github.io/tags/github-copilot/"/>
    
  </entry>
  
  <entry>
    <title>使用vscode+copilot快速建立專案</title>
    <link href="https://pcion123.github.io/2025/07/30/vscode-copilot-quick/"/>
    <id>https://pcion123.github.io/2025/07/30/vscode-copilot-quick/</id>
    <published>2025-07-30T14:37:11.000Z</published>
    <updated>2025-10-04T06:10:18.414Z</updated>
    
    <content type="html"><![CDATA[<h1 id="從-Eclipse-到-VSCode：我的-AI-輔助開發轉型之路"><a href="#從-Eclipse-到-VSCode：我的-AI-輔助開發轉型之路" class="headerlink" title="從 Eclipse 到 VSCode：我的 AI 輔助開發轉型之路"></a>從 Eclipse 到 VSCode：我的 AI 輔助開發轉型之路</h1><p>嗨大家好！今天想跟大家分享一個讓我既興奮又有點緊張的決定 —— 我要從用了好幾年的 Eclipse 跳槽到 VSCode 了！🚀</p><h2 id="為什麼決定換編輯器？"><a href="#為什麼決定換編輯器？" class="headerlink" title="為什麼決定換編輯器？"></a>為什麼決定換編輯器？</h2><p>老實說，作為一個 Java 開發者，Eclipse 一直是我的好夥伴。但最近看到越來越多同事在用 VSCode，特別是搭配 GitHub Copilot 的開發體驗，讓我開始好奇：「我是不是錯過了什麼？」</p><p>更重要的是，現在 AI 輔助開發工具發展得這麼快，我覺得是時候跟上這個潮流了。畢竟，誰不想寫 code 寫得更快、更聰明呢？😄</p><p><strong>準備好了嗎？讓我們一起踏上這段 AI 輔助開發的冒險之旅吧！</strong> 🎉</p><span id="more"></span><h2 id="這篇文章會聊什麼？"><a href="#這篇文章會聊什麼？" class="headerlink" title="這篇文章會聊什麼？"></a>這篇文章會聊什麼？</h2><p>這次我想分享的重點是：<strong>如何用 VSCode + GitHub Copilot + 自定義 Prompts 來快速建立 Spring Boot 專案</strong>。</p><p>具體來說，我會分享給大家：</p><ul><li>🎯 使用 <code>.github/prompts/*.prompt.md</code> 自定義提示詞</li><li>⚡ 展示讓 AI 幫你快速搭建專案架構</li><li>💡 一些我在轉換過程中學到的小技巧</li></ul><h2 id="這次的實戰內容"><a href="#這次的實戰內容" class="headerlink" title="這次的實戰內容"></a>這次的實戰內容</h2><p>我錄了一個完整的操作影片，從零開始建立一個 Spring Boot 專案：</p><p><strong>📺 實戰教學影片：<a href="https://youtu.be/wG2T3G7LXa4">VSCode + AI 快速建立 Spring Boot 專案</a></strong></p><div style="position: relative; width: 100%; max-width: 800px; margin: 20px auto; box-shadow: 0 4px 8px rgba(0,0,0,0.1); border-radius: 8px; overflow: hidden;">  <div style="position: relative; padding-bottom: 56.25%; height: 0;">    <iframe src="https://www.youtube.com/embed/wG2T3G7LXa4?rel=0&modestbranding=1&showinfo=0"             style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border: none;"             allowfullscreen>    </iframe>  </div></div><p>影片裡我會展示：</p><ol><li>VSCode 環境的基本設定</li><li>GitHub Copilot 的神奇功能</li><li>自定義 Prompt 模板的設計技巧</li><li>實際建立一個可運行的 Spring Boot 應用</li></ol><h2 id="使用體驗真實感想"><a href="#使用體驗真實感想" class="headerlink" title="使用體驗真實感想"></a>使用體驗真實感想</h2><p>老實說，剛開始使用 VSCode + GitHub Copilot 的時候，我真的被震撼到了！😱</p><p><strong>流暢度方面：</strong></p><ul><li>🚀 <strong>啟動速度</strong>：從點擊到可以開始寫 code，幾乎是秒開！跟 Eclipse 那種「先去泡杯咖啡」的等待完全不同</li><li>⚡ <strong>反應速度</strong>：打字的時候沒有任何延遲感，檔案切換也是瞬間完成</li><li>🎯 <strong>記憶體使用</strong>：明顯比傳統 IDE 輕量很多，多開幾個專案也不會讓電腦卡到爆</li></ul><p><strong>AI 輔助的驚艷之處：</strong></p><ul><li>🧠 <strong>任務規劃能力</strong>：最讓我震撼的是 Copilot 能夠理解整個專案的架構，當我說「建立一個 Spring Boot 專案」時，它不只是給我片段程式碼，而是能建立一個完整可執行的專案</li><li>🔥 <strong>執行效率</strong>：從 Controller、Service、Repository 到測試檔案的建立，整個流程一氣呵成，就像有個經驗豐富的 Senior 在旁邊協助</li><li>🎯 <strong>上下文理解</strong>：它會記住我之前寫的程式碼風格和專案結構，新增的程式碼都能完美融入既有的架構中</li><li>💡 <strong>智能補全</strong>：不只是簡單的語法補全，它會根據上下文給出完整的函式實作，甚至包含錯誤處理</li><li>📝 <strong>文件生成</strong>：連 README、API 文件、註解都能自動生成，而且寫得比我還詳細（有點害羞 😅）</li></ul><p><strong>最讓我驚嘆的是</strong>：整個開發流程變得非常「自然」，就像在跟一個很懂你的夥伴協作。以前寫 code 需要頻繁查文件、想語法，現在很多時候 AI 就直接給出了我要的答案。</p><p>這種感覺就像從「手動檔」換到「自動檔」一樣 —— 你還是在開車，但整個過程變得更順暢、更專注在真正重要的邏輯思考上。</p><hr><p><strong>我會不定期分享更多 VSCode + AI 開發的實戰體驗！</strong> 🎉</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;從-Eclipse-到-VSCode：我的-AI-輔助開發轉型之路&quot;&gt;&lt;a href=&quot;#從-Eclipse-到-VSCode：我的-AI-輔助開發轉型之路&quot; class=&quot;headerlink&quot; title=&quot;從 Eclipse 到 VSCode：我的 AI 輔助開發轉型之路&quot;&gt;&lt;/a&gt;從 Eclipse 到 VSCode：我的 AI 輔助開發轉型之路&lt;/h1&gt;&lt;p&gt;嗨大家好！今天想跟大家分享一個讓我既興奮又有點緊張的決定 —— 我要從用了好幾年的 Eclipse 跳槽到 VSCode 了！🚀&lt;/p&gt;
&lt;h2 id=&quot;為什麼決定換編輯器？&quot;&gt;&lt;a href=&quot;#為什麼決定換編輯器？&quot; class=&quot;headerlink&quot; title=&quot;為什麼決定換編輯器？&quot;&gt;&lt;/a&gt;為什麼決定換編輯器？&lt;/h2&gt;&lt;p&gt;老實說，作為一個 Java 開發者，Eclipse 一直是我的好夥伴。但最近看到越來越多同事在用 VSCode，特別是搭配 GitHub Copilot 的開發體驗，讓我開始好奇：「我是不是錯過了什麼？」&lt;/p&gt;
&lt;p&gt;更重要的是，現在 AI 輔助開發工具發展得這麼快，我覺得是時候跟上這個潮流了。畢竟，誰不想寫 code 寫得更快、更聰明呢？😄&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;準備好了嗎？讓我們一起踏上這段 AI 輔助開發的冒險之旅吧！&lt;/strong&gt; 🎉&lt;/p&gt;
    
    </summary>
    
    
      <category term="vscodelife" scheme="https://pcion123.github.io/categories/vscodelife/"/>
    
    
      <category term="java" scheme="https://pcion123.github.io/tags/java/"/>
    
      <category term="vscode" scheme="https://pcion123.github.io/tags/vscode/"/>
    
      <category term="github-copilot" scheme="https://pcion123.github.io/tags/github-copilot/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu安裝Nexus</title>
    <link href="https://pcion123.github.io/2021/09/25/nexus-install/"/>
    <id>https://pcion123.github.io/2021/09/25/nexus-install/</id>
    <published>2021-09-25T05:36:17.000Z</published>
    <updated>2025-08-13T14:31:49.406Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安裝JDK"><a href="#安裝JDK" class="headerlink" title="安裝JDK"></a>安裝JDK</h2><a href="/2019/03/10/java-installopenjdk/" title="安裝OpenJDK">請參考之前的文章</a><h2 id="下載nexus"><a href="#下載nexus" class="headerlink" title="下載nexus"></a>下載nexus</h2><p><a href="https://www.sonatype.com/products/repository-oss-download">官方下載</a><br>或者<br><a href="https://sonatype-download.global.ssl.fastly.net/repository/downloads-prod-group/3/nexus-3.33.1-01-unix.tar.gz">nexus-3.33.1-01-unix</a></p><span id="more"></span><h2 id="建立nexus使用者"><a href="#建立nexus使用者" class="headerlink" title="建立nexus使用者"></a>建立nexus使用者</h2><p>建立nexus專用的系統帳號</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ useradd -M -d /opt/nexus -s /bin/bash -r nexus</span><br></pre></td></tr></table></figure><p>允許nexus用戶可以使用無密碼的sudo運行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;nexus   ALL=(ALL)       NOPASSWD: ALL&quot;</span> &gt; /etc/sudoers.d/nexus</span><br></pre></td></tr></table></figure><h2 id="安裝nexus"><a href="#安裝nexus" class="headerlink" title="安裝nexus"></a>安裝nexus</h2><p>先建立nexus目錄</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">mkdir</span> /opt/nexus</span><br></pre></td></tr></table></figure><p>解開nexus到剛剛建立好的目錄底下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tar -zxvf nexus-3.33.1-01-unix.tar.gz -C /opt/nexus --strip-components=1</span><br></pre></td></tr></table></figure><p>修改權限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">chown</span> -R nexus: /opt/nexus</span><br></pre></td></tr></table></figure><h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><h3 id="調整nexus內存大小"><a href="#調整nexus內存大小" class="headerlink" title="調整nexus內存大小"></a>調整nexus內存大小</h3><p>調整自身機器合適的大小,這邊測試調整成2G</p><p>開啟&#x2F;opt&#x2F;nexus&#x2F;bin&#x2F;nexus.vmoptions</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-Xms2048m</span><br><span class="line">-Xmx2048m</span><br><span class="line">-XX:MaxDirectMemorySize=2048m</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br></pre></td></tr></table></figure><h3 id="調整nexus相對路徑"><a href="#調整nexus相對路徑" class="headerlink" title="調整nexus相對路徑"></a>調整nexus相對路徑</h3><p>因為剛剛解開nexus的時候把sonatype-work目錄的位置移上了一層<br>所以這邊相對路徑就需要調整一下</p><p>開啟&#x2F;opt&#x2F;nexus&#x2F;bin&#x2F;nexus.vmoptions</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">-XX:LogFile=./sonatype-work/nexus3/log/jvm.log</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">-Dkaraf.data=./sonatype-work/nexus3</span><br><span class="line">-Dkaraf.<span class="built_in">log</span>=./sonatype-work/nexus3/log</span><br><span class="line">-Djava.io.tmpdir=./sonatype-work/nexus3/tmp</span><br></pre></td></tr></table></figure><h3 id="修改nexus運行帳號"><a href="#修改nexus運行帳號" class="headerlink" title="修改nexus運行帳號"></a>修改nexus運行帳號</h3><p>修改nexus運行時使用帳號<br>請修改成剛剛專門建立的帳號</p><p>開啟&#x2F;opt&#x2F;nexus&#x2F;bin&#x2F;nexus.rc</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run_as_user=<span class="string">&quot;nexus&quot;</span></span><br></pre></td></tr></table></figure><h3 id="修改nexus對外port"><a href="#修改nexus對外port" class="headerlink" title="修改nexus對外port"></a>修改nexus對外port</h3><p>預設port是8081如果不需要調整請跳過這一步<br>因為測試環境的關係這邊改成9090</p><p>開啟&#x2F;opt&#x2F;nexus&#x2F;etc&#x2F;nexus-default.properties</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## DO NOT EDIT - CUSTOMIZATIONS BELONG IN $data-dir/etc/nexus.properties</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment"># Jetty section</span></span><br><span class="line">application-port=9090</span><br><span class="line">application-host=0.0.0.0</span><br></pre></td></tr></table></figure><h2 id="啟動nexus"><a href="#啟動nexus" class="headerlink" title="啟動nexus"></a>啟動nexus</h2><h3 id="啟動服務"><a href="#啟動服務" class="headerlink" title="啟動服務"></a>啟動服務</h3><p>啟動</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> -u nexus /opt/nexus/bin/nexus start</span><br></pre></td></tr></table></figure><h3 id="監看log"><a href="#監看log" class="headerlink" title="監看log"></a>監看log</h3><p>監看log</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">tail</span> -f /opt/nexus/sonatype-work/nexus3/log/nexus.log</span><br></pre></td></tr></table></figure><p>第一次登入會看到以下畫面,預設帳號為admin</p><img src="/2021/09/25/nexus-install/nexus1.png" class=""><h3 id="獲取密碼"><a href="#獲取密碼" class="headerlink" title="獲取密碼"></a>獲取密碼</h3><p>獲取第一次登入密碼</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> /opt/nexus/sonatype-work/nexus3/admin.password</span><br></pre></td></tr></table></figure><h3 id="初始設定"><a href="#初始設定" class="headerlink" title="初始設定"></a>初始設定</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.修改管理者密碼</span><br><span class="line">2.根據需求調整,這邊我選擇關閉匿名用戶登入</span><br><span class="line">3.關閉問題回饋</span><br></pre></td></tr></table></figure><p>登入後做完第一次設定後服務就正式裝好啦!</p><img src="/2021/09/25/nexus-install/nexus2.png" class=""><h2 id="系統服務"><a href="#系統服務" class="headerlink" title="系統服務"></a>系統服務</h2><h3 id="建立腳本"><a href="#建立腳本" class="headerlink" title="建立腳本"></a>建立腳本</h3><p>建立&#x2F;etc&#x2F;systemd&#x2F;system&#x2F;nexus.service</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=nexus service</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">LimitNOFILE=65536</span><br><span class="line">ExecStart=/opt/nexus/bin/nexus start</span><br><span class="line">ExecStop=/opt/nexus/bin/nexus stop</span><br><span class="line">User=nexus</span><br><span class="line">Restart=on-abort</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h3 id="重載systemd"><a href="#重載systemd" class="headerlink" title="重載systemd"></a>重載systemd</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl daemon-reload</span><br></pre></td></tr></table></figure><h3 id="啟用服務"><a href="#啟用服務" class="headerlink" title="啟用服務"></a>啟用服務</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl <span class="built_in">enable</span> --now nexus.service</span><br></pre></td></tr></table></figure><h3 id="查看服務狀態"><a href="#查看服務狀態" class="headerlink" title="查看服務狀態"></a>查看服務狀態</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ systemctl status nexus.service</span><br></pre></td></tr></table></figure><p>服務正常運行,這樣我們以後就可以透過systemctl管理服務了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">root@pcionserver:/etc/systemd/system# root@pcionserver:/etc/systemd/system# systemctl status nexus.service</span><br><span class="line">● nexus.service - nexus service</span><br><span class="line">     Loaded: loaded (/etc/systemd/system/nexus.service; enabled; vendor preset: enabled)</span><br><span class="line">     Active: active (running) since Sat 2021-09-25 07:51:16 UTC; 6min ago</span><br><span class="line">    Process: 8292 ExecStart=/opt/nexus/bin/nexus start (code=exited, status=0/SUCCESS)</span><br><span class="line">   Main PID: 8486 (java)</span><br><span class="line">      Tasks: 80 (<span class="built_in">limit</span>: 4616)</span><br><span class="line">     Memory: 1.3G</span><br><span class="line">     CGroup: /system.slice/nexus.service</span><br><span class="line">             └─8486 /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java -server -Dinstall4j.jvmDir=/usr/lib/jvm/java-8-openjdk-amd64/jre -Dexe4j.moduleName=/opt/nexus/bin/nexus -XX:+UnlockDiag&gt;</span><br><span class="line"></span><br><span class="line">Sep 25 07:51:16 pcionserver systemd[1]: Starting nexus service...</span><br><span class="line">Sep 25 07:51:16 pcionserver nexus[8292]: Starting nexus</span><br><span class="line">Sep 25 07:51:16 pcionserver systemd[1]: Started nexus service.</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安裝JDK&quot;&gt;&lt;a href=&quot;#安裝JDK&quot; class=&quot;headerlink&quot; title=&quot;安裝JDK&quot;&gt;&lt;/a&gt;安裝JDK&lt;/h2&gt;&lt;a href=&quot;/2019/03/10/java-installopenjdk/&quot; title=&quot;安裝OpenJDK&quot;&gt;請參考之前的文章&lt;/a&gt;

&lt;h2 id=&quot;下載nexus&quot;&gt;&lt;a href=&quot;#下載nexus&quot; class=&quot;headerlink&quot; title=&quot;下載nexus&quot;&gt;&lt;/a&gt;下載nexus&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.sonatype.com/products/repository-oss-download&quot;&gt;官方下載&lt;/a&gt;&lt;br&gt;或者&lt;br&gt;&lt;a href=&quot;https://sonatype-download.global.ssl.fastly.net/repository/downloads-prod-group/3/nexus-3.33.1-01-unix.tar.gz&quot;&gt;nexus-3.33.1-01-unix&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="maven" scheme="https://pcion123.github.io/categories/maven/"/>
    
    
      <category term="linux" scheme="https://pcion123.github.io/tags/linux/"/>
    
      <category term="maven" scheme="https://pcion123.github.io/tags/maven/"/>
    
      <category term="nexus" scheme="https://pcion123.github.io/tags/nexus/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu安裝Minikube</title>
    <link href="https://pcion123.github.io/2021/08/21/minikube-install/"/>
    <id>https://pcion123.github.io/2021/08/21/minikube-install/</id>
    <published>2021-08-21T06:02:15.000Z</published>
    <updated>2025-08-13T14:31:49.406Z</updated>
    
    <content type="html"><![CDATA[<p>繼上次的docker安裝今天要繼續部屬kubernetes的內容</p><h2 id="簡介"><a href="#簡介" class="headerlink" title="簡介"></a>簡介</h2><p>minikube是由google開發的精簡版kubernetes工具<br>可以簡單的模擬k8s底下的環境運作</p><span id="more"></span><h2 id="安裝容器"><a href="#安裝容器" class="headerlink" title="安裝容器"></a>安裝容器</h2><p>kubernetese提供多樣的容器部屬環境<br>這邊我們選用docker當作容器的底層</p><a href="/2021/08/21/docker-install/" title="Ubuntu安裝Docker">請參考之前的文章</a><h2 id="安裝kubectl"><a href="#安裝kubectl" class="headerlink" title="安裝kubectl"></a>安裝kubectl</h2><p>kubectl是一套管理kubernetes的命令工具</p><h3 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 更新套件管理</span></span><br><span class="line">$ <span class="built_in">sudo</span> apt update</span><br><span class="line"><span class="comment"># 安裝套件倉庫</span></span><br><span class="line">$ <span class="built_in">sudo</span> apt install -y apt-transport-https ca-certificates curl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下載倉庫憑證</span></span><br><span class="line">$ <span class="built_in">sudo</span> curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg</span><br><span class="line"><span class="comment"># 加入憑證信任列表</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main&quot;</span> | <span class="built_in">sudo</span> <span class="built_in">tee</span> /etc/apt/sources.list.d/kubernetes.list</span><br><span class="line"></span><br><span class="line">deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新套件管理</span></span><br><span class="line">$ <span class="built_in">sudo</span> apt update</span><br><span class="line"><span class="comment"># 安裝kubectl</span></span><br><span class="line">$ <span class="built_in">sudo</span> apt install kubectl -y</span><br></pre></td></tr></table></figure><h3 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl version --short --client</span><br><span class="line"></span><br><span class="line">Client Version: v1.22.1</span><br></pre></td></tr></table></figure><h2 id="安裝minikube"><a href="#安裝minikube" class="headerlink" title="安裝minikube"></a>安裝minikube</h2><p>現在開始安裝主角</p><h3 id="安裝-1"><a href="#安裝-1" class="headerlink" title="安裝"></a>安裝</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下載安裝包</span></span><br><span class="line">$ curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube_latest_amd64.deb</span><br><span class="line"><span class="comment"># 安裝套件</span></span><br><span class="line">$ <span class="built_in">sudo</span> dpkg -i minikube_latest_amd64.deb</span><br><span class="line"></span><br><span class="line">Selecting previously unselected package minikube.</span><br><span class="line">(Reading database ... 71806 files and directories currently installed.)</span><br><span class="line">Preparing to unpack minikube_latest_amd64.deb ...</span><br><span class="line">Unpacking minikube (1.22.0-0) ...</span><br><span class="line">Setting up minikube (1.22.0-0) ...</span><br></pre></td></tr></table></figure><h3 id="查看版本-1"><a href="#查看版本-1" class="headerlink" title="查看版本"></a>查看版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ minikube version</span><br><span class="line"></span><br><span class="line">minikube version: v1.22.0</span><br><span class="line">commit: a03fbcf166e6f74ef224d4a63be4277d017bb62e</span><br></pre></td></tr></table></figure><h3 id="啟動"><a href="#啟動" class="headerlink" title="啟動"></a>啟動</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ minikube start</span><br><span class="line"></span><br><span class="line">😄  minikube v1.22.0 on Ubuntu 20.04 (vbox/amd64)</span><br><span class="line">✨  Automatically selected the docker driver. Other choices: ssh, none</span><br><span class="line">👍  Starting control plane node minikube <span class="keyword">in</span> cluster minikube</span><br><span class="line">🚜  Pulling base image ...</span><br><span class="line">💾  Downloading Kubernetes v1.21.2 preload ...</span><br><span class="line">    &gt; preloaded-images-k8s-v11-v1...: 502.14 MiB / 502.14 MiB  100.00% 7.08 MiB</span><br><span class="line">    &gt; gcr.io/k8s-minikube/kicbase...: 361.08 MiB / 361.09 MiB  100.00% 3.95 MiB</span><br><span class="line">🔥  Creating docker container (CPUs=2, Memory=2200MB) ...</span><br><span class="line">🐳  Preparing Kubernetes v1.21.2 on Docker 20.10.7 ...</span><br><span class="line">    ▪ Generating certificates and keys ...</span><br><span class="line">    ▪ Booting up control plane ...</span><br><span class="line">    ▪ Configuring RBAC rules ...</span><br><span class="line">🔎  Verifying Kubernetes components...</span><br><span class="line">    ▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5</span><br><span class="line">🌟  Enabled addons: storage-provisioner, default-storageclass</span><br><span class="line">🏄  Done! kubectl is now configured to use <span class="string">&quot;minikube&quot;</span> cluster and <span class="string">&quot;default&quot;</span> namespace by default</span><br></pre></td></tr></table></figure><h3 id="啟動dashboard"><a href="#啟動dashboard" class="headerlink" title="啟動dashboard"></a>啟動dashboard</h3><p>正常的kubernetes的dashboard需要另外安裝的<br>但是minikube已經自帶dashboard套件只需啟動就行了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ minikube dashboard</span><br><span class="line"></span><br><span class="line">🔌  Enabling dashboard ...</span><br><span class="line">    ▪ Using image kubernetesui/dashboard:v2.1.0</span><br><span class="line">    ▪ Using image kubernetesui/metrics-scraper:v1.0.4</span><br><span class="line">🤔  Verifying dashboard health ...</span><br><span class="line">🚀  Launching proxy ...</span><br><span class="line">🤔  Verifying proxy health ...</span><br><span class="line">🎉  Opening http://127.0.0.1:33657/api/v1/namespaces/kubernetes-dashboard/services/http:kubernetes-dashboard:/proxy/ <span class="keyword">in</span> your default browser...</span><br><span class="line">👉  http://127.0.0.1:33657/api/v1/namespaces/kubernetes-dashboard/services/http:kubernetes-dashboard:/proxy/</span><br></pre></td></tr></table></figure><h3 id="開啟proxy"><a href="#開啟proxy" class="headerlink" title="開啟proxy"></a>開啟proxy</h3><p>一般來說啟動dashboard就會自動幫你開啟瀏覽器到dashboard的頁面中了<br>但是筆者的環境是裝在virtualbox的ubuntu-server底下<br>所以就需要另外提供外連的方式了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl proxy --address=<span class="string">&#x27;0.0.0.0&#x27;</span> --port=8001 --accept-hosts=<span class="string">&#x27;^*$&#x27;</span></span><br><span class="line"></span><br><span class="line">Starting to serve on [::]:8001</span><br></pre></td></tr></table></figure><p>這樣就大功告成啦!</p><img src="/2021/08/21/minikube-install/minikube.png" class=""><h2 id="補充"><a href="#補充" class="headerlink" title="補充"></a>補充</h2><p>安裝過程設定如果出了什麼問題想要重置<br>我們可刪掉整個minikube設置重來</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 刪除minikube環境</span></span><br><span class="line">$ minikube delete &amp;&amp; <span class="built_in">rm</span> -rf ~/.minikube</span><br><span class="line"><span class="comment"># 重啟minikube</span></span><br><span class="line">$ minikube start</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;繼上次的docker安裝今天要繼續部屬kubernetes的內容&lt;/p&gt;
&lt;h2 id=&quot;簡介&quot;&gt;&lt;a href=&quot;#簡介&quot; class=&quot;headerlink&quot; title=&quot;簡介&quot;&gt;&lt;/a&gt;簡介&lt;/h2&gt;&lt;p&gt;minikube是由google開發的精簡版kubernetes工具&lt;br&gt;可以簡單的模擬k8s底下的環境運作&lt;/p&gt;
    
    </summary>
    
    
      <category term="kubernetes" scheme="https://pcion123.github.io/categories/kubernetes/"/>
    
    
      <category term="linux" scheme="https://pcion123.github.io/tags/linux/"/>
    
      <category term="ubuntu" scheme="https://pcion123.github.io/tags/ubuntu/"/>
    
      <category term="docker" scheme="https://pcion123.github.io/tags/docker/"/>
    
      <category term="kubernetes" scheme="https://pcion123.github.io/tags/kubernetes/"/>
    
      <category term="minikube" scheme="https://pcion123.github.io/tags/minikube/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu安裝Docker</title>
    <link href="https://pcion123.github.io/2021/08/21/docker-install/"/>
    <id>https://pcion123.github.io/2021/08/21/docker-install/</id>
    <published>2021-08-21T05:36:17.000Z</published>
    <updated>2025-08-13T14:31:49.388Z</updated>
    
    <content type="html"><![CDATA[<p>docker是目前容器化部屬最火紅的方案<br>廢話不多說現在趕快來看看怎麼安裝吧!</p><h2 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> apt update</span><br><span class="line">$ <span class="built_in">sudo</span> install docker.io</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看版本</span></span><br><span class="line">$ docker version</span><br><span class="line">Client:</span><br><span class="line"> Version:           20.10.7</span><br><span class="line"> API version:       1.41</span><br><span class="line"> Go version:        go1.13.8</span><br><span class="line"> Git commit:        20.10.7-0ubuntu1~20.04.1</span><br><span class="line"> Built:             Wed Aug  4 22:52:25 2021</span><br><span class="line"> OS/Arch:           linux/amd64</span><br><span class="line"> Context:           default</span><br><span class="line"> Experimental:      <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">Server:</span><br><span class="line"> Engine:</span><br><span class="line">  Version:          20.10.7</span><br><span class="line">  API version:      1.41 (minimum version 1.12)</span><br><span class="line">  Go version:       go1.13.8</span><br><span class="line">  Git commit:       20.10.7-0ubuntu1~20.04.1</span><br><span class="line">  Built:            Wed Aug  4 19:07:47 2021</span><br><span class="line">  OS/Arch:          linux/amd64</span><br><span class="line">  Experimental:     <span class="literal">false</span></span><br><span class="line"> containerd:</span><br><span class="line">  Version:          1.5.2-0ubuntu1~20.04.2</span><br><span class="line">  GitCommit:</span><br><span class="line"> runc:</span><br><span class="line">  Version:          1.0.0~rc95-0ubuntu1~20.04.2</span><br><span class="line">  GitCommit:</span><br><span class="line"> docker-init:</span><br><span class="line">  Version:          0.19.0</span><br><span class="line">  GitCommit:</span><br></pre></td></tr></table></figure><h2 id="測試"><a href="#測試" class="headerlink" title="測試"></a>測試</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$ docker run hello-world</span><br><span class="line"></span><br><span class="line">Hello from Docker!</span><br><span class="line">This message shows that your installation appears to be working correctly.</span><br><span class="line"></span><br><span class="line">To generate this message, Docker took the following steps:</span><br><span class="line"> 1. The Docker client contacted the Docker daemon.</span><br><span class="line"> 2. The Docker daemon pulled the <span class="string">&quot;hello-world&quot;</span> image from the Docker Hub.</span><br><span class="line">    (amd64)</span><br><span class="line"> 3. The Docker daemon created a new container from that image <span class="built_in">which</span> runs the</span><br><span class="line">    executable that produces the output you are currently reading.</span><br><span class="line"> 4. The Docker daemon streamed that output to the Docker client, <span class="built_in">which</span> sent it</span><br><span class="line">    to your terminal.</span><br><span class="line"></span><br><span class="line">To try something more ambitious, you can run an Ubuntu container with:</span><br><span class="line"> $ docker run -it ubuntu bash</span><br><span class="line"></span><br><span class="line">Share images, automate workflows, and more with a free Docker ID:</span><br><span class="line"> https://hub.docker.com/</span><br><span class="line"></span><br><span class="line">For more examples and ideas, visit:</span><br><span class="line"> https://docs.docker.com/get-started/</span><br></pre></td></tr></table></figure><h2 id="補充"><a href="#補充" class="headerlink" title="補充"></a>補充</h2><p>如果我們希望docker可以用特定的user執行的話可以參照以下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 將用戶加入docker群組中</span></span><br><span class="line">$ <span class="built_in">sudo</span> usermod -aG docker <span class="variable">$USER</span></span><br><span class="line"><span class="comment"># 套用新的群組設定</span></span><br><span class="line">$ <span class="built_in">sudo</span> newgrp docker</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;docker是目前容器化部屬最火紅的方案&lt;br&gt;廢話不多說現在趕快來看看怎麼安裝吧!&lt;/p&gt;
&lt;h2 id=&quot;安裝&quot;&gt;&lt;a href=&quot;#安裝&quot; class=&quot;headerlink&quot; title=&quot;安裝&quot;&gt;&lt;/a&gt;安裝&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;sudo&lt;/span&gt; apt update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;sudo&lt;/span&gt; install docker.io&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="docker" scheme="https://pcion123.github.io/categories/docker/"/>
    
    
      <category term="linux" scheme="https://pcion123.github.io/tags/linux/"/>
    
      <category term="ubuntu" scheme="https://pcion123.github.io/tags/ubuntu/"/>
    
      <category term="docker" scheme="https://pcion123.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>安裝Nginx</title>
    <link href="https://pcion123.github.io/2020/11/14/nginx-install/"/>
    <id>https://pcion123.github.io/2020/11/14/nginx-install/</id>
    <published>2020-11-14T09:47:09.000Z</published>
    <updated>2025-08-13T14:31:49.422Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安裝Nginx"><a href="#安裝Nginx" class="headerlink" title="安裝Nginx"></a>安裝Nginx</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ apt install nginx</span><br></pre></td></tr></table></figure><h2 id="config路徑"><a href="#config路徑" class="headerlink" title="config路徑"></a>config路徑</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查詢config路徑</span></span><br><span class="line">$ nginx -t</span><br><span class="line"><span class="comment"># ubuntu預設會在/etc/nginx底下</span></span><br></pre></td></tr></table></figure><h2 id="基本指令"><a href="#基本指令" class="headerlink" title="基本指令"></a>基本指令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 啟動nginx</span></span><br><span class="line">$ systemctl start nginx</span><br><span class="line"><span class="comment"># 停止ngnix</span></span><br><span class="line">$ systemctl stop nginx</span><br><span class="line"><span class="comment"># 重載ngnix</span></span><br><span class="line">$ systemctl reload nginx</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="頁面測試-http-127-0-0-1"><a href="#頁面測試-http-127-0-0-1" class="headerlink" title="頁面測試 http://127.0.0.1"></a>頁面測試 <a href="http://127.0.0.1/">http://127.0.0.1</a></h2><img src="/2020/11/14/nginx-install/nginx1.png" class="" title="安裝完成"><p>以下內容偏向心得筆記</p><h2 id="設定proxy"><a href="#設定proxy" class="headerlink" title="設定proxy"></a>設定proxy</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line"><span class="comment"># 監聽 80 port</span></span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">listen</span> [::]:<span class="number">80</span>;</span><br><span class="line">    <span class="comment"># 設置進來的domainname或ip</span></span><br><span class="line">    <span class="attribute">server_name</span> localhost;</span><br><span class="line">    <span class="comment"># 設置routing</span></span><br><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line">    <span class="comment"># 轉發</span></span><br><span class="line">        <span class="attribute">proxy_pass</span> http://localhost:9001;</span><br><span class="line">        <span class="comment"># 轉發request的header內容</span></span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$http_x_forwarded_proto</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="設定loadbalance"><a href="#設定loadbalance" class="headerlink" title="設定loadbalance"></a>設定loadbalance</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 設置輪巡節點</span></span><br><span class="line"><span class="section">upstream</span> servicemapping &#123;</span><br><span class="line">    <span class="attribute">server</span> <span class="number">127.0.0.1:9001</span> weight=<span class="number">3</span>;</span><br><span class="line">    <span class="attribute">server</span> <span class="number">127.0.0.1:9002</span> weight=<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line"><span class="comment"># 監聽 80 port</span></span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">listen</span> [::]:<span class="number">80</span>;</span><br><span class="line">    <span class="comment"># 設置進來的domainname或ip</span></span><br><span class="line">    <span class="attribute">server_name</span> my.app.test;</span><br><span class="line"><span class="comment"># 設置routing</span></span><br><span class="line">    <span class="section">location</span> / &#123;</span><br><span class="line">    <span class="comment"># 轉發</span></span><br><span class="line">        <span class="attribute">proxy_pass</span> http://servicemapping;</span><br><span class="line">        <span class="comment"># 轉發request的header內容</span></span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$http_x_forwarded_proto</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="兩次請求結果"><a href="#兩次請求結果" class="headerlink" title="兩次請求結果"></a>兩次請求結果</h2><img src="/2020/11/14/nginx-install/nginx2.png" class=""><img src="/2020/11/14/nginx-install/nginx3.png" class="">]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安裝Nginx&quot;&gt;&lt;a href=&quot;#安裝Nginx&quot; class=&quot;headerlink&quot; title=&quot;安裝Nginx&quot;&gt;&lt;/a&gt;安裝Nginx&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ apt install nginx&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;config路徑&quot;&gt;&lt;a href=&quot;#config路徑&quot; class=&quot;headerlink&quot; title=&quot;config路徑&quot;&gt;&lt;/a&gt;config路徑&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 查詢config路徑&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ nginx -t&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# ubuntu預設會在/etc/nginx底下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;基本指令&quot;&gt;&lt;a href=&quot;#基本指令&quot; class=&quot;headerlink&quot; title=&quot;基本指令&quot;&gt;&lt;/a&gt;基本指令&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 啟動nginx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ systemctl start nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 停止ngnix&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ systemctl stop nginx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 重載ngnix&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ systemctl reload nginx&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="nginx" scheme="https://pcion123.github.io/categories/nginx/"/>
    
    
      <category term="linux" scheme="https://pcion123.github.io/tags/linux/"/>
    
      <category term="nginx" scheme="https://pcion123.github.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu安裝Codimd</title>
    <link href="https://pcion123.github.io/2020/07/05/codimd-install/"/>
    <id>https://pcion123.github.io/2020/07/05/codimd-install/</id>
    <published>2020-07-05T08:21:25.000Z</published>
    <updated>2025-08-13T14:31:49.372Z</updated>
    
    <content type="html"><![CDATA[<h2 id="相關介紹"><a href="#相關介紹" class="headerlink" title="相關介紹"></a>相關介紹</h2><p><a href="https://github.com/hackmdio/codimd">github</a><br><a href="https://hackmd.io/c/codimd-documentation/%2Fs%2Fcodimd-manual-deployment">manual-deployment</a></p><h2 id="安裝nodejs"><a href="#安裝nodejs" class="headerlink" title="安裝nodejs"></a>安裝nodejs</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安裝版本庫</span></span><br><span class="line">$ curl -sL https://deb.nodesource.com/setup_10.x | <span class="built_in">sudo</span> -E bash -</span><br><span class="line"><span class="comment"># 安裝nodejs</span></span><br><span class="line">$ apt install -y nodejs</span><br><span class="line"><span class="comment"># 查看nodejs版本</span></span><br><span class="line">$ node -v</span><br><span class="line"><span class="comment"># 查看npm版本</span></span><br><span class="line">$ npm -v</span><br></pre></td></tr></table></figure><h2 id="安裝相關依賴"><a href="#安裝相關依賴" class="headerlink" title="安裝相關依賴"></a>安裝相關依賴</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g yarn</span><br><span class="line">$ npm install -g node-gyp</span><br><span class="line">$ npm install -g sqlite3</span><br><span class="line">$ npm install -g webpack</span><br></pre></td></tr></table></figure><h2 id="安裝codimd"><a href="#安裝codimd" class="headerlink" title="安裝codimd"></a>安裝codimd</h2><h3 id="設置環境變數"><a href="#設置環境變數" class="headerlink" title="設置環境變數"></a>設置環境變數</h3><p>打開&#x2F;etc&#x2F;profile這個檔案並且在末尾加入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:NODE_ENV=production</span><br></pre></td></tr></table></figure><h3 id="抓取項目-opt"><a href="#抓取項目-opt" class="headerlink" title="抓取項目(&#x2F;opt)"></a>抓取項目(&#x2F;opt)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/hackmdio/codimd.git</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="初始化配置"><a href="#初始化配置" class="headerlink" title="初始化配置"></a>初始化配置</h3><h4 id="先修改安裝配置bin-setup"><a href="#先修改安裝配置bin-setup" class="headerlink" title="先修改安裝配置bin&#x2F;setup"></a>先修改安裝配置bin&#x2F;setup</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;install packages&quot;</span></span><br><span class="line">npm install --production --unsafe-perm=<span class="literal">true</span> --allow-root</span><br><span class="line"></span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br></pre></td></tr></table></figure><h4 id="執行安裝配置"><a href="#執行安裝配置" class="headerlink" title="執行安裝配置"></a>執行安裝配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> bash bin/setup</span><br></pre></td></tr></table></figure><h3 id="修改環境配置"><a href="#修改環境配置" class="headerlink" title="修改環境配置"></a>修改環境配置</h3><p>編輯config.json</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line"></span><br><span class="line">    &quot;production&quot;: &#123;</span><br><span class="line">        &quot;host&quot;: &quot;0.0.0.0&quot;, // 設置來源</span><br><span class="line">        &quot;port&quot;: 3000, // 設置port</span><br><span class="line">        &quot;loglevel&quot;: &quot;info&quot;,</span><br><span class="line">        &quot;hsts&quot;: &#123;</span><br><span class="line">            &quot;enable&quot;: true,</span><br><span class="line">            &quot;maxAgeSeconds&quot;: 31536000,</span><br><span class="line">            &quot;includeSubdomains&quot;: true,</span><br><span class="line">            &quot;preload&quot;: true</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;csp&quot;: &#123;</span><br><span class="line">            &quot;enable&quot;: true,</span><br><span class="line">            &quot;directives&quot;: &#123;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;upgradeInsecureRequests&quot;: &quot;auto&quot;,</span><br><span class="line">            &quot;addDefaults&quot;: true,</span><br><span class="line">            &quot;addDisqus&quot;: true,</span><br><span class="line">            &quot;addGoogleAnalytics&quot;: true</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;db&quot;: &#123;</span><br><span class="line">            &quot;username&quot;: &quot;帳號&quot;, // 設置db帳號</span><br><span class="line">            &quot;password&quot;: &quot;密碼&quot;, // 設置db密碼</span><br><span class="line">            &quot;database&quot;: &quot;資料庫&quot;, // 設置資料庫名稱</span><br><span class="line">            &quot;host&quot;: &quot;localhost&quot;,</span><br><span class="line">            &quot;port&quot;: &quot;3306&quot;,</span><br><span class="line">            &quot;dialect&quot;: &quot;mysql&quot;</span><br><span class="line">        &#125;</span><br><span class="line">        &quot;linkifyHeaderStyle&quot;: &quot;gfm&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>編輯.sequelizerc</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var path = require(&#x27;path&#x27;);</span><br><span class="line"></span><br><span class="line">module.exports = &#123;</span><br><span class="line">    &#x27;config&#x27;:          path.resolve(&#x27;config.json&#x27;),</span><br><span class="line">    &#x27;migrations-path&#x27;: path.resolve(&#x27;lib&#x27;, &#x27;migrations&#x27;),</span><br><span class="line">    &#x27;models-path&#x27;:     path.resolve(&#x27;lib&#x27;, &#x27;models&#x27;),</span><br><span class="line">    &#x27;url&#x27;:             &#x27;mysql://&#123;db帳號&#125;:&#123;db密碼&#125;@localhost:3306/codimd&#x27;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>編輯lib&#x2F;config&#x2F;default.js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line"></span><br><span class="line"> allowAnonymous: false, // 關閉匿名登入</span><br><span class="line"> allowAnonymousEdits: false, // 關閉匿名編輯</span><br><span class="line"></span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line"></span><br><span class="line"> email: true, // 開啟email使用</span><br><span class="line"> allowEmailRegister: true, // 允許email註冊</span><br><span class="line"></span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br></pre></td></tr></table></figure><h2 id="啟動"><a href="#啟動" class="headerlink" title="啟動"></a>啟動</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm run build // 重新編輯前端頁面</span><br><span class="line">$ node app.js // 啟動服務</span><br></pre></td></tr></table></figure><img src="/2020/07/05/codimd-install/codimd1.png" class=""><img src="/2020/07/05/codimd-install/codimd2.png" class=""><img src="/2020/07/05/codimd-install/codimd3.png" class="">]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;相關介紹&quot;&gt;&lt;a href=&quot;#相關介紹&quot; class=&quot;headerlink&quot; title=&quot;相關介紹&quot;&gt;&lt;/a&gt;相關介紹&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/hackmdio/codimd&quot;&gt;github&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://hackmd.io/c/codimd-documentation/%2Fs%2Fcodimd-manual-deployment&quot;&gt;manual-deployment&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;安裝nodejs&quot;&gt;&lt;a href=&quot;#安裝nodejs&quot; class=&quot;headerlink&quot; title=&quot;安裝nodejs&quot;&gt;&lt;/a&gt;安裝nodejs&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 安裝版本庫&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ curl -sL https://deb.nodesource.com/setup_10.x | &lt;span class=&quot;built_in&quot;&gt;sudo&lt;/span&gt; -E bash -&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 安裝nodejs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ apt install -y nodejs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 查看nodejs版本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ node -v&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 查看npm版本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm -v&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;安裝相關依賴&quot;&gt;&lt;a href=&quot;#安裝相關依賴&quot; class=&quot;headerlink&quot; title=&quot;安裝相關依賴&quot;&gt;&lt;/a&gt;安裝相關依賴&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install -g yarn&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install -g node-gyp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install -g sqlite3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install -g webpack&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;安裝codimd&quot;&gt;&lt;a href=&quot;#安裝codimd&quot; class=&quot;headerlink&quot; title=&quot;安裝codimd&quot;&gt;&lt;/a&gt;安裝codimd&lt;/h2&gt;&lt;h3 id=&quot;設置環境變數&quot;&gt;&lt;a href=&quot;#設置環境變數&quot; class=&quot;headerlink&quot; title=&quot;設置環境變數&quot;&gt;&lt;/a&gt;設置環境變數&lt;/h3&gt;&lt;p&gt;打開&amp;#x2F;etc&amp;#x2F;profile這個檔案並且在末尾加入：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; PATH=&lt;span class=&quot;variable&quot;&gt;$PATH&lt;/span&gt;:NODE_ENV=production&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;抓取項目-opt&quot;&gt;&lt;a href=&quot;#抓取項目-opt&quot; class=&quot;headerlink&quot; title=&quot;抓取項目(&amp;#x2F;opt)&quot;&gt;&lt;/a&gt;抓取項目(&amp;#x2F;opt)&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; https://github.com/hackmdio/codimd.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://pcion123.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="https://pcion123.github.io/tags/linux/"/>
    
      <category term="ubuntu" scheme="https://pcion123.github.io/tags/ubuntu/"/>
    
      <category term="codimd" scheme="https://pcion123.github.io/tags/codimd/"/>
    
      <category term="hackmd" scheme="https://pcion123.github.io/tags/hackmd/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu安裝RabbitMQ</title>
    <link href="https://pcion123.github.io/2020/05/10/rabbitmq-install/"/>
    <id>https://pcion123.github.io/2020/05/10/rabbitmq-install/</id>
    <published>2020-05-10T10:34:10.000Z</published>
    <updated>2025-08-13T14:31:49.422Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安裝erlang"><a href="#安裝erlang" class="headerlink" title="安裝erlang"></a>安裝erlang</h2><p>rabbitmq需要依靠erlang驅動，<br>所以我們需要先安裝erlang</p><p>使用<a href="https://www.erlang-solutions.com/resources/download.html#tabs-debian">repository</a>安裝:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://packages.erlang-solutions.com/erlang-solutions_2.0_all.deb</span><br><span class="line">$ <span class="built_in">sudo</span> dpkg -i erlang-solutions_2.0_all.deb</span><br><span class="line">$ <span class="built_in">sudo</span> apt install esl-erlang</span><br></pre></td></tr></table></figure><h2 id="安裝rabbitmq"><a href="#安裝rabbitmq" class="headerlink" title="安裝rabbitmq"></a>安裝rabbitmq</h2><p>github<a href="https://www.rabbitmq.com/install-debian.html#manual-installation">手動</a>安裝:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://github.com/rabbitmq/rabbitmq-server/releases/download/v3.8.3/rabbitmq-server_3.8.3-1_all.deb</span><br><span class="line">$ <span class="built_in">sudo</span> dpkg -i rabbitmq-server_3.8.3-1_all.deb</span><br></pre></td></tr></table></figure><span id="more"></span><p>如果安裝過程有問題可以試著apt指令修復</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> apt --fix-broken install</span><br></pre></td></tr></table></figure><h2 id="修改rabbitmq管理插件"><a href="#修改rabbitmq管理插件" class="headerlink" title="修改rabbitmq管理插件"></a>修改rabbitmq管理插件</h2><p>安裝完rabbitmq之後,<br>我們會需要一個可以管理的工具,<br>rabbitmq很好的提供web的管理工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rabbitmq-plugins <span class="built_in">enable</span> rabbitmq_management</span><br></pre></td></tr></table></figure><p>安裝完畢後重啟服務<br>接著在瀏覽器輸入<a href="http://localhost:15672/">http://localhost:15672</a></p><img src="/2020/05/10/rabbitmq-install/rabbitmq1.png" class=""><h2 id="修改rabbitmq設置"><a href="#修改rabbitmq設置" class="headerlink" title="修改rabbitmq設置"></a>修改rabbitmq設置</h2><p>因為rabbitmq預設guest帳號只給本機登入，<br>如果需要開放外部登入就要修改設置</p><p>打開&#x2F;etc&#x2F;rabbitmq&#x2F;rabbitmq.config，<br>加入以下設置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">&#123;</span><br><span class="line">rabbit,</span><br><span class="line">[&#123;loopback_users, [<span class="string">&quot;guest&quot;</span>]&#125;]</span><br><span class="line">&#125;</span><br><span class="line">].</span><br></pre></td></tr></table></figure><p>重啟服務之後我們就可以用guset帳號登入了</p><img src="/2020/05/10/rabbitmq-install/rabbitmq2.png" class="">]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安裝erlang&quot;&gt;&lt;a href=&quot;#安裝erlang&quot; class=&quot;headerlink&quot; title=&quot;安裝erlang&quot;&gt;&lt;/a&gt;安裝erlang&lt;/h2&gt;&lt;p&gt;rabbitmq需要依靠erlang驅動，&lt;br&gt;所以我們需要先安裝erlang&lt;/p&gt;
&lt;p&gt;使用&lt;a href=&quot;https://www.erlang-solutions.com/resources/download.html#tabs-debian&quot;&gt;repository&lt;/a&gt;安裝:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ wget https://packages.erlang-solutions.com/erlang-solutions_2.0_all.deb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;sudo&lt;/span&gt; dpkg -i erlang-solutions_2.0_all.deb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;sudo&lt;/span&gt; apt install esl-erlang&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;安裝rabbitmq&quot;&gt;&lt;a href=&quot;#安裝rabbitmq&quot; class=&quot;headerlink&quot; title=&quot;安裝rabbitmq&quot;&gt;&lt;/a&gt;安裝rabbitmq&lt;/h2&gt;&lt;p&gt;github&lt;a href=&quot;https://www.rabbitmq.com/install-debian.html#manual-installation&quot;&gt;手動&lt;/a&gt;安裝:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ wget https://github.com/rabbitmq/rabbitmq-server/releases/download/v3.8.3/rabbitmq-server_3.8.3-1_all.deb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;sudo&lt;/span&gt; dpkg -i rabbitmq-server_3.8.3-1_all.deb&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://pcion123.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="https://pcion123.github.io/tags/linux/"/>
    
      <category term="ubuntu" scheme="https://pcion123.github.io/tags/ubuntu/"/>
    
      <category term="rabbitmq" scheme="https://pcion123.github.io/tags/rabbitmq/"/>
    
  </entry>
  
  <entry>
    <title>Windows Terminal主題配置</title>
    <link href="https://pcion123.github.io/2020/03/09/windowsterminal-scheme/"/>
    <id>https://pcion123.github.io/2020/03/09/windowsterminal-scheme/</id>
    <published>2020-03-09T11:50:31.000Z</published>
    <updated>2025-08-13T14:31:49.422Z</updated>
    
    <content type="html"><![CDATA[<img src="/2020/03/09/windowsterminal-scheme/terminal1.png" class=""><span id="more"></span><p>打開WindowsTerminal的Setting設置主題</p><p><a href="https://draculatheme.com/windows-terminal/">Dracula主題</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;profiles&quot;</span>:</span><br><span class="line">[</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;name&quot;</span>: <span class="string">&quot;Windows PowerShell&quot;</span>,</span><br><span class="line"><span class="string">&quot;commandline&quot;</span>: <span class="string">&quot;powershell.exe&quot;</span>,</span><br><span class="line"><span class="string">&quot;cursorColor&quot;</span> : <span class="string">&quot;#657B83&quot;</span>, // 光標顏色</span><br><span class="line"><span class="string">&quot;cursorShape&quot;</span> : <span class="string">&quot;vintage&quot;</span>, // 光標類型</span><br><span class="line"><span class="string">&quot;colorScheme&quot;</span> : <span class="string">&quot;Dracula&quot;</span>, // 配置主題</span><br><span class="line"><span class="string">&quot;fontFace&quot;</span> : <span class="string">&quot;DejaVu Sans Mono for Powerline&quot;</span>, // 字型</span><br><span class="line"><span class="string">&quot;fontSize&quot;</span> : 12, // 字型大小</span><br><span class="line"><span class="string">&quot;hidden&quot;</span>: <span class="literal">false</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;name&quot;</span>: <span class="string">&quot;cmd&quot;</span>,</span><br><span class="line"><span class="string">&quot;commandline&quot;</span>: <span class="string">&quot;cmd.exe&quot;</span>,</span><br><span class="line"><span class="string">&quot;cursorColor&quot;</span> : <span class="string">&quot;#657B83&quot;</span>,</span><br><span class="line"><span class="string">&quot;cursorShape&quot;</span> : <span class="string">&quot;vintage&quot;</span>,</span><br><span class="line"><span class="string">&quot;colorScheme&quot;</span> : <span class="string">&quot;Dracula&quot;</span>,</span><br><span class="line"><span class="string">&quot;fontFace&quot;</span> : <span class="string">&quot;DejaVu Sans Mono for Powerline&quot;</span>,</span><br><span class="line"><span class="string">&quot;fontSize&quot;</span> : 12,</span><br><span class="line"><span class="string">&quot;hidden&quot;</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line">],</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;schemes&quot;</span>:</span><br><span class="line">[</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;name&quot;</span> : <span class="string">&quot;Dracula&quot;</span>,</span><br><span class="line"><span class="string">&quot;background&quot;</span> : <span class="string">&quot;#282A36&quot;</span>,</span><br><span class="line"><span class="string">&quot;black&quot;</span> : <span class="string">&quot;#21222C&quot;</span>,</span><br><span class="line"><span class="string">&quot;blue&quot;</span> : <span class="string">&quot;#BD93F9&quot;</span>,</span><br><span class="line"><span class="string">&quot;brightBlack&quot;</span> : <span class="string">&quot;#6272A4&quot;</span>,</span><br><span class="line"><span class="string">&quot;brightBlue&quot;</span> : <span class="string">&quot;#D6ACFF&quot;</span>,</span><br><span class="line"><span class="string">&quot;brightCyan&quot;</span> : <span class="string">&quot;#A4FFFF&quot;</span>,</span><br><span class="line"><span class="string">&quot;brightGreen&quot;</span> : <span class="string">&quot;#69FF94&quot;</span>,</span><br><span class="line"><span class="string">&quot;brightPurple&quot;</span> : <span class="string">&quot;#FF92DF&quot;</span>,</span><br><span class="line"><span class="string">&quot;brightRed&quot;</span> : <span class="string">&quot;#FF6E6E&quot;</span>,</span><br><span class="line"><span class="string">&quot;brightWhite&quot;</span> : <span class="string">&quot;#FFFFFF&quot;</span>,</span><br><span class="line"><span class="string">&quot;brightYellow&quot;</span> : <span class="string">&quot;#FFFFA5&quot;</span>,</span><br><span class="line"><span class="string">&quot;cyan&quot;</span> : <span class="string">&quot;#8BE9FD&quot;</span>,</span><br><span class="line"><span class="string">&quot;foreground&quot;</span> : <span class="string">&quot;#F8F8F2&quot;</span>,</span><br><span class="line"><span class="string">&quot;green&quot;</span> : <span class="string">&quot;#50FA7B&quot;</span>,</span><br><span class="line"><span class="string">&quot;purple&quot;</span> : <span class="string">&quot;#FF79C6&quot;</span>,</span><br><span class="line"><span class="string">&quot;red&quot;</span> : <span class="string">&quot;#FF5555&quot;</span>,</span><br><span class="line"><span class="string">&quot;white&quot;</span> : <span class="string">&quot;#F8F8F2&quot;</span>,</span><br><span class="line"><span class="string">&quot;yellow&quot;</span> : <span class="string">&quot;#F1FA8C&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">],</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2020/03/09/windowsterminal-scheme/terminal1.png&quot; class=&quot;&quot;&gt;
    
    </summary>
    
    
      <category term="windows" scheme="https://pcion123.github.io/categories/windows/"/>
    
    
      <category term="windows" scheme="https://pcion123.github.io/tags/windows/"/>
    
      <category term="powershell" scheme="https://pcion123.github.io/tags/powershell/"/>
    
      <category term="terminal" scheme="https://pcion123.github.io/tags/terminal/"/>
    
  </entry>
  
  <entry>
    <title>美化PowerShell - oh-my-posh</title>
    <link href="https://pcion123.github.io/2020/03/08/powershell-improve/"/>
    <id>https://pcion123.github.io/2020/03/08/powershell-improve/</id>
    <published>2020-03-08T05:50:17.000Z</published>
    <updated>2025-08-13T14:31:49.422Z</updated>
    
    <content type="html"><![CDATA[<img src="/2020/03/08/powershell-improve/powershell1.png" class=""><p>厭倦windows預設的powershell主題了嗎?<br>現在開始來改造它吧!!!</p><span id="more"></span><h2 id="安裝套件"><a href="#安裝套件" class="headerlink" title="安裝套件"></a>安裝套件</h2><p>首先打開powershell：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安裝posh-git套件</span></span><br><span class="line">Install-Module posh-git -Scope CurrentUser</span><br><span class="line"><span class="comment"># 安裝oh-my-posh套件</span></span><br><span class="line">Install-Module oh-my-posh -Scope CurrentUser</span><br></pre></td></tr></table></figure><p>基本上都輸入Y到底就可以安裝完成了!</p><h2 id="設置設定檔"><a href="#設置設定檔" class="headerlink" title="設置設定檔"></a>設置設定檔</h2><p>建立powershel啟動設定檔</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 取得設定檔位置</span></span><br><span class="line"><span class="variable">$profile</span></span><br><span class="line"><span class="comment"># 得到設定檔位置</span></span><br><span class="line">~\Documents\WindowsPowerShell\Microsoft.PowerShell_profile.ps1</span><br></pre></td></tr></table></figure><p>打開Microsoft.PowerShell_profile.ps1設定檔，如果沒有請自行建立</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用UTF-8編碼</span></span><br><span class="line">chcp 65001</span><br><span class="line"><span class="comment"># 引用posh-git</span></span><br><span class="line">Import-Module posh-git</span><br><span class="line"><span class="comment"># 引用oh-my-posh</span></span><br><span class="line">Import-Module oh-my-posh</span><br><span class="line"><span class="comment"># 設置Agnoster主題</span></span><br><span class="line">Set-Theme Agnoster</span><br></pre></td></tr></table></figure><h2 id="安裝powerline字型"><a href="#安裝powerline字型" class="headerlink" title="安裝powerline字型"></a>安裝powerline字型</h2><p>由於windows預設的字型無法支援oh-my-posh<br>所以我們需要另外安裝配合的字型檔</p><p><a href="https://github.com/powerline/fonts">powerline字型</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># clone項目</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/powerline/fonts.git</span><br><span class="line"><span class="comment"># 執行install.ps1進行安裝</span></span><br><span class="line">.\install.ps1</span><br></pre></td></tr></table></figure><p>調整powershell內容</p><img src="/2020/03/08/powershell-improve/powershell2.png" class=""><p>請選擇有powerline的字型</p><img src="/2020/03/08/powershell-improve/powershell3.png" class=""><h2 id="配置顏色主題"><a href="#配置顏色主題" class="headerlink" title="配置顏色主題"></a>配置顏色主題</h2><p>最後我們要用scoop來安裝colortool主題工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 保證允許腳本執行</span></span><br><span class="line">set-executionpolicy remotesigned -scope currentuser</span><br><span class="line"><span class="comment"># 安裝scoop</span></span><br><span class="line">iex (new-object net.webclient).downloadstring(<span class="string">&#x27;https://get.scoop.sh&#x27;</span>)</span><br><span class="line"><span class="comment"># 安裝colortool</span></span><br><span class="line">scoop install colortool</span><br></pre></td></tr></table></figure><p>接著我們就要來配置顏色主題</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 取得預設主題列表</span></span><br><span class="line">colortool -s</span><br><span class="line"><span class="comment"># 預設主題</span></span><br><span class="line"><span class="comment"># campbell-legacy.ini</span></span><br><span class="line"><span class="comment"># campbell.ini</span></span><br><span class="line"><span class="comment"># cmd-legacy.ini</span></span><br><span class="line"><span class="comment"># OneHalfDark.itermcolors</span></span><br><span class="line"><span class="comment"># OneHalfLight.itermcolors</span></span><br><span class="line"><span class="comment"># solarized_dark.itermcolors</span></span><br><span class="line"><span class="comment"># solarized_light.itermcolors</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 臨時查看主題樣式</span></span><br><span class="line">colortool &lt;主題名稱&gt;</span><br><span class="line"><span class="comment"># 設置預設主題樣式</span></span><br><span class="line">colortool -d &lt;主題名稱&gt;</span><br></pre></td></tr></table></figure><p>選定主題</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 設置OneHalfDark主題</span></span><br><span class="line">colortool OneHalfDark.itermcolors</span><br></pre></td></tr></table></figure><img src="/2020/03/08/powershell-improve/powershell4.png" class=""><p>這樣我們就大功告成拉!!</p>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2020/03/08/powershell-improve/powershell1.png&quot; class=&quot;&quot;&gt;

&lt;p&gt;厭倦windows預設的powershell主題了嗎?&lt;br&gt;現在開始來改造它吧!!!&lt;/p&gt;
    
    </summary>
    
    
      <category term="windows" scheme="https://pcion123.github.io/categories/windows/"/>
    
    
      <category term="windows" scheme="https://pcion123.github.io/tags/windows/"/>
    
      <category term="powershell" scheme="https://pcion123.github.io/tags/powershell/"/>
    
      <category term="terminal" scheme="https://pcion123.github.io/tags/terminal/"/>
    
  </entry>
  
  <entry>
    <title>TelegramBot申請與開發</title>
    <link href="https://pcion123.github.io/2019/11/09/telegrambot-install/"/>
    <id>https://pcion123.github.io/2019/11/09/telegrambot-install/</id>
    <published>2019-11-09T07:41:00.000Z</published>
    <updated>2025-08-13T14:31:49.422Z</updated>
    
    <content type="html"><![CDATA[<p>telegrambot的使用與開發相較於linebot來說是好上手很多<br>接下來就是介紹開發與使用方式</p><span id="more"></span><h2 id="telegrambot-申請"><a href="#telegrambot-申請" class="headerlink" title="telegrambot 申請"></a>telegrambot 申請</h2><p>在telegram search bar上搜尋@BotFather<br>然後完成附圖的流程</p><img src="/2019/11/09/telegrambot-install/telegram1.png" class=""><h2 id="telegrambot-API使用"><a href="#telegrambot-API使用" class="headerlink" title="telegrambot API使用"></a>telegrambot API使用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">https://api.telegram.org/bot&#123;token&#125;/getUpdates</span><br><span class="line"><span class="comment"># 取得chatid</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;ok&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&quot;result&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;update_id&quot;</span>: 123456789,</span><br><span class="line">            <span class="string">&quot;message&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;message_id&quot;</span>: 99,</span><br><span class="line">                <span class="string">&quot;from&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;id&quot;</span>: 123456789,</span><br><span class="line">                    <span class="string">&quot;is_bot&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">                    <span class="string">&quot;first_name&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;last_name&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;username&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;language_code&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">&quot;chat&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;id&quot;</span>: -314847207,</span><br><span class="line">                    <span class="string">&quot;title&quot;</span>: <span class="string">&quot;this is a title&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;group&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;all_members_are_administrators&quot;</span>: <span class="literal">true</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">&quot;date&quot;</span>: 1573288754,</span><br><span class="line">                <span class="string">&quot;text&quot;</span>: <span class="string">&quot;messsage&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">https://api.telegram.org/bot&#123;token&#125;/sendMessage?chat_id=&#123;channelid&#125;&amp;text=&#123;message&#125;</span><br><span class="line"><span class="comment"># 嘗試發送訊息</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;ok&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&quot;result&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;message_id&quot;</span>: 99,</span><br><span class="line">        <span class="string">&quot;from&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;id&quot;</span>: 123456789,</span><br><span class="line">            <span class="string">&quot;is_bot&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="string">&quot;first_name&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;username&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;chat&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;id&quot;</span>: 123456789,</span><br><span class="line">            <span class="string">&quot;title&quot;</span>: <span class="string">&quot;this is a title&quot;</span>,</span><br><span class="line">            <span class="string">&quot;type&quot;</span>: <span class="string">&quot;group&quot;</span>,</span><br><span class="line">            <span class="string">&quot;all_members_are_administrators&quot;</span>: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;date&quot;</span>: 1573289062,</span><br><span class="line">        <span class="string">&quot;text&quot;</span>: <span class="string">&quot;messsage&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更多API參考 <a href="https://core.telegram.org/bots/api">Telegram Bot API</a></p><h2 id="telegrambot-JAVASDK使用"><a href="#telegrambot-JAVASDK使用" class="headerlink" title="telegrambot JAVASDK使用"></a>telegrambot JAVASDK使用</h2><p>maven引用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;org.telegram&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;telegrambots&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;<span class="number">4.4</span><span class="number">.0</span><span class="number">.1</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>繼承TelegramLongPollingBot</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getBotUsername</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;userName&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getBotToken</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;token&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onUpdateReceived</span><span class="params">(Update update)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (update.hasMessage() &amp;&amp; update.getMessage().hasText())</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> update.getMessage().getFrom();</span><br><span class="line"><span class="type">String</span> <span class="variable">rcvMessage</span> <span class="operator">=</span> update.getMessage().getText();</span><br><span class="line"><span class="type">String</span> <span class="variable">source</span> <span class="operator">=</span> String.format(<span class="string">&quot;收到來自[%s%s]的訊息內容=%s&quot;</span>, user.getFirstName(), user.getLastName(), rcvMessage);</span><br><span class="line"><span class="type">SendMessage</span> <span class="variable">message</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SendMessage</span>().setChatId(update.getMessage().getChatId()).setText(source);</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">execute(message);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception e)</span><br><span class="line">&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BotClass使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">&#123;</span><br><span class="line">ApiContextInitializer.init();</span><br><span class="line"><span class="type">TelegramBotsApi</span> <span class="variable">botsApi</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TelegramBotsApi</span>();</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">botsApi.registerBot(<span class="keyword">new</span> <span class="title class_">Telegram</span>());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception e)</span><br><span class="line">&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最後完成範例</p><img src="/2019/11/09/telegrambot-install/telegram2.png" class="">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;telegrambot的使用與開發相較於linebot來說是好上手很多&lt;br&gt;接下來就是介紹開發與使用方式&lt;/p&gt;
    
    </summary>
    
    
      <category term="telegram" scheme="https://pcion123.github.io/categories/telegram/"/>
    
    
      <category term="telegram" scheme="https://pcion123.github.io/tags/telegram/"/>
    
      <category term="bot" scheme="https://pcion123.github.io/tags/bot/"/>
    
  </entry>
  
  <entry>
    <title>Elasticsearch+Kibana+Logstash環境安裝</title>
    <link href="https://pcion123.github.io/2019/10/20/elk-install/"/>
    <id>https://pcion123.github.io/2019/10/20/elk-install/</id>
    <published>2019-10-20T05:36:22.000Z</published>
    <updated>2025-08-13T14:31:49.388Z</updated>
    
    <content type="html"><![CDATA[<p>在分散式系統底下我們需要查詢log紀錄<br>總不可能需要一台一台機器上去查看紀錄<br>這個時候我們就會需要有個服務幫我們達成這個目的</p><p>elasticsearch就很適合來幫我們完成這個任務</p><p><a href="https://www.elastic.co/cn/">elasticsearch官網</a></p><span id="more"></span><h2 id="安裝JDK"><a href="#安裝JDK" class="headerlink" title="安裝JDK"></a>安裝JDK</h2><a href="/2019/03/10/java-installopenjdk/" title="安裝OpenJDK">請參考之前的文章</a><h2 id="elasticsearch佈署"><a href="#elasticsearch佈署" class="headerlink" title="elasticsearch佈署"></a>elasticsearch佈署</h2><p>elasticsearch是一個分散式的儲存系統，屬於NoSQL資料庫的一種<br><a href="https://www.elastic.co/cn/products/elasticsearch">elasticsearch介紹</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#下載安裝檔</span></span><br><span class="line">$ wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.4.0-amd64.deb</span><br><span class="line"><span class="comment">#下載驗證檔</span></span><br><span class="line">$ wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.4.0-amd64.deb.sha512</span><br><span class="line"><span class="comment">#檢查檔案</span></span><br><span class="line">$ shasum -a 512 -c elasticsearch-7.4.0-amd64.deb.sha512</span><br><span class="line"><span class="comment">#執行安裝</span></span><br><span class="line">$ <span class="built_in">sudo</span> dpkg -i elasticsearch-7.4.0-amd64.deb</span><br></pre></td></tr></table></figure><h3 id="修改配置檔案"><a href="#修改配置檔案" class="headerlink" title="修改配置檔案"></a>修改配置檔案</h3><p>首先我們要先修改elasticsearch記憶體的使用量<br>修改elasticsearch使用的記憶體，設定為主機的50%記憶體</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/etc/elasticsearch/jvm.options</span></span><br><span class="line">-Xms1g  <span class="comment"># Xms 記憶體使用下限</span></span><br><span class="line">-Xmx1g  <span class="comment"># Xmx 記憶體使用上限</span></span><br></pre></td></tr></table></figure><h3 id="修改設定檔"><a href="#修改設定檔" class="headerlink" title="修改設定檔"></a>修改設定檔</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/etc/elasticsearch/elasticsearch.yml</span></span><br><span class="line"><span class="comment">#設置服務名稱</span></span><br><span class="line">cluster.name: elk_elasticsearch</span><br><span class="line"><span class="comment">#設置節點名稱</span></span><br><span class="line">node.name: elk_node</span><br><span class="line"><span class="comment">#設置為主要結點</span></span><br><span class="line">node.master: <span class="literal">true</span></span><br><span class="line"><span class="comment">#允許節點儲存數據</span></span><br><span class="line">node.data: <span class="literal">true</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">path.data: /var/lib/elasticsearch</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">path.logs: /var/log/elasticsearch</span><br><span class="line"><span class="comment">#綁定來源</span></span><br><span class="line">network.bind_host: 0.0.0.0</span><br><span class="line"><span class="comment">#綁定對外服務端口</span></span><br><span class="line">http.port: 9200</span><br><span class="line"><span class="comment">#綁定節點通信端口</span></span><br><span class="line">transport.tcp.port: 9300</span><br><span class="line"><span class="comment">#啟用資料壓縮</span></span><br><span class="line">transport.tcp.compress: <span class="literal">true</span></span><br><span class="line"><span class="comment">#集群發現節點列表</span></span><br><span class="line">discovery.seed_hosts: [<span class="string">&quot;127.0.0.1:9300&quot;</span>]</span><br><span class="line"><span class="comment">#設置主要節點列表</span></span><br><span class="line">cluster.initial_master_nodes: [<span class="string">&quot;127.0.0.1&quot;</span>]</span><br></pre></td></tr></table></figure><h3 id="測試"><a href="#測試" class="headerlink" title="測試"></a>測試</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#啟動服務</span></span><br><span class="line">$ service elasticsearch start</span><br><span class="line"><span class="comment">#測試</span></span><br><span class="line">$ curl http://127.0.0.1:9200</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span> : <span class="string">&quot;elk_node&quot;</span>,</span><br><span class="line">  <span class="string">&quot;cluster_name&quot;</span> : <span class="string">&quot;elk_service&quot;</span>,</span><br><span class="line">  <span class="string">&quot;cluster_uuid&quot;</span> : <span class="string">&quot;SRb6b1RaTaewA_OK2C7fMA&quot;</span>,</span><br><span class="line">  <span class="string">&quot;version&quot;</span> : &#123;</span><br><span class="line">    <span class="string">&quot;number&quot;</span> : <span class="string">&quot;7.4.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;build_flavor&quot;</span> : <span class="string">&quot;default&quot;</span>,</span><br><span class="line">    <span class="string">&quot;build_type&quot;</span> : <span class="string">&quot;deb&quot;</span>,</span><br><span class="line">    <span class="string">&quot;build_hash&quot;</span> : <span class="string">&quot;22e1767283e61a198cb4db791ea66e3f11ab9910&quot;</span>,</span><br><span class="line">    <span class="string">&quot;build_date&quot;</span> : <span class="string">&quot;2019-09-27T08:36:48.569419Z&quot;</span>,</span><br><span class="line">    <span class="string">&quot;build_snapshot&quot;</span> : <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;lucene_version&quot;</span> : <span class="string">&quot;8.2.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;minimum_wire_compatibility_version&quot;</span> : <span class="string">&quot;6.8.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;minimum_index_compatibility_version&quot;</span> : <span class="string">&quot;6.0.0-beta1&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;tagline&quot;</span> : <span class="string">&quot;You Know, for Search&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="kibana佈署"><a href="#kibana佈署" class="headerlink" title="kibana佈署"></a>kibana佈署</h2><p>kibana是elasticsearch可視化的重要元件<br><a href="https://www.elastic.co/cn/products/kibana">kibana介紹</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#下載安裝檔</span></span><br><span class="line">$ wget https://artifacts.elastic.co/downloads/kibana/kibana-7.4.0-amd64.deb</span><br><span class="line"><span class="comment">#下載驗證檔</span></span><br><span class="line">$ wget https://artifacts.elastic.co/downloads/kibana/kibana-7.4.0-amd64.deb.sha512</span><br><span class="line"><span class="comment">#檢查檔案</span></span><br><span class="line">$ shasum -a 512 -c kibana-7.4.0-amd64.deb.sha512</span><br><span class="line"><span class="comment">#執行安裝</span></span><br><span class="line">$ <span class="built_in">sudo</span> dpkg -i kibana-7.4.0-amd64.deb</span><br></pre></td></tr></table></figure><h3 id="修改配置檔案-1"><a href="#修改配置檔案-1" class="headerlink" title="修改配置檔案"></a>修改配置檔案</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/etc/kibana/kibana.yml</span></span><br><span class="line"><span class="comment">#綁定對外服務端口</span></span><br><span class="line">server.port: 5601</span><br><span class="line"><span class="comment">#綁定來源</span></span><br><span class="line">server.host: <span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line"><span class="comment">#設置服務名稱</span></span><br><span class="line">server.name: <span class="string">&quot;elk_kibana&quot;</span></span><br><span class="line"><span class="comment">#設置elasticsearch節點列表</span></span><br><span class="line">elasticsearch.hosts: [<span class="string">&quot;http://127.0.0.1:9200&quot;</span>]</span><br><span class="line"><span class="comment">#設置索引</span></span><br><span class="line">kibana.index: <span class="string">&quot;.kibana&quot;</span></span><br><span class="line">設置<span class="built_in">log</span>路徑</span><br><span class="line">logging.dest: /var/log/kibana/kibana.log</span><br><span class="line">設置中文化</span><br><span class="line">i18n.locale: <span class="string">&quot;zh-CN&quot;</span></span><br></pre></td></tr></table></figure><h3 id="建立log目錄"><a href="#建立log目錄" class="headerlink" title="建立log目錄"></a>建立log目錄</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#建立目錄</span></span><br><span class="line">$ <span class="built_in">mkdir</span> /var/log/kibana</span><br><span class="line"><span class="comment">#修改使用者權限</span></span><br><span class="line">$ <span class="built_in">chown</span> kibana:kibana /var/log/kibana</span><br></pre></td></tr></table></figure><h3 id="測試-1"><a href="#測試-1" class="headerlink" title="測試"></a>測試</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#啟動服務</span></span><br><span class="line">$ service kibana start</span><br></pre></td></tr></table></figure><p><a href="http://127.0.0.1:5601/">測試網址http://127.0.0.1:5601</a></p><img src="/2019/10/20/elk-install/kibana1.png" class=""><img src="/2019/10/20/elk-install/kibana2.png" class=""><h2 id="logstash佈署"><a href="#logstash佈署" class="headerlink" title="logstash佈署"></a>logstash佈署</h2><p>logstash是負責幫我們收集各種log資料的收集器<br><a href="https://www.elastic.co/cn/products/logstash">logstash介紹</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#下載安裝檔</span></span><br><span class="line">$ wget https://artifacts.elastic.co/downloads/logstash/logstash-7.4.0.deb</span><br><span class="line"><span class="comment">#下載驗證檔</span></span><br><span class="line">$ wget https://artifacts.elastic.co/downloads/logstash/logstash-7.4.0.deb.sha512</span><br><span class="line"><span class="comment">#檢查檔案</span></span><br><span class="line">$ shasum -a 512 -c logstash-7.4.0.deb.sha512</span><br><span class="line"><span class="comment">#執行安裝</span></span><br><span class="line">$ <span class="built_in">sudo</span> dpkg -i logstash-7.4.0.deb</span><br></pre></td></tr></table></figure><h3 id="修改配置檔案-2"><a href="#修改配置檔案-2" class="headerlink" title="修改配置檔案"></a>修改配置檔案</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/etc/logstash/conf.d/30-log.conf</span></span><br><span class="line"><span class="comment"># Sample Logstash configuration for creating a simple</span></span><br><span class="line"><span class="comment"># Beats -&gt; Logstash -&gt; Elasticsearch pipeline.</span></span><br><span class="line"></span><br><span class="line">input &#123;</span><br><span class="line">  beats &#123;</span><br><span class="line">    port =&gt; 5044</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">  elasticsearch &#123;</span><br><span class="line">    hosts =&gt; [<span class="string">&quot;http://localhost:9200&quot;</span>]</span><br><span class="line">    index =&gt; <span class="string">&quot;%&#123;[@metadata][beat]&#125;-%&#123;[@metadata][version]&#125;-%&#123;+YYYY.MM.dd&#125;&quot;</span></span><br><span class="line">    <span class="comment">#user =&gt; &quot;elastic&quot;</span></span><br><span class="line">    <span class="comment">#password =&gt; &quot;changeme&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="檢查設定檔"><a href="#檢查設定檔" class="headerlink" title="檢查設定檔"></a>檢查設定檔</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/share/logstash/bin/logstash --config.test_and_exit -f /etc/logstash/conf.d/30-log.conf</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">Configuration OK</span><br></pre></td></tr></table></figure><h3 id="啟動服務"><a href="#啟動服務" class="headerlink" title="啟動服務"></a>啟動服務</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#啟動服務</span></span><br><span class="line">$ service logstash start</span><br></pre></td></tr></table></figure><p>基本上elk環境安裝就到這裡<br>之後有空再補上log server使用方式</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在分散式系統底下我們需要查詢log紀錄&lt;br&gt;總不可能需要一台一台機器上去查看紀錄&lt;br&gt;這個時候我們就會需要有個服務幫我們達成這個目的&lt;/p&gt;
&lt;p&gt;elasticsearch就很適合來幫我們完成這個任務&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.elastic.co/cn/&quot;&gt;elasticsearch官網&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="elasticsearch" scheme="https://pcion123.github.io/categories/elasticsearch/"/>
    
    
      <category term="elasticsearch" scheme="https://pcion123.github.io/tags/elasticsearch/"/>
    
      <category term="kibana" scheme="https://pcion123.github.io/tags/kibana/"/>
    
      <category term="logstash" scheme="https://pcion123.github.io/tags/logstash/"/>
    
      <category term="佈署" scheme="https://pcion123.github.io/tags/%E4%BD%88%E7%BD%B2/"/>
    
  </entry>
  
</feed>
