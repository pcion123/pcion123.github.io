<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Ubuntu安裝Nexus</title>
    <url>/2021/08/25/nexus-install/</url>
    <content><![CDATA[<h2 id="安裝JDK"><a href="#安裝JDK" class="headerlink" title="安裝JDK"></a>安裝JDK</h2><a href="/2019/03/10/java-installopenjdk/" title="請參考之前的文章">請參考之前的文章</a>

<h2 id="下載nexus"><a href="#下載nexus" class="headerlink" title="下載nexus"></a>下載nexus</h2><p><a href="https://www.sonatype.com/products/repository-oss-download" target="_blank" rel="noopener">官方下載</a><br>或者<br><a href="https://sonatype-download.global.ssl.fastly.net/repository/downloads-prod-group/3/nexus-3.33.1-01-unix.tar.gz" target="_blank" rel="noopener">nexus-3.33.1-01-unix</a></p>
<a id="more"></a>

<h2 id="建立nexus使用者"><a href="#建立nexus使用者" class="headerlink" title="建立nexus使用者"></a>建立nexus使用者</h2><p>建立nexus專用的系統帳號</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ useradd -M -d /opt/nexus -s /bin/bash -r nexus</span><br></pre></td></tr></table></figure>
<p>允許nexus用戶可以使用無密碼的sudo運行命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">"nexus   ALL=(ALL)       NOPASSWD: ALL"</span> &gt; /etc/sudoers.d/nexus</span><br></pre></td></tr></table></figure>

<h2 id="安裝nexus"><a href="#安裝nexus" class="headerlink" title="安裝nexus"></a>安裝nexus</h2><p>先建立nexus目錄</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mkdir /opt/nexus</span><br></pre></td></tr></table></figure>
<p>解開nexus到剛剛建立好的目錄底下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ tar -zxvf nexus-3.33.1-01-unix.tar.gz -C /opt/nexus --strip-components=1</span><br></pre></td></tr></table></figure>
<p>修改權限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ chown -R nexus: /opt/nexus</span><br></pre></td></tr></table></figure>

<h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><h3 id="調整nexus內存大小"><a href="#調整nexus內存大小" class="headerlink" title="調整nexus內存大小"></a>調整nexus內存大小</h3><p>調整自身機器合適的大小,這邊測試調整成2G</p>
<p>開啟/opt/nexus/bin/nexus.vmoptions</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-Xms2048m</span><br><span class="line">-Xmx2048m</span><br><span class="line">-XX:MaxDirectMemorySize=2048m</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br></pre></td></tr></table></figure>

<h3 id="調整nexus相對路徑"><a href="#調整nexus相對路徑" class="headerlink" title="調整nexus相對路徑"></a>調整nexus相對路徑</h3><p>因為剛剛解開nexus的時候把sonatype-work目錄的位置移上了一層<br>所以這邊相對路徑就需要調整一下</p>
<p>開啟/opt/nexus/bin/nexus.vmoptions</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">-XX:LogFile=./sonatype-work/nexus3/<span class="built_in">log</span>/jvm.log</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">-Dkaraf.data=./sonatype-work/nexus3</span><br><span class="line">-Dkaraf.log=./sonatype-work/nexus3/<span class="built_in">log</span></span><br><span class="line">-Djava.io.tmpdir=./sonatype-work/nexus3/tmp</span><br></pre></td></tr></table></figure>

<h3 id="修改nexus運行帳號"><a href="#修改nexus運行帳號" class="headerlink" title="修改nexus運行帳號"></a>修改nexus運行帳號</h3><p>修改nexus運行時使用帳號<br>請修改成剛剛專門建立的帳號</p>
<p>開啟/opt/nexus/bin/nexus.rc</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">run_as_user=<span class="string">"nexus"</span></span><br></pre></td></tr></table></figure>

<h3 id="修改nexus對外port"><a href="#修改nexus對外port" class="headerlink" title="修改nexus對外port"></a>修改nexus對外port</h3><p>預設port是8081如果不需要調整請跳過這一步<br>因為測試環境的關係這邊改成9090</p>
<p>開啟/opt/nexus/etc/nexus-default.properties</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">## DO NOT EDIT - CUSTOMIZATIONS BELONG IN $data-dir/etc/nexus.properties</span></span><br><span class="line"><span class="comment">##</span></span><br><span class="line"><span class="comment"># Jetty section</span></span><br><span class="line">application-port=9090</span><br><span class="line">application-host=0.0.0.0</span><br></pre></td></tr></table></figure>

<h2 id="啟動nexus"><a href="#啟動nexus" class="headerlink" title="啟動nexus"></a>啟動nexus</h2><h3 id="啟動服務"><a href="#啟動服務" class="headerlink" title="啟動服務"></a>啟動服務</h3><p>啟動</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo -u nexus /opt/nexus/bin/nexus start</span><br></pre></td></tr></table></figure>
<h3 id="監看log"><a href="#監看log" class="headerlink" title="監看log"></a>監看log</h3><p>監看log</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ tail -f /opt/nexus/sonatype-work/nexus3/<span class="built_in">log</span>/nexus.log</span><br></pre></td></tr></table></figure>

<p>第一次登入會看到以下畫面,預設帳號為admin</p>
<img src="/2021/08/25/nexus-install/nexus1.png" class="">

<h3 id="獲取密碼"><a href="#獲取密碼" class="headerlink" title="獲取密碼"></a>獲取密碼</h3><p>獲取第一次登入密碼</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cat /opt/nexus/sonatype-work/nexus3/admin.password</span><br></pre></td></tr></table></figure>

<h3 id="初始設定"><a href="#初始設定" class="headerlink" title="初始設定"></a>初始設定</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1.修改管理者密碼</span><br><span class="line">2.根據需求調整,這邊我選擇關閉匿名用戶登入</span><br><span class="line">3.關閉問題回饋</span><br></pre></td></tr></table></figure>

<p>登入後做完第一次設定後服務就正式裝好啦!</p>
<img src="/2021/08/25/nexus-install/nexus2.png" class="">

<h2 id="系統服務"><a href="#系統服務" class="headerlink" title="系統服務"></a>系統服務</h2><h3 id="建立腳本"><a href="#建立腳本" class="headerlink" title="建立腳本"></a>建立腳本</h3><p>建立/etc/systemd/system/nexus.service</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=nexus service</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">LimitNOFILE=65536</span><br><span class="line">ExecStart=/opt/nexus/bin/nexus start</span><br><span class="line">ExecStop=/opt/nexus/bin/nexus stop</span><br><span class="line">User=nexus</span><br><span class="line">Restart=on-abort</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>

<h3 id="重載systemd"><a href="#重載systemd" class="headerlink" title="重載systemd"></a>重載systemd</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ systemctl daemon-reload</span><br></pre></td></tr></table></figure>

<h3 id="啟用服務"><a href="#啟用服務" class="headerlink" title="啟用服務"></a>啟用服務</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ systemctl <span class="built_in">enable</span> --now nexus.service</span><br></pre></td></tr></table></figure>

<h3 id="查看服務狀態"><a href="#查看服務狀態" class="headerlink" title="查看服務狀態"></a>查看服務狀態</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ systemctl status nexus.service</span><br></pre></td></tr></table></figure>

<p>服務正常運行,這樣我們以後就可以透過systemctl管理服務了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@pcionserver:/etc/systemd/system<span class="comment"># root@pcionserver:/etc/systemd/system# systemctl status nexus.service</span></span><br><span class="line">● nexus.service - nexus service</span><br><span class="line">     Loaded: loaded (/etc/systemd/system/nexus.service; enabled; vendor preset: enabled)</span><br><span class="line">     Active: active (running) since Sat 2021-09-25 07:51:16 UTC; 6min ago</span><br><span class="line">    Process: 8292 ExecStart=/opt/nexus/bin/nexus start (code=exited, status=0/SUCCESS)</span><br><span class="line">   Main PID: 8486 (java)</span><br><span class="line">      Tasks: 80 (<span class="built_in">limit</span>: 4616)</span><br><span class="line">     Memory: 1.3G</span><br><span class="line">     CGroup: /system.slice/nexus.service</span><br><span class="line">             └─8486 /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java -server -Dinstall4j.jvmDir=/usr/lib/jvm/java-8-openjdk-amd64/jre -Dexe4j.moduleName=/opt/nexus/bin/nexus -XX:+UnlockDiag&gt;</span><br><span class="line"></span><br><span class="line">Sep 25 07:51:16 pcionserver systemd[1]: Starting nexus service...</span><br><span class="line">Sep 25 07:51:16 pcionserver nexus[8292]: Starting nexus</span><br><span class="line">Sep 25 07:51:16 pcionserver systemd[1]: Started nexus service.</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>maven</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>maven</tag>
        <tag>nexus</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu安裝Minikube</title>
    <url>/2021/08/21/minikube-install/</url>
    <content><![CDATA[<p>繼上次的docker安裝今天要繼續部屬kubernetes的內容</p>
<h2 id="簡介"><a href="#簡介" class="headerlink" title="簡介"></a>簡介</h2><p>minikube是由google開發的精簡版kubernetes工具<br>可以簡單的模擬k8s底下的環境運作</p>
<a id="more"></a>

<h2 id="安裝容器"><a href="#安裝容器" class="headerlink" title="安裝容器"></a>安裝容器</h2><p>kubernetese提供多樣的容器部屬環境<br>這邊我們選用docker當作容器的底層</p>
<a href="/2021/08/21/docker-install/" title="請參考之前的文章">請參考之前的文章</a>

<h2 id="安裝kubectl"><a href="#安裝kubectl" class="headerlink" title="安裝kubectl"></a>安裝kubectl</h2><p>kubectl是一套管理kubernetes的命令工具</p>
<h3 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 更新套件管理</span></span><br><span class="line">$ sudo apt update</span><br><span class="line"><span class="comment"># 安裝套件倉庫</span></span><br><span class="line">$ sudo apt install -y apt-transport-https ca-certificates curl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下載倉庫憑證</span></span><br><span class="line">$ sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg</span><br><span class="line"><span class="comment"># 加入憑證信任列表</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">"deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main"</span> | sudo tee /etc/apt/sources.list.d/kubernetes.list</span><br><span class="line"></span><br><span class="line">deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新套件管理</span></span><br><span class="line">$ sudo apt update</span><br><span class="line"><span class="comment"># 安裝kubectl</span></span><br><span class="line">$ sudo apt install kubectl -y</span><br></pre></td></tr></table></figure>

<h3 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ kubectl version --short --client</span><br><span class="line"></span><br><span class="line">Client Version: v1.22.1</span><br></pre></td></tr></table></figure>

<h2 id="安裝minikube"><a href="#安裝minikube" class="headerlink" title="安裝minikube"></a>安裝minikube</h2><p>現在開始安裝主角</p>
<h3 id="安裝-1"><a href="#安裝-1" class="headerlink" title="安裝"></a>安裝</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下載安裝包</span></span><br><span class="line">$ curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube_latest_amd64.deb</span><br><span class="line"><span class="comment"># 安裝套件</span></span><br><span class="line">$ sudo dpkg -i minikube_latest_amd64.deb</span><br><span class="line"></span><br><span class="line">Selecting previously unselected package minikube.</span><br><span class="line">(Reading database ... 71806 files and directories currently installed.)</span><br><span class="line">Preparing to unpack minikube_latest_amd64.deb ...</span><br><span class="line">Unpacking minikube (1.22.0-0) ...</span><br><span class="line">Setting up minikube (1.22.0-0) ...</span><br></pre></td></tr></table></figure>

<h3 id="查看版本-1"><a href="#查看版本-1" class="headerlink" title="查看版本"></a>查看版本</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ minikube version</span><br><span class="line"></span><br><span class="line">minikube version: v1.22.0</span><br><span class="line">commit: a03fbcf166e6f74ef224d4a63be4277d017bb62e</span><br></pre></td></tr></table></figure>

<h3 id="啟動"><a href="#啟動" class="headerlink" title="啟動"></a>啟動</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ minikube start</span><br><span class="line"></span><br><span class="line">😄  minikube v1.22.0 on Ubuntu 20.04 (vbox/amd64)</span><br><span class="line">✨  Automatically selected the docker driver. Other choices: ssh, none</span><br><span class="line">👍  Starting control plane node minikube <span class="keyword">in</span> cluster minikube</span><br><span class="line">🚜  Pulling base image ...</span><br><span class="line">💾  Downloading Kubernetes v1.21.2 preload ...</span><br><span class="line">    &gt; preloaded-images-k8s-v11-v1...: 502.14 MiB / 502.14 MiB  100.00% 7.08 MiB</span><br><span class="line">    &gt; gcr.io/k8s-minikube/kicbase...: 361.08 MiB / 361.09 MiB  100.00% 3.95 MiB</span><br><span class="line">🔥  Creating docker container (CPUs=2, Memory=2200MB) ...</span><br><span class="line">🐳  Preparing Kubernetes v1.21.2 on Docker 20.10.7 ...</span><br><span class="line">    ▪ Generating certificates and keys ...</span><br><span class="line">    ▪ Booting up control plane ...</span><br><span class="line">    ▪ Configuring RBAC rules ...</span><br><span class="line">🔎  Verifying Kubernetes components...</span><br><span class="line">    ▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5</span><br><span class="line">🌟  Enabled addons: storage-provisioner, default-storageclass</span><br><span class="line">🏄  Done! kubectl is now configured to use <span class="string">"minikube"</span> cluster and <span class="string">"default"</span> namespace by default</span><br></pre></td></tr></table></figure>

<h3 id="啟動dashboard"><a href="#啟動dashboard" class="headerlink" title="啟動dashboard"></a>啟動dashboard</h3><p>正常的kubernetes的dashboard需要另外安裝的<br>但是minikube已經自帶dashboard套件只需啟動就行了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ minikube dashboard</span><br><span class="line"></span><br><span class="line">🔌  Enabling dashboard ...</span><br><span class="line">    ▪ Using image kubernetesui/dashboard:v2.1.0</span><br><span class="line">    ▪ Using image kubernetesui/metrics-scraper:v1.0.4</span><br><span class="line">🤔  Verifying dashboard health ...</span><br><span class="line">🚀  Launching proxy ...</span><br><span class="line">🤔  Verifying proxy health ...</span><br><span class="line">🎉  Opening http://127.0.0.1:33657/api/v1/namespaces/kubernetes-dashboard/services/http:kubernetes-dashboard:/proxy/ <span class="keyword">in</span> your default browser...</span><br><span class="line">👉  http://127.0.0.1:33657/api/v1/namespaces/kubernetes-dashboard/services/http:kubernetes-dashboard:/proxy/</span><br></pre></td></tr></table></figure>

<h3 id="開啟proxy"><a href="#開啟proxy" class="headerlink" title="開啟proxy"></a>開啟proxy</h3><p>一般來說啟動dashboard就會自動幫你開啟瀏覽器到dashboard的頁面中了<br>但是筆者的環境是裝在virtualbox的ubuntu-server底下<br>所以就需要另外提供外連的方式了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ kubectl proxy --address=<span class="string">'0.0.0.0'</span> --port=8001 --accept-hosts=<span class="string">'^*$'</span></span><br><span class="line"></span><br><span class="line">Starting to serve on [::]:8001</span><br></pre></td></tr></table></figure>

<p>這樣就大功告成啦!</p>
<img src="/2021/08/21/minikube-install/minikube.png" class="">

<h2 id="補充"><a href="#補充" class="headerlink" title="補充"></a>補充</h2><p>安裝過程設定如果出了什麼問題想要重置<br>我們可刪掉整個minikube設置重來</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 刪除minikube環境</span></span><br><span class="line">$ minikube delete &amp;&amp; rm -rf ~/.minikube</span><br><span class="line"><span class="comment"># 重啟minikube</span></span><br><span class="line">$ minikube start</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>kubernetes</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>ubuntu</tag>
        <tag>docker</tag>
        <tag>minikube</tag>
        <tag>kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu安裝Docker</title>
    <url>/2021/08/21/docker-install/</url>
    <content><![CDATA[<p>docker是目前容器化部屬最火紅的方案<br>廢話不多說現在趕快來看看怎麼安裝吧!</p>
<h2 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt update</span><br><span class="line">$ sudo install docker.io</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看版本</span></span><br><span class="line">$ docker version</span><br><span class="line">Client:</span><br><span class="line"> Version:           20.10.7</span><br><span class="line"> API version:       1.41</span><br><span class="line"> Go version:        go1.13.8</span><br><span class="line"> Git commit:        20.10.7-0ubuntu1~20.04.1</span><br><span class="line"> Built:             Wed Aug  4 22:52:25 2021</span><br><span class="line"> OS/Arch:           linux/amd64</span><br><span class="line"> Context:           default</span><br><span class="line"> Experimental:      <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">Server:</span><br><span class="line"> Engine:</span><br><span class="line">  Version:          20.10.7</span><br><span class="line">  API version:      1.41 (minimum version 1.12)</span><br><span class="line">  Go version:       go1.13.8</span><br><span class="line">  Git commit:       20.10.7-0ubuntu1~20.04.1</span><br><span class="line">  Built:            Wed Aug  4 19:07:47 2021</span><br><span class="line">  OS/Arch:          linux/amd64</span><br><span class="line">  Experimental:     <span class="literal">false</span></span><br><span class="line"> containerd:</span><br><span class="line">  Version:          1.5.2-0ubuntu1~20.04.2</span><br><span class="line">  GitCommit:</span><br><span class="line"> runc:</span><br><span class="line">  Version:          1.0.0~rc95-0ubuntu1~20.04.2</span><br><span class="line">  GitCommit:</span><br><span class="line"> docker-init:</span><br><span class="line">  Version:          0.19.0</span><br><span class="line">  GitCommit:</span><br></pre></td></tr></table></figure>

<h2 id="測試"><a href="#測試" class="headerlink" title="測試"></a>測試</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker run hello-world</span><br><span class="line"></span><br><span class="line">Hello from Docker!</span><br><span class="line">This message shows that your installation appears to be working correctly.</span><br><span class="line"></span><br><span class="line">To generate this message, Docker took the following steps:</span><br><span class="line"> 1. The Docker client contacted the Docker daemon.</span><br><span class="line"> 2. The Docker daemon pulled the <span class="string">"hello-world"</span> image from the Docker Hub.</span><br><span class="line">    (amd64)</span><br><span class="line"> 3. The Docker daemon created a new container from that image <span class="built_in">which</span> runs the</span><br><span class="line">    executable that produces the output you are currently reading.</span><br><span class="line"> 4. The Docker daemon streamed that output to the Docker client, <span class="built_in">which</span> sent it</span><br><span class="line">    to your terminal.</span><br><span class="line"></span><br><span class="line">To try something more ambitious, you can run an Ubuntu container with:</span><br><span class="line"> $ docker run -it ubuntu bash</span><br><span class="line"></span><br><span class="line">Share images, automate workflows, and more with a free Docker ID:</span><br><span class="line"> https://hub.docker.com/</span><br><span class="line"></span><br><span class="line">For more examples and ideas, visit:</span><br><span class="line"> https://docs.docker.com/get-started/</span><br></pre></td></tr></table></figure>

<h2 id="補充"><a href="#補充" class="headerlink" title="補充"></a>補充</h2><p>如果我們希望docker可以用特定的user執行的話可以參照以下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 將用戶加入docker群組中</span></span><br><span class="line">$ sudo usermod -aG docker <span class="variable">$USER</span></span><br><span class="line"><span class="comment"># 套用新的群組設定</span></span><br><span class="line">$ sudo newgrp docker</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>ubuntu</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>安裝Nginx</title>
    <url>/2020/11/14/nginx-install/</url>
    <content><![CDATA[<h2 id="安裝Nginx"><a href="#安裝Nginx" class="headerlink" title="安裝Nginx"></a>安裝Nginx</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ apt install nginx</span><br></pre></td></tr></table></figure>

<h2 id="config路徑"><a href="#config路徑" class="headerlink" title="config路徑"></a>config路徑</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查詢config路徑</span></span><br><span class="line">$ nginx -t</span><br><span class="line"><span class="comment"># ubuntu預設會在/etc/nginx底下</span></span><br></pre></td></tr></table></figure>

<h2 id="基本指令"><a href="#基本指令" class="headerlink" title="基本指令"></a>基本指令</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 啟動nginx</span></span><br><span class="line">$ systemctl start nginx</span><br><span class="line"><span class="comment"># 停止ngnix</span></span><br><span class="line">$ systemctl stop nginx</span><br><span class="line"><span class="comment"># 重載ngnix</span></span><br><span class="line">$ systemctl reload nginx</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="頁面測試-http-127-0-0-1"><a href="#頁面測試-http-127-0-0-1" class="headerlink" title="頁面測試 http://127.0.0.1"></a>頁面測試 <a href="http://127.0.0.1" target="_blank" rel="noopener">http://127.0.0.1</a></h2><img src="/2020/11/14/nginx-install/nginx1.png" class="" title="安裝完成">

<p>以下內容偏向心得筆記</p>
<h2 id="設定proxy"><a href="#設定proxy" class="headerlink" title="設定proxy"></a>設定proxy</h2><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">	<span class="comment"># 監聽 80 port</span></span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">listen</span> [::]:<span class="number">80</span>;</span><br><span class="line">    <span class="comment"># 設置進來的domainname或ip</span></span><br><span class="line">    <span class="attribute">server_name</span> localhost;</span><br><span class="line">    <span class="comment"># 設置routing</span></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">    	<span class="comment"># 轉發</span></span><br><span class="line">        <span class="attribute">proxy_pass</span> http://localhost:9001;</span><br><span class="line">        <span class="comment"># 轉發request的header內容</span></span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$http_x_forwarded_proto</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="設定loadbalance"><a href="#設定loadbalance" class="headerlink" title="設定loadbalance"></a>設定loadbalance</h2><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 設置輪巡節點</span></span><br><span class="line"><span class="attribute">upstream</span> servicemapping &#123;</span><br><span class="line">    <span class="attribute">server</span> <span class="number">127.0.0.1:9001</span> weight=<span class="number">3</span>;</span><br><span class="line">    <span class="attribute">server</span> <span class="number">127.0.0.1:9002</span> weight=<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">	<span class="comment"># 監聽 80 port</span></span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">listen</span> [::]:<span class="number">80</span>;</span><br><span class="line">    <span class="comment"># 設置進來的domainname或ip</span></span><br><span class="line">    <span class="attribute">server_name</span> my.app.test;</span><br><span class="line">	<span class="comment"># 設置routing</span></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">    	<span class="comment"># 轉發</span></span><br><span class="line">        <span class="attribute">proxy_pass</span> http://servicemapping;</span><br><span class="line">        <span class="comment"># 轉發request的header內容</span></span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span> X-Forwarded-Proto <span class="variable">$http_x_forwarded_proto</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="兩次請求結果"><a href="#兩次請求結果" class="headerlink" title="兩次請求結果"></a>兩次請求結果</h2><img src="/2020/11/14/nginx-install/nginx2.png" class="">
<img src="/2020/11/14/nginx-install/nginx3.png" class="">]]></content>
      <categories>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu安裝Codimd</title>
    <url>/2020/07/05/codimd-install/</url>
    <content><![CDATA[<h2 id="相關介紹"><a href="#相關介紹" class="headerlink" title="相關介紹"></a>相關介紹</h2><p><a href="https://github.com/hackmdio/codimd" target="_blank" rel="noopener">github</a><br><a href="https://hackmd.io/c/codimd-documentation/%2Fs%2Fcodimd-manual-deployment" target="_blank" rel="noopener">manual-deployment</a></p>
<h2 id="安裝nodejs"><a href="#安裝nodejs" class="headerlink" title="安裝nodejs"></a>安裝nodejs</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安裝版本庫</span></span><br><span class="line">$ curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -</span><br><span class="line"><span class="comment"># 安裝nodejs</span></span><br><span class="line">$ apt install -y nodejs</span><br><span class="line"><span class="comment"># 查看nodejs版本</span></span><br><span class="line">$ node -v</span><br><span class="line"><span class="comment"># 查看npm版本</span></span><br><span class="line">$ npm -v</span><br></pre></td></tr></table></figure>

<h2 id="安裝相關依賴"><a href="#安裝相關依賴" class="headerlink" title="安裝相關依賴"></a>安裝相關依賴</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install -g yarn</span><br><span class="line">$ npm install -g node-gyp</span><br><span class="line">$ npm install -g sqlite3</span><br><span class="line">$ npm install -g webpack</span><br></pre></td></tr></table></figure>

<h2 id="安裝codimd"><a href="#安裝codimd" class="headerlink" title="安裝codimd"></a>安裝codimd</h2><h3 id="設置環境變數"><a href="#設置環境變數" class="headerlink" title="設置環境變數"></a>設置環境變數</h3><p>打開/etc/profile這個檔案並且在末尾加入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:NODE_ENV=production</span><br></pre></td></tr></table></figure>

<h3 id="抓取項目-opt"><a href="#抓取項目-opt" class="headerlink" title="抓取項目(/opt)"></a>抓取項目(/opt)</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/hackmdio/codimd.git</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="初始化配置"><a href="#初始化配置" class="headerlink" title="初始化配置"></a>初始化配置</h3><h4 id="先修改安裝配置bin-setup"><a href="#先修改安裝配置bin-setup" class="headerlink" title="先修改安裝配置bin/setup"></a>先修改安裝配置bin/setup</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">	.</span><br><span class="line">	.</span><br><span class="line">	.</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"install packages"</span></span><br><span class="line">npm install --production --unsafe-perm=<span class="literal">true</span> --allow-root</span><br><span class="line"></span><br><span class="line">	.</span><br><span class="line">	.</span><br><span class="line">	.</span><br></pre></td></tr></table></figure>
<h4 id="執行安裝配置"><a href="#執行安裝配置" class="headerlink" title="執行安裝配置"></a>執行安裝配置</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo bash bin/setup</span><br></pre></td></tr></table></figure>

<h3 id="修改環境配置"><a href="#修改環境配置" class="headerlink" title="修改環境配置"></a>修改環境配置</h3><p>編輯config.json</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">	.</span><br><span class="line">	.</span><br><span class="line">	.</span><br><span class="line"></span><br><span class="line">    &quot;production&quot;: &#123;</span><br><span class="line">        &quot;host&quot;: &quot;0.0.0.0&quot;, // 設置來源</span><br><span class="line">        &quot;port&quot;: 3000, // 設置port</span><br><span class="line">        &quot;loglevel&quot;: &quot;info&quot;,</span><br><span class="line">        &quot;hsts&quot;: &#123;</span><br><span class="line">            &quot;enable&quot;: true,</span><br><span class="line">            &quot;maxAgeSeconds&quot;: 31536000,</span><br><span class="line">            &quot;includeSubdomains&quot;: true,</span><br><span class="line">            &quot;preload&quot;: true</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;csp&quot;: &#123;</span><br><span class="line">            &quot;enable&quot;: true,</span><br><span class="line">            &quot;directives&quot;: &#123;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;upgradeInsecureRequests&quot;: &quot;auto&quot;,</span><br><span class="line">            &quot;addDefaults&quot;: true,</span><br><span class="line">            &quot;addDisqus&quot;: true,</span><br><span class="line">            &quot;addGoogleAnalytics&quot;: true</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;db&quot;: &#123;</span><br><span class="line">            &quot;username&quot;: &quot;帳號&quot;, // 設置db帳號</span><br><span class="line">            &quot;password&quot;: &quot;密碼&quot;, // 設置db密碼</span><br><span class="line">            &quot;database&quot;: &quot;資料庫&quot;, // 設置資料庫名稱</span><br><span class="line">            &quot;host&quot;: &quot;localhost&quot;,</span><br><span class="line">            &quot;port&quot;: &quot;3306&quot;,</span><br><span class="line">            &quot;dialect&quot;: &quot;mysql&quot;</span><br><span class="line">        &#125;</span><br><span class="line">        &quot;linkifyHeaderStyle&quot;: &quot;gfm&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>編輯.sequelizerc</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var path = require(&apos;path&apos;);</span><br><span class="line"></span><br><span class="line">module.exports = &#123;</span><br><span class="line">    &apos;config&apos;:          path.resolve(&apos;config.json&apos;),</span><br><span class="line">    &apos;migrations-path&apos;: path.resolve(&apos;lib&apos;, &apos;migrations&apos;),</span><br><span class="line">    &apos;models-path&apos;:     path.resolve(&apos;lib&apos;, &apos;models&apos;),</span><br><span class="line">    &apos;url&apos;:             &apos;mysql://&#123;db帳號&#125;:&#123;db密碼&#125;@localhost:3306/codimd&apos;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>編輯lib/config/default.js</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line"></span><br><span class="line"> allowAnonymous: false, // 關閉匿名登入</span><br><span class="line"> allowAnonymousEdits: false, // 關閉匿名編輯</span><br><span class="line"></span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line"></span><br><span class="line"> email: true, // 開啟email使用</span><br><span class="line"> allowEmailRegister: true, // 允許email註冊</span><br><span class="line"></span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br></pre></td></tr></table></figure>

<h2 id="啟動"><a href="#啟動" class="headerlink" title="啟動"></a>啟動</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm run build // 重新編輯前端頁面</span><br><span class="line">$ node app.js // 啟動服務</span><br></pre></td></tr></table></figure>

<img src="/2020/07/05/codimd-install/codimd1.png" class="">
<img src="/2020/07/05/codimd-install/codimd2.png" class="">
<img src="/2020/07/05/codimd-install/codimd3.png" class="">]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>ubuntu</tag>
        <tag>codimd</tag>
        <tag>hackmd</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu安裝RabbitMQ</title>
    <url>/2020/05/10/rabbitmq-install/</url>
    <content><![CDATA[<h2 id="安裝erlang"><a href="#安裝erlang" class="headerlink" title="安裝erlang"></a>安裝erlang</h2><p>rabbitmq需要依靠erlang驅動，<br>所以我們需要先安裝erlang</p>
<p>使用<a href="https://www.erlang-solutions.com/resources/download.html#tabs-debian" target="_blank" rel="noopener">repository</a>安裝:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wget https://packages.erlang-solutions.com/erlang-solutions_2.0_all.deb</span><br><span class="line">$ sudo dpkg -i erlang-solutions_2.0_all.deb</span><br><span class="line">$ sudo apt install esl-erlang</span><br></pre></td></tr></table></figure>

<h2 id="安裝rabbitmq"><a href="#安裝rabbitmq" class="headerlink" title="安裝rabbitmq"></a>安裝rabbitmq</h2><p>github<a href="https://www.rabbitmq.com/install-debian.html#manual-installation" target="_blank" rel="noopener">手動</a>安裝:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wget https://github.com/rabbitmq/rabbitmq-server/releases/download/v3.8.3/rabbitmq-server_3.8.3-1_all.deb</span><br><span class="line">$ sudo dpkg -i rabbitmq-server_3.8.3-1_all.deb</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>如果安裝過程有問題可以試著apt指令修復</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt --fix-broken install</span><br></pre></td></tr></table></figure>

<h2 id="修改rabbitmq管理插件"><a href="#修改rabbitmq管理插件" class="headerlink" title="修改rabbitmq管理插件"></a>修改rabbitmq管理插件</h2><p>安裝完rabbitmq之後,<br>我們會需要一個可以管理的工具,<br>rabbitmq很好的提供web的管理工具</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ rabbitmq-plugins <span class="built_in">enable</span> rabbitmq_management</span><br></pre></td></tr></table></figure>

<p>安裝完畢後重啟服務<br>接著在瀏覽器輸入<a href="http://localhost:15672/" target="_blank" rel="noopener">http://localhost:15672</a></p>
<img src="/2020/05/10/rabbitmq-install/rabbitmq1.png" class="">

<h2 id="修改rabbitmq設置"><a href="#修改rabbitmq設置" class="headerlink" title="修改rabbitmq設置"></a>修改rabbitmq設置</h2><p>因為rabbitmq預設guest帳號只給本機登入，<br>如果需要開放外部登入就要修改設置</p>
<p>打開/etc/rabbitmq/rabbitmq.config，<br>加入以下設置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">	&#123;</span><br><span class="line">		rabbit,</span><br><span class="line">		[&#123;loopback_users, [<span class="string">"guest"</span>]&#125;]</span><br><span class="line">	&#125;</span><br><span class="line">].</span><br></pre></td></tr></table></figure>

<p>重啟服務之後我們就可以用guset帳號登入了</p>
<img src="/2020/05/10/rabbitmq-install/rabbitmq2.png" class="">]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>ubuntu</tag>
        <tag>rabbitmq</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows Terminal主題配置</title>
    <url>/2020/03/09/windowsterminal-scheme/</url>
    <content><![CDATA[<img src="/2020/03/09/windowsterminal-scheme/terminal1.png" class="">

<a id="more"></a>

<p>打開WindowsTerminal的Setting設置主題</p>
<p><a href="https://draculatheme.com/windows-terminal/" target="_blank" rel="noopener">Dracula主題</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="string">"profiles"</span>:</span><br><span class="line">[</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="string">"name"</span>: <span class="string">"Windows PowerShell"</span>,</span><br><span class="line">		<span class="string">"commandline"</span>: <span class="string">"powershell.exe"</span>,</span><br><span class="line">		<span class="string">"cursorColor"</span> : <span class="string">"#657B83"</span>, // 光標顏色</span><br><span class="line">		<span class="string">"cursorShape"</span> : <span class="string">"vintage"</span>, // 光標類型</span><br><span class="line">		<span class="string">"colorScheme"</span> : <span class="string">"Dracula"</span>, // 配置主題</span><br><span class="line">		<span class="string">"fontFace"</span> : <span class="string">"DejaVu Sans Mono for Powerline"</span>, // 字型</span><br><span class="line">		<span class="string">"fontSize"</span> : 12, // 字型大小</span><br><span class="line">		<span class="string">"hidden"</span>: <span class="literal">false</span></span><br><span class="line">	&#125;,</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="string">"name"</span>: <span class="string">"cmd"</span>,</span><br><span class="line">		<span class="string">"commandline"</span>: <span class="string">"cmd.exe"</span>,</span><br><span class="line">		<span class="string">"cursorColor"</span> : <span class="string">"#657B83"</span>,</span><br><span class="line">		<span class="string">"cursorShape"</span> : <span class="string">"vintage"</span>,</span><br><span class="line">		<span class="string">"colorScheme"</span> : <span class="string">"Dracula"</span>,</span><br><span class="line">		<span class="string">"fontFace"</span> : <span class="string">"DejaVu Sans Mono for Powerline"</span>,</span><br><span class="line">		<span class="string">"fontSize"</span> : 12,</span><br><span class="line">		<span class="string">"hidden"</span>: <span class="literal">false</span></span><br><span class="line">	&#125;</span><br><span class="line">],</span><br><span class="line"></span><br><span class="line"><span class="string">"schemes"</span>:</span><br><span class="line">[</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="string">"name"</span> : <span class="string">"Dracula"</span>,</span><br><span class="line">		<span class="string">"background"</span> : <span class="string">"#282A36"</span>,</span><br><span class="line">		<span class="string">"black"</span> : <span class="string">"#21222C"</span>,</span><br><span class="line">		<span class="string">"blue"</span> : <span class="string">"#BD93F9"</span>,</span><br><span class="line">		<span class="string">"brightBlack"</span> : <span class="string">"#6272A4"</span>,</span><br><span class="line">		<span class="string">"brightBlue"</span> : <span class="string">"#D6ACFF"</span>,</span><br><span class="line">		<span class="string">"brightCyan"</span> : <span class="string">"#A4FFFF"</span>,</span><br><span class="line">		<span class="string">"brightGreen"</span> : <span class="string">"#69FF94"</span>,</span><br><span class="line">		<span class="string">"brightPurple"</span> : <span class="string">"#FF92DF"</span>,</span><br><span class="line">		<span class="string">"brightRed"</span> : <span class="string">"#FF6E6E"</span>,</span><br><span class="line">		<span class="string">"brightWhite"</span> : <span class="string">"#FFFFFF"</span>,</span><br><span class="line">		<span class="string">"brightYellow"</span> : <span class="string">"#FFFFA5"</span>,</span><br><span class="line">		<span class="string">"cyan"</span> : <span class="string">"#8BE9FD"</span>,</span><br><span class="line">		<span class="string">"foreground"</span> : <span class="string">"#F8F8F2"</span>,</span><br><span class="line">		<span class="string">"green"</span> : <span class="string">"#50FA7B"</span>,</span><br><span class="line">		<span class="string">"purple"</span> : <span class="string">"#FF79C6"</span>,</span><br><span class="line">		<span class="string">"red"</span> : <span class="string">"#FF5555"</span>,</span><br><span class="line">		<span class="string">"white"</span> : <span class="string">"#F8F8F2"</span>,</span><br><span class="line">		<span class="string">"yellow"</span> : <span class="string">"#F1FA8C"</span></span><br><span class="line">	&#125;</span><br><span class="line">],</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>windows</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>powershell</tag>
        <tag>terminal</tag>
      </tags>
  </entry>
  <entry>
    <title>美化PowerShell - oh-my-posh</title>
    <url>/2020/03/08/powershell-improve/</url>
    <content><![CDATA[<img src="/2020/03/08/powershell-improve/powershell1.png" class="">

<p>厭倦windows預設的powershell主題了嗎?<br>現在開始來改造它吧!!!</p>
<a id="more"></a>

<h2 id="安裝套件"><a href="#安裝套件" class="headerlink" title="安裝套件"></a>安裝套件</h2><p>首先打開powershell：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安裝posh-git套件</span></span><br><span class="line">Install-Module posh-git -Scope CurrentUser</span><br><span class="line"><span class="comment"># 安裝oh-my-posh套件</span></span><br><span class="line">Install-Module oh-my-posh -Scope CurrentUser</span><br></pre></td></tr></table></figure>
<p>基本上都輸入Y到底就可以安裝完成了!</p>
<h2 id="設置設定檔"><a href="#設置設定檔" class="headerlink" title="設置設定檔"></a>設置設定檔</h2><p>建立powershel啟動設定檔</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 取得設定檔位置</span></span><br><span class="line"><span class="variable">$profile</span></span><br><span class="line"><span class="comment"># 得到設定檔位置</span></span><br><span class="line">~\Documents\WindowsPowerShell\Microsoft.PowerShell_profile.ps1</span><br></pre></td></tr></table></figure>
<p>打開Microsoft.PowerShell_profile.ps1設定檔，如果沒有請自行建立</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用UTF-8編碼</span></span><br><span class="line">chcp 65001</span><br><span class="line"><span class="comment"># 引用posh-git</span></span><br><span class="line">Import-Module posh-git</span><br><span class="line"><span class="comment"># 引用oh-my-posh</span></span><br><span class="line">Import-Module oh-my-posh</span><br><span class="line"><span class="comment"># 設置Agnoster主題</span></span><br><span class="line">Set-Theme Agnoster</span><br></pre></td></tr></table></figure>

<h2 id="安裝powerline字型"><a href="#安裝powerline字型" class="headerlink" title="安裝powerline字型"></a>安裝powerline字型</h2><p>由於windows預設的字型無法支援oh-my-posh<br>所以我們需要另外安裝配合的字型檔</p>
<p><a href="https://github.com/powerline/fonts" target="_blank" rel="noopener">powerline字型</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># clone項目</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/powerline/fonts.git</span><br><span class="line"><span class="comment"># 執行install.ps1進行安裝</span></span><br><span class="line">.\install.ps1</span><br></pre></td></tr></table></figure>

<p>調整powershell內容</p>
<img src="/2020/03/08/powershell-improve/powershell2.png" class="">

<p>請選擇有powerline的字型</p>
<img src="/2020/03/08/powershell-improve/powershell3.png" class="">

<h2 id="配置顏色主題"><a href="#配置顏色主題" class="headerlink" title="配置顏色主題"></a>配置顏色主題</h2><p>最後我們要用scoop來安裝colortool主題工具</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 保證允許腳本執行</span></span><br><span class="line"><span class="built_in">set</span>-executionpolicy remotesigned -scope currentuser</span><br><span class="line"><span class="comment"># 安裝scoop</span></span><br><span class="line">iex (new-object net.webclient).downloadstring(<span class="string">'https://get.scoop.sh'</span>)</span><br><span class="line"><span class="comment"># 安裝colortool</span></span><br><span class="line">scoop install colortool</span><br></pre></td></tr></table></figure>
<p>接著我們就要來配置顏色主題</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 取得預設主題列表</span></span><br><span class="line">colortool -s</span><br><span class="line"><span class="comment"># 預設主題</span></span><br><span class="line"><span class="comment"># campbell-legacy.ini</span></span><br><span class="line"><span class="comment"># campbell.ini</span></span><br><span class="line"><span class="comment"># cmd-legacy.ini</span></span><br><span class="line"><span class="comment"># OneHalfDark.itermcolors</span></span><br><span class="line"><span class="comment"># OneHalfLight.itermcolors</span></span><br><span class="line"><span class="comment"># solarized_dark.itermcolors</span></span><br><span class="line"><span class="comment"># solarized_light.itermcolors</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 臨時查看主題樣式</span></span><br><span class="line">colortool &lt;主題名稱&gt;</span><br><span class="line"><span class="comment"># 設置預設主題樣式</span></span><br><span class="line">colortool -d &lt;主題名稱&gt;</span><br></pre></td></tr></table></figure>

<p>選定主題</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 設置OneHalfDark主題</span></span><br><span class="line">colortool OneHalfDark.itermcolors</span><br></pre></td></tr></table></figure>

<img src="/2020/03/08/powershell-improve/powershell4.png" class="">

<p>這樣我們就大功告成拉!!</p>
]]></content>
      <categories>
        <category>windows</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>powershell</tag>
        <tag>terminal</tag>
      </tags>
  </entry>
  <entry>
    <title>TelegramBot申請與開發</title>
    <url>/2019/11/09/telegrambot-install/</url>
    <content><![CDATA[<p>telegrambot的使用與開發相較於linebot來說是好上手很多<br>接下來就是介紹開發與使用方式</p>
<a id="more"></a>

<h2 id="telegrambot-申請"><a href="#telegrambot-申請" class="headerlink" title="telegrambot 申請"></a>telegrambot 申請</h2><p>在telegram search bar上搜尋@BotFather<br>然後完成附圖的流程</p>
<img src="/2019/11/09/telegrambot-install/telegram1.png" class="">

<h2 id="telegrambot-API使用"><a href="#telegrambot-API使用" class="headerlink" title="telegrambot API使用"></a>telegrambot API使用</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://api.telegram.org/bot&#123;token&#125;/getUpdates</span><br><span class="line"><span class="comment"># 取得chatid</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"ok"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">"result"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"update_id"</span>: 123456789,</span><br><span class="line">            <span class="string">"message"</span>: &#123;</span><br><span class="line">                <span class="string">"message_id"</span>: 99,</span><br><span class="line">                <span class="string">"from"</span>: &#123;</span><br><span class="line">                    <span class="string">"id"</span>: 123456789,</span><br><span class="line">                    <span class="string">"is_bot"</span>: <span class="literal">false</span>,</span><br><span class="line">                    <span class="string">"first_name"</span>: <span class="string">""</span>,</span><br><span class="line">                    <span class="string">"last_name"</span>: <span class="string">""</span>,</span><br><span class="line">                    <span class="string">"username"</span>: <span class="string">""</span>,</span><br><span class="line">                    <span class="string">"language_code"</span>: <span class="string">""</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">"chat"</span>: &#123;</span><br><span class="line">                    <span class="string">"id"</span>: -314847207,</span><br><span class="line">                    <span class="string">"title"</span>: <span class="string">"this is a title"</span>,</span><br><span class="line">                    <span class="string">"type"</span>: <span class="string">"group"</span>,</span><br><span class="line">                    <span class="string">"all_members_are_administrators"</span>: <span class="literal">true</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">"date"</span>: 1573288754,</span><br><span class="line">                <span class="string">"text"</span>: <span class="string">"messsage"</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://api.telegram.org/bot&#123;token&#125;/sendMessage?chat_id=&#123;channelid&#125;&amp;text=&#123;message&#125;</span><br><span class="line"><span class="comment"># 嘗試發送訊息</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"ok"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">"result"</span>: &#123;</span><br><span class="line">        <span class="string">"message_id"</span>: 99,</span><br><span class="line">        <span class="string">"from"</span>: &#123;</span><br><span class="line">            <span class="string">"id"</span>: 123456789,</span><br><span class="line">            <span class="string">"is_bot"</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="string">"first_name"</span>: <span class="string">""</span>,</span><br><span class="line">            <span class="string">"username"</span>: <span class="string">""</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"chat"</span>: &#123;</span><br><span class="line">            <span class="string">"id"</span>: 123456789,</span><br><span class="line">            <span class="string">"title"</span>: <span class="string">"this is a title"</span>,</span><br><span class="line">            <span class="string">"type"</span>: <span class="string">"group"</span>,</span><br><span class="line">            <span class="string">"all_members_are_administrators"</span>: <span class="literal">true</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"date"</span>: 1573289062,</span><br><span class="line">        <span class="string">"text"</span>: <span class="string">"messsage"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>更多API參考 <a href="https://core.telegram.org/bots/api" target="_blank" rel="noopener">Telegram Bot API</a></p>
<h2 id="telegrambot-JAVASDK使用"><a href="#telegrambot-JAVASDK使用" class="headerlink" title="telegrambot JAVASDK使用"></a>telegrambot JAVASDK使用</h2><p>maven引用</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;org.telegram&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;telegrambots&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;4.4.0.1&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>

<p>繼承TelegramLongPollingBot</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getBotUsername</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="string">"userName"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getBotToken</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="string">"token"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onUpdateReceived</span><span class="params">(Update update)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (update.hasMessage() &amp;&amp; update.getMessage().hasText())</span><br><span class="line">	&#123;</span><br><span class="line">		User user = update.getMessage().getFrom();</span><br><span class="line">		String rcvMessage = update.getMessage().getText();</span><br><span class="line">		String source = String.format(<span class="string">"收到來自[%s%s]的訊息內容=%s"</span>, user.getFirstName(), user.getLastName(), rcvMessage);</span><br><span class="line">		SendMessage message = <span class="keyword">new</span> SendMessage().setChatId(update.getMessage().getChatId()).setText(source);</span><br><span class="line">		<span class="keyword">try</span></span><br><span class="line">		&#123;</span><br><span class="line">			execute(message);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">catch</span> (Exception e)</span><br><span class="line">		&#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>BotClass使用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	ApiContextInitializer.init();</span><br><span class="line">	TelegramBotsApi botsApi = <span class="keyword">new</span> TelegramBotsApi();</span><br><span class="line">	<span class="keyword">try</span></span><br><span class="line">	&#123;</span><br><span class="line">		botsApi.registerBot(<span class="keyword">new</span> Telegram());</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">catch</span> (Exception e)</span><br><span class="line">	&#123;</span><br><span class="line">		e.printStackTrace();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>最後完成範例</p>
<img src="/2019/11/09/telegrambot-install/telegram2.png" class="">]]></content>
      <categories>
        <category>telegram</category>
      </categories>
      <tags>
        <tag>telegram</tag>
        <tag>bot</tag>
      </tags>
  </entry>
  <entry>
    <title>Elasticsearch+Kibana+Logstash環境安裝</title>
    <url>/2019/10/20/elk-install/</url>
    <content><![CDATA[<p>在分散式系統底下我們需要查詢log紀錄<br>總不可能需要一台一台機器上去查看紀錄<br>這個時候我們就會需要有個服務幫我們達成這個目的</p>
<p>elasticsearch就很適合來幫我們完成這個任務</p>
<p><a href="https://www.elastic.co/cn/" target="_blank" rel="noopener">elasticsearch官網</a></p>
<a id="more"></a>

<h2 id="安裝JDK"><a href="#安裝JDK" class="headerlink" title="安裝JDK"></a>安裝JDK</h2><a href="/2019/03/10/java-installopenjdk/" title="請參考之前的文章">請參考之前的文章</a>

<h2 id="elasticsearch佈署"><a href="#elasticsearch佈署" class="headerlink" title="elasticsearch佈署"></a>elasticsearch佈署</h2><p>elasticsearch是一個分散式的儲存系統，屬於NoSQL資料庫的一種<br><a href="https://www.elastic.co/cn/products/elasticsearch" target="_blank" rel="noopener">elasticsearch介紹</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#下載安裝檔</span></span><br><span class="line">$ wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.4.0-amd64.deb</span><br><span class="line"><span class="comment">#下載驗證檔</span></span><br><span class="line">$ wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.4.0-amd64.deb.sha512</span><br><span class="line"><span class="comment">#檢查檔案</span></span><br><span class="line">$ shasum -a 512 -c elasticsearch-7.4.0-amd64.deb.sha512</span><br><span class="line"><span class="comment">#執行安裝</span></span><br><span class="line">$ sudo dpkg -i elasticsearch-7.4.0-amd64.deb</span><br></pre></td></tr></table></figure>

<h3 id="修改配置檔案"><a href="#修改配置檔案" class="headerlink" title="修改配置檔案"></a>修改配置檔案</h3><p>首先我們要先修改elasticsearch記憶體的使用量<br>修改elasticsearch使用的記憶體，設定為主機的50%記憶體</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#/etc/elasticsearch/jvm.options</span></span><br><span class="line">-Xms1g  <span class="comment"># Xms 記憶體使用下限</span></span><br><span class="line">-Xmx1g  <span class="comment"># Xmx 記憶體使用上限</span></span><br></pre></td></tr></table></figure>

<h3 id="修改設定檔"><a href="#修改設定檔" class="headerlink" title="修改設定檔"></a>修改設定檔</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#/etc/elasticsearch/elasticsearch.yml</span></span><br><span class="line"><span class="comment">#設置服務名稱</span></span><br><span class="line">cluster.name: elk_elasticsearch</span><br><span class="line"><span class="comment">#設置節點名稱</span></span><br><span class="line">node.name: elk_node</span><br><span class="line"><span class="comment">#設置為主要結點</span></span><br><span class="line">node.master: <span class="literal">true</span></span><br><span class="line"><span class="comment">#允許節點儲存數據</span></span><br><span class="line">node.data: <span class="literal">true</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">path.data: /var/lib/elasticsearch</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">path.logs: /var/<span class="built_in">log</span>/elasticsearch</span><br><span class="line"><span class="comment">#綁定來源</span></span><br><span class="line">network.bind_host: 0.0.0.0</span><br><span class="line"><span class="comment">#綁定對外服務端口</span></span><br><span class="line">http.port: 9200</span><br><span class="line"><span class="comment">#綁定節點通信端口</span></span><br><span class="line">transport.tcp.port: 9300</span><br><span class="line"><span class="comment">#啟用資料壓縮</span></span><br><span class="line">transport.tcp.compress: <span class="literal">true</span></span><br><span class="line"><span class="comment">#集群發現節點列表</span></span><br><span class="line">discovery.seed_hosts: [<span class="string">"127.0.0.1:9300"</span>]</span><br><span class="line"><span class="comment">#設置主要節點列表</span></span><br><span class="line">cluster.initial_master_nodes: [<span class="string">"127.0.0.1"</span>]</span><br></pre></td></tr></table></figure>

<h3 id="測試"><a href="#測試" class="headerlink" title="測試"></a>測試</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#啟動服務</span></span><br><span class="line">$ service elasticsearch start</span><br><span class="line"><span class="comment">#測試</span></span><br><span class="line">$ curl http://127.0.0.1:9200</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"name"</span> : <span class="string">"elk_node"</span>,</span><br><span class="line">  <span class="string">"cluster_name"</span> : <span class="string">"elk_service"</span>,</span><br><span class="line">  <span class="string">"cluster_uuid"</span> : <span class="string">"SRb6b1RaTaewA_OK2C7fMA"</span>,</span><br><span class="line">  <span class="string">"version"</span> : &#123;</span><br><span class="line">    <span class="string">"number"</span> : <span class="string">"7.4.0"</span>,</span><br><span class="line">    <span class="string">"build_flavor"</span> : <span class="string">"default"</span>,</span><br><span class="line">    <span class="string">"build_type"</span> : <span class="string">"deb"</span>,</span><br><span class="line">    <span class="string">"build_hash"</span> : <span class="string">"22e1767283e61a198cb4db791ea66e3f11ab9910"</span>,</span><br><span class="line">    <span class="string">"build_date"</span> : <span class="string">"2019-09-27T08:36:48.569419Z"</span>,</span><br><span class="line">    <span class="string">"build_snapshot"</span> : <span class="literal">false</span>,</span><br><span class="line">    <span class="string">"lucene_version"</span> : <span class="string">"8.2.0"</span>,</span><br><span class="line">    <span class="string">"minimum_wire_compatibility_version"</span> : <span class="string">"6.8.0"</span>,</span><br><span class="line">    <span class="string">"minimum_index_compatibility_version"</span> : <span class="string">"6.0.0-beta1"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"tagline"</span> : <span class="string">"You Know, for Search"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="kibana佈署"><a href="#kibana佈署" class="headerlink" title="kibana佈署"></a>kibana佈署</h2><p>kibana是elasticsearch可視化的重要元件<br><a href="https://www.elastic.co/cn/products/kibana" target="_blank" rel="noopener">kibana介紹</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#下載安裝檔</span></span><br><span class="line">$ wget https://artifacts.elastic.co/downloads/kibana/kibana-7.4.0-amd64.deb</span><br><span class="line"><span class="comment">#下載驗證檔</span></span><br><span class="line">$ wget https://artifacts.elastic.co/downloads/kibana/kibana-7.4.0-amd64.deb.sha512</span><br><span class="line"><span class="comment">#檢查檔案</span></span><br><span class="line">$ shasum -a 512 -c kibana-7.4.0-amd64.deb.sha512</span><br><span class="line"><span class="comment">#執行安裝</span></span><br><span class="line">$ sudo dpkg -i kibana-7.4.0-amd64.deb</span><br></pre></td></tr></table></figure>

<h3 id="修改配置檔案-1"><a href="#修改配置檔案-1" class="headerlink" title="修改配置檔案"></a>修改配置檔案</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#/etc/kibana/kibana.yml</span></span><br><span class="line"><span class="comment">#綁定對外服務端口</span></span><br><span class="line">server.port: 5601</span><br><span class="line"><span class="comment">#綁定來源</span></span><br><span class="line">server.host: <span class="string">"0.0.0.0"</span></span><br><span class="line"><span class="comment">#設置服務名稱</span></span><br><span class="line">server.name: <span class="string">"elk_kibana"</span></span><br><span class="line"><span class="comment">#設置elasticsearch節點列表</span></span><br><span class="line">elasticsearch.hosts: [<span class="string">"http://127.0.0.1:9200"</span>]</span><br><span class="line"><span class="comment">#設置索引</span></span><br><span class="line">kibana.index: <span class="string">".kibana"</span></span><br><span class="line">設置<span class="built_in">log</span>路徑</span><br><span class="line">logging.dest: /var/<span class="built_in">log</span>/kibana/kibana.log</span><br><span class="line">設置中文化</span><br><span class="line">i18n.locale: <span class="string">"zh-CN"</span></span><br></pre></td></tr></table></figure>

<h3 id="建立log目錄"><a href="#建立log目錄" class="headerlink" title="建立log目錄"></a>建立log目錄</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#建立目錄</span></span><br><span class="line">$ mkdir /var/<span class="built_in">log</span>/kibana</span><br><span class="line"><span class="comment">#修改使用者權限</span></span><br><span class="line">$ chown kibana:kibana /var/<span class="built_in">log</span>/kibana</span><br></pre></td></tr></table></figure>

<h3 id="測試-1"><a href="#測試-1" class="headerlink" title="測試"></a>測試</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#啟動服務</span></span><br><span class="line">$ service kibana start</span><br></pre></td></tr></table></figure>
<p><a href="http://127.0.0.1:5601" target="_blank" rel="noopener">測試網址http://127.0.0.1:5601</a></p>
<img src="/2019/10/20/elk-install/kibana1.png" class="">

<img src="/2019/10/20/elk-install/kibana2.png" class="">

<h2 id="logstash佈署"><a href="#logstash佈署" class="headerlink" title="logstash佈署"></a>logstash佈署</h2><p>logstash是負責幫我們收集各種log資料的收集器<br><a href="https://www.elastic.co/cn/products/logstash" target="_blank" rel="noopener">logstash介紹</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#下載安裝檔</span></span><br><span class="line">$ wget https://artifacts.elastic.co/downloads/logstash/logstash-7.4.0.deb</span><br><span class="line"><span class="comment">#下載驗證檔</span></span><br><span class="line">$ wget https://artifacts.elastic.co/downloads/logstash/logstash-7.4.0.deb.sha512</span><br><span class="line"><span class="comment">#檢查檔案</span></span><br><span class="line">$ shasum -a 512 -c logstash-7.4.0.deb.sha512</span><br><span class="line"><span class="comment">#執行安裝</span></span><br><span class="line">$ sudo dpkg -i logstash-7.4.0.deb</span><br></pre></td></tr></table></figure>

<h3 id="修改配置檔案-2"><a href="#修改配置檔案-2" class="headerlink" title="修改配置檔案"></a>修改配置檔案</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#/etc/logstash/conf.d/30-log.conf</span></span><br><span class="line"><span class="comment"># Sample Logstash configuration for creating a simple</span></span><br><span class="line"><span class="comment"># Beats -&gt; Logstash -&gt; Elasticsearch pipeline.</span></span><br><span class="line"></span><br><span class="line">input &#123;</span><br><span class="line">  beats &#123;</span><br><span class="line">    port =&gt; 5044</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">  elasticsearch &#123;</span><br><span class="line">    hosts =&gt; [<span class="string">"http://localhost:9200"</span>]</span><br><span class="line">    index =&gt; <span class="string">"%&#123;[@metadata][beat]&#125;-%&#123;[@metadata][version]&#125;-%&#123;+YYYY.MM.dd&#125;"</span></span><br><span class="line">    <span class="comment">#user =&gt; "elastic"</span></span><br><span class="line">    <span class="comment">#password =&gt; "changeme"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="檢查設定檔"><a href="#檢查設定檔" class="headerlink" title="檢查設定檔"></a>檢查設定檔</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ /usr/share/logstash/bin/logstash --config.test_and_exit -f /etc/logstash/conf.d/30-log.conf</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">Configuration OK</span><br></pre></td></tr></table></figure>

<h3 id="啟動服務"><a href="#啟動服務" class="headerlink" title="啟動服務"></a>啟動服務</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#啟動服務</span></span><br><span class="line">$ service logstash start</span><br></pre></td></tr></table></figure>

<p>基本上elk環境安裝就到這裡<br>之後有空再補上log server使用方式</p>
]]></content>
      <categories>
        <category>elasticsearch</category>
      </categories>
      <tags>
        <tag>elasticsearch</tag>
        <tag>kibana</tag>
        <tag>logstash</tag>
        <tag>佈署</tag>
      </tags>
  </entry>
  <entry>
    <title>PM2監控程序</title>
    <url>/2019/03/24/pm2-watch/</url>
    <content><![CDATA[<p>接下來我們要介紹如何簡單的監控我們應用</p>
<a id="more"></a>

<h2 id="測試腳本"><a href="#測試腳本" class="headerlink" title="測試腳本"></a>測試腳本</h2><p>我們寫個簡單的腳本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano test.sh</span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">test</span> is start</span><br><span class="line"><span class="keyword">for</span> v <span class="keyword">in</span> &#123;1..10&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="built_in">echo</span> this is a <span class="built_in">echo</span></span><br><span class="line">	sleep 1</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">test</span> is end</span><br></pre></td></tr></table></figure>

<h2 id="建立PM2配置"><a href="#建立PM2配置" class="headerlink" title="建立PM2配置"></a>建立PM2配置</h2><p>pm2允許我通過配置的方式來控制我們想要監控的方式，<br>所以我們先產生一個基本的範例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pm2 init</span><br></pre></td></tr></table></figure>
<p>pm2會幫我們產生一個名為ecosystem.config.js的檔案</p>
<h2 id="編輯PM2配置"><a href="#編輯PM2配置" class="headerlink" title="編輯PM2配置"></a>編輯PM2配置</h2><p>接下來要編輯這個檔案配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  apps : [&#123;</span><br><span class="line">    name: <span class="string">'mytest'</span>, // 任務名稱</span><br><span class="line">    script: <span class="string">'test.sh'</span>, // 啟動腳本</span><br><span class="line"></span><br><span class="line">    // Options reference: https://pm2.io/doc/en/runtime/reference/ecosystem-file/</span><br><span class="line">    //args: <span class="string">'one two'</span>,</span><br><span class="line">    instances: 1,</span><br><span class="line">    autorestart: <span class="literal">true</span>, // 自動重啟開關</span><br><span class="line">    max_restarts: 10, // 最大重啟次數</span><br><span class="line">    restart_delay: 30000, // 重啟時間間隔(毫秒)</span><br><span class="line">    watch: <span class="literal">false</span>,</span><br><span class="line">    max_memory_restart: <span class="string">'1G'</span>,</span><br><span class="line">    env: &#123;</span><br><span class="line">      NODE_ENV: <span class="string">'development'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    env_production: &#123;</span><br><span class="line">      NODE_ENV: <span class="string">'production'</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;],</span><br><span class="line"></span><br><span class="line">  deploy : &#123;</span><br><span class="line">    production : &#123;</span><br><span class="line">      user : <span class="string">'node'</span>,</span><br><span class="line">      host : <span class="string">'127.0.0.1'</span>,</span><br><span class="line">      ref  : <span class="string">'origin/master'</span>,</span><br><span class="line">      repo : <span class="string">'git@github.com:repo.git'</span>,</span><br><span class="line">      path : <span class="string">'/var/www/production'</span>,</span><br><span class="line">      <span class="string">'post-deploy'</span> : <span class="string">'npm install &amp;&amp; pm2 reload ecosystem.config.js --env production'</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="操作PM2任務"><a href="#操作PM2任務" class="headerlink" title="操作PM2任務"></a>操作PM2任務</h2><p>啟動任務：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pm2 start ecosystem.config.js</span><br></pre></td></tr></table></figure>
<img src="/2019/03/24/pm2-watch/pm2start.png" class="">
<p>停止任務：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pm2 stop ecosystem.config.js</span><br></pre></td></tr></table></figure>
<img src="/2019/03/24/pm2-watch/pm2stop.png" class="">
<p>觀看監控：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pm2 monit</span><br></pre></td></tr></table></figure>
<img src="/2019/03/24/pm2-watch/pm2monit.png" class="">

<p>更多的介紹請上官網查詢：<a href="https://pm2.io/doc/zh/runtime/overview/" target="_blank" rel="noopener">PM2教程</a></p>
]]></content>
      <categories>
        <category>pm2</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>pm2</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu安裝PM2</title>
    <url>/2019/03/24/pm2-install/</url>
    <content><![CDATA[<p>PM2是一套Node應用的進程管理器，<br>當程式出現錯誤或者其他狀況死掉之後，<br>這時候PM2就可以幫你的應用自動重啟，<br>當然它不止這些功能，<br>詳細可以看看官網介紹：<a href="http://pm2.keymetrics.io/" target="_blank" rel="noopener">PM2</a></p>
<a id="more"></a>

<p>接下來我們要來介紹如何在ububtu上安裝它</p>
<p>先更新套件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt update</span><br><span class="line">$ sudo apt upgrade</span><br></pre></td></tr></table></figure>

<h2 id="安裝NodeJS"><a href="#安裝NodeJS" class="headerlink" title="安裝NodeJS"></a>安裝NodeJS</h2><p>已經安裝過的朋友可以跳過這一步</p>
<p>安装NodeJS：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt install nodejs</span><br></pre></td></tr></table></figure>
<p>然後我們要安裝<a href="https://github.com/tj/n/" target="_blank" rel="noopener">n</a>來幫我們管理nodejs版本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install -g n</span><br></pre></td></tr></table></figure>

<h2 id="安裝NPM"><a href="#安裝NPM" class="headerlink" title="安裝NPM"></a>安裝NPM</h2><p>已經安裝過的朋友可以跳過這一步</p>
<p>安装NPM：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt install npm</span><br></pre></td></tr></table></figure>
<p>然後我們要安裝<a href="https://github.com/tj/n/" target="_blank" rel="noopener">n</a>來幫我們管理nodejs版本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install -g n</span><br></pre></td></tr></table></figure>

<h2 id="安裝PM2"><a href="#安裝PM2" class="headerlink" title="安裝PM2"></a>安裝PM2</h2><p>接下來要開始正式安裝PM2：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install pm2 -g</span><br></pre></td></tr></table></figure>
<p>完成PM2安裝步驟：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pm2 completion install</span><br></pre></td></tr></table></figure>
<p>查看監控項目列表：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pm2 ls</span><br></pre></td></tr></table></figure>
<img src="/2019/03/24/pm2-install/pm2list.png" class="">
<p>查看監控詳細內容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pm2 monit</span><br></pre></td></tr></table></figure>
<img src="/2019/03/24/pm2-install/pm2monit.png" class="">]]></content>
      <categories>
        <category>pm2</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>ubuntu</tag>
        <tag>pm2</tag>
      </tags>
  </entry>
  <entry>
    <title>安裝Tomcat</title>
    <url>/2019/03/16/tomcat-install/</url>
    <content><![CDATA[<h2 id="安裝Tomcat"><a href="#安裝Tomcat" class="headerlink" title="安裝Tomcat"></a>安裝Tomcat</h2><p>先下載maven：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wget https://www-eu.apache.org/dist/tomcat/tomcat-9/v9.0.16/bin/apache-tomcat-9.0.16.tar.gz</span><br></pre></td></tr></table></figure>
<p>解開包：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ tar xzvf apache-tomcat-9.0.16.tar.gz</span><br></pre></td></tr></table></figure>
<p>移動到/opt/底下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mv apache-tomcat-9.0.16 /opt</span><br></pre></td></tr></table></figure>

<h2 id="設置Tomcat環境變數"><a href="#設置Tomcat環境變數" class="headerlink" title="設置Tomcat環境變數"></a>設置Tomcat環境變數</h2><p>打開/etc/profile這個檔案並且在末尾加入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> TOMCAT_HOME=/opt/apache-tomcat-9.0.16</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$TOMCAT_HOME</span>/bin</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>tomcat</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title>安裝Maven</title>
    <url>/2019/03/16/maven-install/</url>
    <content><![CDATA[<h2 id="安裝Maven"><a href="#安裝Maven" class="headerlink" title="安裝Maven"></a>安裝Maven</h2><p>先下載maven：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wget https://www-us.apache.org/dist/maven/maven-3/3.6.0/binaries/apache-maven-3.6.0-bin.tar.gz</span><br></pre></td></tr></table></figure>
<p>解開包:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ tar xzvf apache-maven-3.6.0-bin.tar.gz</span><br></pre></td></tr></table></figure>
<p>移動到/opt/底下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mv apache-maven-3.6.0-bin /opt</span><br></pre></td></tr></table></figure>

<h2 id="設置Maven環境變數"><a href="#設置Maven環境變數" class="headerlink" title="設置Maven環境變數"></a>設置Maven環境變數</h2><p>打開/etc/profile這個檔案並且在末尾加入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> MAVEN_HOME=/opt/apache-maven-3.6.0</span><br><span class="line"><span class="built_in">export</span> M2_HOME=/opt/apache-maven-3.6.0</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$MAVEN_HOME</span>/bin</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$M2_HOME</span>/bin</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>maven</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu安裝Redis</title>
    <url>/2019/03/16/ubuntu-installredis/</url>
    <content><![CDATA[<h2 id="安裝redis"><a href="#安裝redis" class="headerlink" title="安裝redis"></a>安裝redis</h2><p>在ubuntu底下安裝redis跟安裝mariadb一樣，<br>依靠apt指令就可以安裝完成：</p>
<p>先更新套件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt update</span><br><span class="line">$ sudo apt upgrade</span><br></pre></td></tr></table></figure>

<p>安装Redis：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt install redis-server</span><br></pre></td></tr></table></figure>

<p>安裝完成後redis會自動加入到服務中，查看服務：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo systemctl status redis</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="修改redis設置"><a href="#修改redis設置" class="headerlink" title="修改redis設置"></a>修改redis設置</h2><p>後我們要提供給遠端使用者使用就需要去修改設定檔，<br>打開/etc/redis/redis.conf，找到bind且將他註解掉</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># IF YOU ARE SURE YOU WANT YOUR INSTANCE TO LISTEN TO ALL THE INTERFACES</span></span><br><span class="line"><span class="comment"># JUST COMMENT THE FOLLOWING LINE.</span></span><br><span class="line"><span class="comment"># ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span></span><br><span class="line"><span class="comment"># bind 127.0.0.1 ::1</span></span><br></pre></td></tr></table></figure>

<p>之後再重新啟動redis就可以了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo systemctl restart redis</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>ubuntu</tag>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu安裝MariaDB</title>
    <url>/2019/03/16/ubuntu-installmariadb/</url>
    <content><![CDATA[<h2 id="安裝mariadb"><a href="#安裝mariadb" class="headerlink" title="安裝mariadb"></a>安裝mariadb</h2><p>在ubuntu底下安裝mariadb其實很方便，<br>只要幾個指令就可以完成了：</p>
<p>先更新套件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt update</span><br><span class="line">$ sudo apt upgrade</span><br></pre></td></tr></table></figure>

<p>安装MariaDB：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt install mariadb-server</span><br></pre></td></tr></table></figure>

<p>啟動服務：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo systemctl start mysql</span><br><span class="line">$ sudo systemctl <span class="built_in">enable</span> mysql</span><br></pre></td></tr></table></figure>

<p>查看服務：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo systemctl status mysql</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="初始化mariadb"><a href="#初始化mariadb" class="headerlink" title="初始化mariadb"></a>初始化mariadb</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo mysql_secure_installation</span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否要設置root權限密碼</span></span><br><span class="line">- Set root password? [Y/n] y</span><br><span class="line"><span class="comment"># 是否要移除匿名登入</span></span><br><span class="line">- Remove anonymous users? [Y/n] y</span><br><span class="line"><span class="comment"># 是否關閉遠端登入</span></span><br><span class="line">- Disallow root login remotely? [Y/n] y</span><br><span class="line"><span class="comment"># 是否移除test預設庫</span></span><br><span class="line">- Remove <span class="built_in">test</span> database and access to it? [Y/n] y</span><br><span class="line"><span class="comment"># 是否重新載入資料表權限</span></span><br><span class="line">- Reload privilege tables now? [Y/n] y</span><br></pre></td></tr></table></figure>

<p>完成後我們可試著本機登入查看：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo mysql -u root -p</span><br></pre></td></tr></table></figure>

<h2 id="建立遠端使用者權限"><a href="#建立遠端使用者權限" class="headerlink" title="建立遠端使用者權限"></a>建立遠端使用者權限</h2><p>初始化db之後我們還需要建立一組帳號，提供使用者遠端登入使用</p>
<p>建立使用者與權限：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 建立使用者</span></span><br><span class="line">$ CREATE USER <span class="string">'my_account'</span>@<span class="string">'%'</span> IDENTIFIED BY <span class="string">'my_password'</span>;</span><br><span class="line"><span class="comment"># 建立使用者權限</span></span><br><span class="line">$ GRANT ALL PRIVILEGES ON *.* TO <span class="string">'my_account'</span>@<span class="string">'%'</span> IDENTIFIED BY <span class="string">'my_password'</span> WITH GRANT OPTION;</span><br><span class="line"><span class="comment"># 刷新設置</span></span><br><span class="line">$ FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>

<p>查看結果：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看使用者</span></span><br><span class="line">$ SELECT host,user,password FROM mysql.user;</span><br><span class="line"><span class="comment"># 查看使用者權限</span></span><br><span class="line">$ SHOW GRANTS FOR <span class="string">'my_account'</span>;</span><br></pre></td></tr></table></figure>

<p>完成後我們嘗試遠端登入查看：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mysql -h 192.168.0.100 -u <span class="string">'my_account'</span> -p</span><br></pre></td></tr></table></figure>

<h2 id="修改mariadb設置"><a href="#修改mariadb設置" class="headerlink" title="修改mariadb設置"></a>修改mariadb設置</h2><p>如果還是不行就需要去修改mariadb的設定檔<br>打開/etc/mysql/mariadb.conf.d/50-server.cnf，找到bind-address且將他註解掉</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Instead of skip-networking the default is now to listen only on</span></span><br><span class="line"><span class="comment"># localhost which is more compatible and is not less secure.</span></span><br><span class="line"><span class="comment"># bind-address  = 127.0.0.1</span></span><br></pre></td></tr></table></figure>

<p>之後再重新啟動mariadb就可以了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo systemctl restart mysql</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>ubuntu</tag>
        <tag>mariadb</tag>
      </tags>
  </entry>
  <entry>
    <title>安裝OpenJDK</title>
    <url>/2019/03/10/java-installopenjdk/</url>
    <content><![CDATA[<h2 id="安裝OpenJDK"><a href="#安裝OpenJDK" class="headerlink" title="安裝OpenJDK"></a>安裝OpenJDK</h2><p>安裝預設版本OpenJDK</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install default-jdk</span><br></pre></td></tr></table></figure>
<p>安裝指定版本OpenJDK</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install openjdk-8-jdk</span><br></pre></td></tr></table></figure>
<p>安裝指定版本OpenJRE</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install openjdk-8-jre</span><br></pre></td></tr></table></figure>

<h2 id="設定系統-Java-版本"><a href="#設定系統-Java-版本" class="headerlink" title="設定系統 Java 版本"></a>設定系統 Java 版本</h2><p>先查看當前有哪些版本可供設定</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ update-alternatives --query java</span><br><span class="line"><span class="comment">#或者</span></span><br><span class="line">$ update-alternatives --display java</span><br></pre></td></tr></table></figure>
<p>設定版本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo update-alternatives --config java</span><br></pre></td></tr></table></figure>

<h2 id="設置Java環境變數"><a href="#設置Java環境變數" class="headerlink" title="設置Java環境變數"></a>設置Java環境變數</h2><p>打開/etc/profile這個檔案並且在末尾加入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>jdk</tag>
      </tags>
  </entry>
  <entry>
    <title>解決Jenkins執行sudo命令出現錯誤</title>
    <url>/2019/03/10/jenkins-sudoerror/</url>
    <content><![CDATA[<p>我們在使用jenkins部屬任務的時候常常需要使用到腳本，<br>如果在腳本中使用到了sudo這個令命時，有可能會產生以下錯誤：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo: no tty present and no askpass program specified</span><br></pre></td></tr></table></figure>

<p>解决方式：<br>在jenkins host server上執行以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo visudo</span><br></pre></td></tr></table></figure>
<p>在末尾加入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">jenkins ALL=(ALL) NOPASSWD: ALL</span><br></pre></td></tr></table></figure>
<p>Ctrl+O 存檔(ps.存檔的時候副檔名不要加入.tmp，這樣即可覆蓋原來的檔案)<br>Ctrl+X 離開</p>
<p>最後重啟jenkins</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo bash /etc/init.d/jenkins restart</span><br><span class="line"><span class="comment">#另外也可以這樣</span></span><br><span class="line">$ sudo service jenkins restart</span><br></pre></td></tr></table></figure>

<p>最後再重新建構一次任務即可</p>
]]></content>
      <categories>
        <category>jenkins</category>
      </categories>
      <tags>
        <tag>jenkins</tag>
        <tag>error</tag>
      </tags>
  </entry>
  <entry>
    <title>設置Linux環境變數</title>
    <url>/2019/03/10/linux-environmentvariables/</url>
    <content><![CDATA[<p>我們在進行環境開發的時候常常需要用到一些系統路徑，<br>那這些路徑我們可以用系統的環境變數來讓他大大縮減打字的長度，<br>以下就介紹我們如何來建立這些環境變數</p>
<p>linux提供兩種設置環境變數的方式 -&gt; 使用者環境變數 &amp; 系統環境變數</p>
<a id="more"></a>

<h2 id="使用者環境變數"><a href="#使用者環境變數" class="headerlink" title="使用者環境變數"></a>使用者環境變數</h2><p>使用者環境變數儲存在以下檔案中：<br>~/.profile<br>~/.bashrc<br>~/.bash_profile<br>~/.bash_login</p>
<h2 id="系統環境變數"><a href="#系統環境變數" class="headerlink" title="系統環境變數"></a>系統環境變數</h2><p>系統環境變數儲存在以下檔案中：<br>/etc/profile<br>/etc/profile.d<br>/etc/bash.bashrc</p>
<h2 id="加入系統環境變數"><a href="#加入系統環境變數" class="headerlink" title="加入系統環境變數"></a>加入系統環境變數</h2><p>打開/etc/profile這個檔案並且在末尾加入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/lib/jvm/jdk1.7.0</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin</span><br></pre></td></tr></table></figure>

<p>環境變數更改後,將在使用者下次登陸時生效<br>如果想立刻生效,則執行下面的語句</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure>

<p>生效後我們可以進行測試</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="variable">$JAVA_HOME</span></span><br></pre></td></tr></table></figure>

<p>成功後應當看到剛剛我們我設置的路徑<br>另外如果想查看當前系統所設置的路徑有哪些可以輸入：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>
<p>他會顯示當前所有的環境路徑有哪些</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>環境變數</tag>
      </tags>
  </entry>
  <entry>
    <title>Jenkins + Gitlab + Tomcat 自動化部署</title>
    <url>/2018/03/29/jenkins-work/</url>
    <content><![CDATA[<p>前面做這麼多都是為了現在做準備，<br>假設我們的workflow</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">程式更新代碼至gitlab -&gt; 企劃或者anyone按個按鍵 -&gt; jenkins自動幫你完成專案更新代碼並重新佈署</span><br></pre></td></tr></table></figure>
<p>這樣我們可以減少人力去處理這些雜事<br>更能專心再業務處理的需求上<br>下面就來看看怎麼完成這些設定</p>
<a id="more"></a>

<p>新增作業</p>
<img src="/2018/03/29/jenkins-work/jenkins1.jpg" class="">

<p>填好項目名稱並選擇free-style</p>
<img src="/2018/03/29/jenkins-work/jenkins2.jpg" class="">

<p>這步驟是讓你自訂workspace路徑，不設定就會是預設項目路徑</p>
<img src="/2018/03/29/jenkins-work/jenkins3.jpg" class="">

<p>填入你的項目git來源，並使用之前設定好的ssl連線憑證</p>
<img src="/2018/03/29/jenkins-work/jenkins4.jpg" class="">

<p>選擇maven作為項目打包工具並填入相關腳本指令<br>之後在執行shell script把maven打包好的檔案轉移至tomcat目錄底下在啟動tomcat</p>
<img src="/2018/03/29/jenkins-work/jenkins5.jpg" class="">

<p>儲存好相關設置之後再執行建置</p>
<img src="/2018/03/29/jenkins-work/jenkins6.jpg" class="">

<p>一切就自動化部署完成了!</p>
]]></content>
      <categories>
        <category>jenkins</category>
      </categories>
      <tags>
        <tag>gitlab</tag>
        <tag>jenkins</tag>
        <tag>tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title>Jenkins + Gitlab + Maven + JDK 設定</title>
    <url>/2018/03/29/jenkins-setting/</url>
    <content><![CDATA[<p>在jenkins安裝好後還需要一些進一步的設定，<br>才能讓其他工具好好運作，<br>下面我們就開始做完這些設定</p>
<a id="more"></a>

<p>進入jenkins設定</p>
<img src="/2018/03/29/jenkins-setting/jenkins1.jpg" class="">

<p>進入Global Tool Configuration</p>
<img src="/2018/03/29/jenkins-setting/jenkins2.jpg" class="">

<p>設置你的JDK安裝路徑</p>
<img src="/2018/03/29/jenkins-setting/jenkins3.jpg" class="">

<p>設置你的GIT安裝路徑</p>
<img src="/2018/03/29/jenkins-setting/jenkins4.jpg" class="">

<p>設置你的MAVEN安裝路徑</p>
<img src="/2018/03/29/jenkins-setting/jenkins5.jpg" class="">

<p>接下來生成SSL金鑰，如果已經有了可以跳過這一步</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C</span><br></pre></td></tr></table></figure>
<p>接下來去Credentials設置SSL連線配置</p>
<img src="/2018/03/29/jenkins-setting/jenkins6.jpg" class="">

<p>最後我們要去把jenkins的系統權限加入到root裡面，<br>不然他在跑shell會有權限問題</p>
<p>將jenkins帳號加入root群組中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo gpasswd -a root jenkins</span><br></pre></td></tr></table></figure>
<p>修改jenkins文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo nano /etc/default/jenkins</span><br></pre></td></tr></table></figure>
<p>修改文件中這兩行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">JENKINS_USER=root</span><br><span class="line">JENKINS_GROUP=root</span><br></pre></td></tr></table></figure>
<p>完成這些設定就大功告成啦!</p>
]]></content>
      <categories>
        <category>jenkins</category>
      </categories>
      <tags>
        <tag>gitlab</tag>
        <tag>jdk</tag>
        <tag>jenkins</tag>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>Jenkins搭建</title>
    <url>/2018/03/24/jenkins-install/</url>
    <content><![CDATA[<p>要搭建jenkins需要安裝JDK，以下提供簡易安裝方式</p>
<h2 id="安裝OpenJDK"><a href="#安裝OpenJDK" class="headerlink" title="安裝OpenJDK"></a>安裝OpenJDK</h2><p>安裝OpenJDK</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install default-jdk</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="jenkins佈署"><a href="#jenkins佈署" class="headerlink" title="jenkins佈署"></a>jenkins佈署</h2><p><a href="https://jenkins.io/" target="_blank" rel="noopener">jenkins官網</a></p>
<p>基本上按照官方提供的方式安裝即可，首先添加套件金鑰</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wget -q -O - https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo apt-key add -</span><br></pre></td></tr></table></figure>
<p>添加套件來源列表</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo sh -c <span class="string">'echo deb http://pkg.jenkins-ci.org/debian binary/ &gt; /etc/apt/sources.list.d/jenkins.list'</span></span><br></pre></td></tr></table></figure>
<p>最後進行安裝</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install jenkins</span><br></pre></td></tr></table></figure>
<p>修改連線配置(/etc/default/jenkins)，基本上默認端口為8080</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">HTTP_PORT=8080</span><br></pre></td></tr></table></figure>
<p>啟動腳本路徑(/etc/init.d/jenkins)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo bash /etc/init.d/jenkins  &#123;start|stop|status|restart|force-reload&#125;</span><br></pre></td></tr></table></figure>
<p>另外也可以這樣</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo service jenkins  &#123;start|stop|status|restart|force-reload&#125;</span><br></pre></td></tr></table></figure>
<p>啟動之後需要設置初始密碼</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo cat /var/lib/jenkins/secrets/initialAdminPassword</span><br><span class="line"></span><br><span class="line">9b4e46e0c33e4e99b9bbc916a7adccac</span><br></pre></td></tr></table></figure>
<p>輸入初始密碼</p>
<img src="/2018/03/24/jenkins-install/jenkins1.jpg" class="">
<p>選擇預設插件集合</p>
<img src="/2018/03/24/jenkins-install/jenkins2.jpg" class="">
<p>等待初始化完成</p>
<img src="/2018/03/24/jenkins-install/jenkins3.jpg" class="">
<p>最後再建立管理者帳號就大功告成了</p>
<img src="/2018/03/24/jenkins-install/jenkins4.jpg" class="">]]></content>
      <categories>
        <category>jenkins</category>
      </categories>
      <tags>
        <tag>佈署</tag>
        <tag>jenkins</tag>
      </tags>
  </entry>
  <entry>
    <title>GitLab搭建與中文化</title>
    <url>/2018/03/23/gitlab-install/</url>
    <content><![CDATA[<p>網路上已有蠻多類似的文章，我就不再過多的論述了<br>就寫寫佈署的時一些問題就好</p>
<h2 id="gitlab佈署"><a href="#gitlab佈署" class="headerlink" title="gitlab佈署"></a>gitlab佈署</h2><p>直接上官網<br><a href="https://about.gitlab.com/" target="_blank" rel="noopener">gitlab官網</a><br><a href="https://www.gitlab.com.cn/" target="_blank" rel="noopener">gitlab中文社群</a></p>
<p>我佈署的環境是virtualbox+ubuntu<br>基本上照著官網的install指令去佈署就能成功佈署最新版本</p>
<p>如果是要另外進行中文化的佈署就必需去中文社群看看有沒有對應的版本<br><a href="https://gitlab.com/larryli/gitlab" target="_blank" rel="noopener">中文化社群</a></p>
<p>例如我佈署的gitlab版本是8.8.9那我就需要找到中文化對應的版本<br>p.s 版號只需要對應前兩個版號就可以了</p>
<p>那該如何指定安裝指定的版號</p>
<p>官網提供的安裝指令應該如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo EXTERNAL_URL=<span class="string">"http://gitlab.example.com"</span> apt-get install gitlab-ee</span><br></pre></td></tr></table></figure>
<p>上面的指令其實是預先設定好gitlab指定的網址與安裝最新的版本<br>不過我通常都把連線的網址都在佈署完成之後再另外設定<br>所以我如果要安裝<a href="https://packages.gitlab.com/gitlab/gitlab-ee/packages/ubuntu/trusty/gitlab-ee_8.8.9-ee.0_amd64.deb" target="_blank" rel="noopener">8.8.9</a>的版本，那指令應該如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get install gitlab-ee=8.8.9-ee.0</span><br></pre></td></tr></table></figure>
<p>安裝完成後再去更改external_url就好，更改路徑如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/etc/gitlab/gitlab.rb</span><br></pre></td></tr></table></figure>
<p>設置連線配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">external_url <span class="string">'http://127.0.0.1'</span></span><br></pre></td></tr></table></figure>
<p>最後再重新設定配置就完成了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo gitlab-ctl reconfigure</span><br></pre></td></tr></table></figure>
<p>通常第一次登入會讓你重新設置root的密碼<br>修改完再登入你就可以看到gitlab的歡迎畫面了</p>
<a id="more"></a>

<p>如果只需要英文版本的那你看到這裡就行了<br>接下來講講如何佈署成中文</p>
<h2 id="gitlab中文化"><a href="#gitlab中文化" class="headerlink" title="gitlab中文化"></a>gitlab中文化</h2><p>第一步先用git clone整個中文開發項目</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://gitlab.com/larryli/gitlab.git</span><br></pre></td></tr></table></figure>
<p>clone下來之後就可以開始我們的中文化大業了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 先進入clone下來的項目中</span></span><br><span class="line">$ <span class="built_in">cd</span> gitlab</span><br><span class="line"><span class="comment"># 可以先看看所有版本的開發分支</span></span><br><span class="line"><span class="comment"># git tag</span></span><br></pre></td></tr></table></figure>
<p>比對所有對應的本版分支</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo git diff v8.8.0..8.8.5.zh1 &gt; /tmp/8.8.diff</span><br></pre></td></tr></table></figure>
<p>停掉gitlab運行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo gitlab-ctl stop</span><br></pre></td></tr></table></figure>
<p>應用中文化補丁</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo patch -d /opt/gitlab/embedded/service/gitlab-rails -p1 &lt; /tmp/8.8.diff</span><br></pre></td></tr></table></figure>
<p>接下來就一直不斷enter到補丁完成，重新啟動gitlab</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo gitlab-ctl start</span><br></pre></td></tr></table></figure>
<p>重新登入之後就可看到熟悉的中文化介面</p>
<img src="/2018/03/23/gitlab-install/gitlab.jpg" class="">]]></content>
      <categories>
        <category>gitlab</category>
      </categories>
      <tags>
        <tag>佈署</tag>
        <tag>gitlab</tag>
        <tag>中文化</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2018/03/01/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
